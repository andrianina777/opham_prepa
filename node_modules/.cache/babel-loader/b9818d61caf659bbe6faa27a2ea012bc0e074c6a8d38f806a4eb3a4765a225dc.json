{"ast":null,"code":"import { resolveDirective as _resolveDirective, createVNode as _createVNode } from \"vue\";\n// Components\nimport { VAvatar } from \"../VAvatar/index.mjs\";\nimport { VCardSubtitle } from \"./VCardSubtitle.mjs\";\nimport { VCardTitle } from \"./VCardTitle.mjs\";\nimport { VDefaultsProvider } from \"../VDefaultsProvider/index.mjs\"; // Composables\nimport { IconValue } from \"../../composables/icons.mjs\";\nimport { makeDensityProps } from \"../../composables/density.mjs\"; // Utility\nimport { genericComponent, useRender } from \"../../util/index.mjs\"; // Types\nexport const VCardItem = genericComponent()({\n  name: 'VCardItem',\n  props: {\n    appendAvatar: String,\n    appendIcon: IconValue,\n    prependAvatar: String,\n    prependIcon: IconValue,\n    subtitle: String,\n    title: String,\n    ...makeDensityProps()\n  },\n  setup(props, _ref) {\n    let {\n      slots\n    } = _ref;\n    useRender(() => {\n      const hasPrependMedia = !!(props.prependAvatar || props.prependIcon);\n      const hasPrepend = !!(hasPrependMedia || slots.prepend);\n      const hasAppendMedia = !!(props.appendAvatar || props.appendIcon);\n      const hasAppend = !!(hasAppendMedia || slots.append);\n      const hasTitle = !!(props.title || slots.title);\n      const hasSubtitle = !!(props.subtitle || slots.subtitle);\n      return _createVNode(\"div\", {\n        \"class\": \"v-card-item\"\n      }, [hasPrepend && _createVNode(\"div\", {\n        \"key\": \"prepend\",\n        \"class\": \"v-card-item__prepend\"\n      }, [!slots.prepend ? hasPrependMedia && _createVNode(VAvatar, {\n        \"key\": \"prepend-avatar\",\n        \"density\": props.density,\n        \"icon\": props.prependIcon,\n        \"image\": props.prependAvatar\n      }, null) : _createVNode(VDefaultsProvider, {\n        \"key\": \"prepend-defaults\",\n        \"disabled\": !hasPrependMedia,\n        \"defaults\": {\n          VAvatar: {\n            density: props.density,\n            icon: props.prependIcon,\n            image: props.prependAvatar\n          }\n        }\n      }, slots.prepend)]), _createVNode(\"div\", {\n        \"class\": \"v-card-item__content\"\n      }, [hasTitle && _createVNode(VCardTitle, {\n        \"key\": \"title\"\n      }, {\n        default: () => [slots.title?.() ?? props.title]\n      }), hasSubtitle && _createVNode(VCardSubtitle, {\n        \"key\": \"subtitle\"\n      }, {\n        default: () => [slots.subtitle?.() ?? props.subtitle]\n      }), slots.default?.()]), hasAppend && _createVNode(\"div\", {\n        \"key\": \"append\",\n        \"class\": \"v-card-item__append\"\n      }, [!slots.append ? hasAppendMedia && _createVNode(VAvatar, {\n        \"key\": \"append-avatar\",\n        \"density\": props.density,\n        \"icon\": props.appendIcon,\n        \"image\": props.appendAvatar\n      }, null) : _createVNode(VDefaultsProvider, {\n        \"key\": \"append-defaults\",\n        \"disabled\": !hasAppendMedia,\n        \"defaults\": {\n          VAvatar: {\n            density: props.density,\n            icon: props.appendIcon,\n            image: props.appendAvatar\n          }\n        }\n      }, slots.append)])]);\n    });\n    return {};\n  }\n});","map":{"version":3,"mappings":"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","names":["VAvatar","VCardSubtitle","VCardTitle","VDefaultsProvider","IconValue","makeDensityProps","genericComponent","useRender","VCardItem","name","props","appendAvatar","String","appendIcon","prependAvatar","prependIcon","subtitle","title","setup","slots","hasPrependMedia","hasPrepend","prepend","hasAppendMedia","hasAppend","append","hasTitle","hasSubtitle","density","icon","image","default"],"sources":["../../../src/components/VCard/VCardItem.tsx"],"sourcesContent":["// Components\nimport { VAvatar } from '@/components/VAvatar'\nimport { VCardSubtitle } from './VCardSubtitle'\nimport { VCardTitle } from './VCardTitle'\nimport { VDefaultsProvider } from '@/components/VDefaultsProvider'\n\n// Composables\nimport { IconValue } from '@/composables/icons'\nimport { makeDensityProps } from '@/composables/density'\n\n// Utility\nimport { genericComponent, useRender } from '@/util'\n\n// Types\nimport type { MakeSlots } from '@/util'\n\nexport type VCardItemSlots = MakeSlots<{\n  default: []\n  prepend: []\n  append: []\n  title: []\n  subtitle: []\n}>\n\nexport const VCardItem = genericComponent<VCardItemSlots>()({\n  name: 'VCardItem',\n\n  props: {\n    appendAvatar: String,\n    appendIcon: IconValue,\n    prependAvatar: String,\n    prependIcon: IconValue,\n    subtitle: String,\n    title: String,\n\n    ...makeDensityProps(),\n  },\n\n  setup (props, { slots }) {\n    useRender(() => {\n      const hasPrependMedia = !!(props.prependAvatar || props.prependIcon)\n      const hasPrepend = !!(hasPrependMedia || slots.prepend)\n      const hasAppendMedia = !!(props.appendAvatar || props.appendIcon)\n      const hasAppend = !!(hasAppendMedia || slots.append)\n      const hasTitle = !!(props.title || slots.title)\n      const hasSubtitle = !!(props.subtitle || slots.subtitle)\n\n      return (\n        <div class=\"v-card-item\">\n          { hasPrepend && (\n            <div key=\"prepend\" class=\"v-card-item__prepend\">\n              { !slots.prepend ? (\n                hasPrependMedia && (\n                  <VAvatar\n                    key=\"prepend-avatar\"\n                    density={ props.density }\n                    icon={ props.prependIcon }\n                    image={ props.prependAvatar }\n                  />\n                )\n              ) : (\n                <VDefaultsProvider\n                  key=\"prepend-defaults\"\n                  disabled={ !hasPrependMedia }\n                  defaults={{\n                    VAvatar: {\n                      density: props.density,\n                      icon: props.prependIcon,\n                      image: props.prependAvatar,\n                    },\n                  }}\n                  v-slots:default={ slots.prepend }\n                />\n              )}\n            </div>\n          )}\n\n          <div class=\"v-card-item__content\">\n            { hasTitle && (\n              <VCardTitle key=\"title\">\n                { slots.title?.() ?? props.title }\n              </VCardTitle>\n            )}\n\n            { hasSubtitle && (\n              <VCardSubtitle key=\"subtitle\">\n                { slots.subtitle?.() ?? props.subtitle }\n              </VCardSubtitle>\n            )}\n\n            { slots.default?.() }\n          </div>\n\n          { hasAppend && (\n            <div key=\"append\" class=\"v-card-item__append\">\n              { !slots.append ? (\n                hasAppendMedia && (\n                  <VAvatar\n                    key=\"append-avatar\"\n                    density={ props.density }\n                    icon={ props.appendIcon }\n                    image={ props.appendAvatar }\n                  />\n                )\n              ) : (\n                <VDefaultsProvider\n                  key=\"append-defaults\"\n                  disabled={ !hasAppendMedia }\n                  defaults={{\n                    VAvatar: {\n                      density: props.density,\n                      icon: props.appendIcon,\n                      image: props.appendAvatar,\n                    },\n                  }}\n                  v-slots:default={ slots.append }\n                />\n              )}\n           </div>\n          )}\n        </div>\n      )\n    })\n\n    return {}\n  },\n})\n\nexport type VCardItem = InstanceType<typeof VCardItem>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}