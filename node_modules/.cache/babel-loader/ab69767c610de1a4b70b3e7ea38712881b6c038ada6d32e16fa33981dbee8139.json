{"ast":null,"code":"import MyDialog from '@/components/DialogFullScreen.vue';\nimport MyTable from '@/components/MyTable.vue';\nimport MyList from '@/components/MyList.vue';\nimport MyTextarea from '@/components/MyTextarea.vue';\nimport MyTextField from '@/components/MyTextField.vue';\nimport MySelect from '@/components/MySelect.vue';\nimport Alert from '@/components/Alert.vue';\nimport ConfirmationDialog from '@/components/ConfirmationDialog.vue';\nimport { prepCommandStore } from \"@/store/Apreparer/genererPrep\";\nimport { useCreateBP } from \"@/store/Apreparer/creationBP\";\nimport { VDataTable } from 'vuetify/labs/VDataTable';\nimport { useRoute, useRouter } from 'vue-router';\nimport MyLoading from '@/components/Loading.vue';\nimport { useReportBPStore } from \"@/store/report/printBP\";\nimport { ref, reactive, onMounted, computed, defineEmits, defineComponent, watch, onBeforeMount, onUpdated } from \"vue\";\nexport default defineComponent({\n  components: {\n    MyDialog,\n    MyTable,\n    MyList,\n    MyTextarea,\n    MyTextField,\n    MySelect,\n    Alert,\n    ConfirmationDialog,\n    MyLoading\n  },\n  name: 'preparerCmd',\n  setup() {\n    const showDialog = ref(false);\n    const route = useRoute();\n    const CC = route.params.CC;\n    const router = useRouter();\n    const storePrep = prepCommandStore();\n    const storeCreBP = useCreateBP();\n    const loading = computed(() => storePrep.loading);\n    const updated = ref(false);\n    const chagmt = ref(false);\n    const articles = ref(null);\n    const selectEtat = ref(null);\n    const rayonEtat = ref(null);\n    const isError = ref(false);\n    const isVide = ref(false);\n    const isVideL6 = ref(false);\n    const selectedDepotCmd = ref(null);\n    const dialog = ref(false);\n    let message = ref(\"\");\n    const storePrintBP = useReportBPStore();\n    const dialogVisible = ref(false);\n    let titre_detail = ref(\"\");\n    function closeDialog() {\n      dialogVisible.value = false;\n      history.back();\n      // router.push({ name: 'attePrepa' });\n    }\n\n    const headersRayonCmd = [{\n      text: 'Rayon',\n      align: 'start',\n      value: 'rayon',\n      sortable: true\n    }, {\n      text: 'Nb Article',\n      align: 'start',\n      value: 'nb_article'\n    }, {\n      text: 'Select',\n      value: 'etat'\n    }];\n    const headers = [{\n      title: 'commande',\n      align: 'start',\n      key: 'code_CCL'\n    }, {\n      title: 'Article',\n      align: 'center',\n      key: 'article',\n      sortable: true\n    }, {\n      title: 'Libellé',\n      align: 'start',\n      key: 'libelle'\n    }, {\n      title: 'Quantité en Prep',\n      align: 'center',\n      key: 'qte_a_preparer'\n    }, {\n      title: 'Quantité Dispo',\n      align: 'center',\n      key: 'dispo'\n    }, {\n      title: 'Transfert',\n      align: 'center',\n      key: 'transfert'\n    }, {\n      title: 'etat',\n      align: 'center',\n      key: 'etat'\n    }];\n    onBeforeMount(() => {\n      dialogVisible.value = true;\n      titre_detail.value = \"Preparation du Commande \" + CC;\n      fetchPrepa();\n    });\n    const fetchPrepa = async () => {\n      storePrep.params.code = CC;\n      await storePrep.fetchPreparerCmd();\n      if (storePrep.depotCmd.length > 0) {\n        selectedDepotCmd.value = storePrep.depotCmd[0];\n      }\n      filteredListeComp();\n    };\n    const selectItem = item => {\n      selectedDepotCmd.value = item;\n      reactiveEtat();\n      filteredListeComp();\n    };\n    const reactiveEtat = () => {\n      storePrep.rayonCmd.forEach(item => {\n        item.etat = true;\n      });\n      storePrep.articleCmd.forEach(item => {\n        if (item.transfert !== 'Transfert' && item.transfert !== 'Sans Empl' && item.transfert !== 'Porte') {\n          item.etat = true;\n        }\n      });\n    };\n    const totalArticles = computed(() => {\n      return filteredArticle.value.length;\n    });\n    const totalTransfert = computed(() => {\n      return filteredArticle.value.filter(item => item.transfert === \"Transfert\").length;\n    });\n    const total_T = computed(() => {\n      return filteredListeCmd.value.filter(item => item.transfert === \"Transfert\" || item.transfert === \"Porte\" || item.transfert === \"Sans Empl\").length;\n    });\n    const totalPorte = computed(() => {\n      return filteredArticle.value.filter(item => item.transfert === \"Porte\").length;\n    });\n    const totalSansEmpl = computed(() => {\n      return filteredArticle.value.filter(item => item.transfert === \"Sans Empl\").length;\n    });\n    const depotDefaut = computed(() => {\n      if (!selectedDepotCmd.value && storePrep.depotCmd.length > 0) {\n        selectedDepotCmd.value = storePrep.depotCmd[0];\n      }\n      return selectedDepotCmd.value.depot;\n    });\n    const filteredArticle = computed(() => {\n      if (selectedDepotCmd.value && !rayonEtat.value) {\n        return storePrep.articleCmd.filter(item => item.depot.trim() === selectedDepotCmd.value.depot.trim());\n      } else if (rayonEtat.value) {\n        return storePrep.articleCmd.filter(item => item.depot.trim() === selectedDepotCmd.value.depot.trim() && filteredListeCmd.value.some(list => list.article.trim() === item.article.trim() && list.depot.trim() === item.depot.trim()));\n      } else {\n        return storePrep.articleCmd;\n      }\n    });\n    const filteredRayonCmd = computed(() => {\n      if (selectedDepotCmd.value && storePrep.depotCmd.length > 0) {\n        return storePrep.rayonCmd.filter(item => item.depot.trim() === selectedDepotCmd.value.depot.trim());\n      } else {\n        return storePrep.rayonCmd;\n      }\n    });\n    const filteredListeCmd = computed(() => {\n      if (selectedDepotCmd.value && !rayonEtat.value) {\n        return storePrep.listeCmd.filter(item => item.depot.trim() === selectedDepotCmd.value.depot.trim());\n      } else if (rayonEtat.value) {\n        return storePrep.listeCmd.filter(item => item.depot.trim() === selectedDepotCmd.value.depot.trim() && filteredRayonCmd.value.some(rayon => rayon.rayon.trim() === item.rayon.trim() && rayon.etat === true));\n      } else {\n        return storePrep.listeCmd;\n      }\n    });\n    const handleCheckboxClick = item => {\n      selectEtat.value = item;\n      filteredListeCmdEtat();\n    };\n    const filteredListeCmdEtat = () => {\n      let updatedListeCmd = filteredListeCmd.value.map(item => {\n        if (item.article.trim() === selectEtat.value.value.article.trim()) {\n          item.etat = !selectEtat.value.value.etat;\n        }\n        return item;\n      });\n      filteredListeCmd.value = updatedListeCmd;\n    };\n    const filteredListeComp = () => {\n      filteredListeCmd.value.forEach(itemA => {\n        const itemB = filteredArticle.value.find(itemB => itemB.article.trim() === itemA.article.trim() && itemB.depot.trim() === itemA.depot.trim());\n        if (itemB) {\n          itemA.etat = itemB.etat;\n        }\n      });\n      updated.value = true;\n    };\n    const handleCheckboxChange = item => {\n      rayonEtat.value = item;\n    };\n    const isPrioGros = () => {\n      const itemB = storePrep.depotCmd.find(itemB => itemB.depot.trim() === 'GROS');\n      if (selectedDepotCmd.value && itemB) {\n        if (selectedDepotCmd.value.depot.trim() !== itemB.depot) {\n          return false;\n        } else {\n          return true;\n        }\n      } else {\n        return true;\n      }\n    };\n    const onPrepareClick = async () => {\n      const isGros = isPrioGros();\n      if (!selectedDepotCmd.value) {\n        selectedDepotCmd.value = storePrep.depotCmd[0];\n      }\n      message.value = \"Voulez vous préparer ces articles côchés dans le dépôt \" + selectedDepotCmd.value.depot;\n      if (isGros) {\n        isError.value = false;\n        dialog.value = true;\n      } else {\n        isError.value = true;\n        dialog.value = false;\n      }\n      if (filteredArticle.value.filter(item => item.etat === true).length > 0) {\n        isVide.value = false;\n        dialog.value = true;\n      } else {\n        isVide.value = true;\n        dialog.value = false;\n      }\n      if (filteredListeCmd.value.filter(item => item.etat === true).length > 0) {\n        isVideL6.value = false;\n        dialog.value = true;\n      } else {\n        isVideL6.value = true;\n        dialog.value = false;\n      }\n    };\n    function handleYes() {\n      dialog.value = false;\n      fetchInsertBP();\n    }\n    function handleNo() {\n      dialog.value = false;\n    }\n    const atteTransfert = async () => {\n      if (total_T.value > 0) {\n        for (let i = 0; i < filteredListeCmd.value.length; i++) {\n          const item = filteredListeCmd.value[i];\n          if (item.transfert === \"Transfert\" || item.transfert === \"Porte\" || item.transfert === \"Sans Empl\") {\n            const params = {\n              code_CC: item.lienCode,\n              xSeq: item.BPLSEQ\n            };\n            await storeCreBP.atteTransfert(params);\n          }\n        }\n      }\n    };\n    const fetchInsertBP = async () => {\n      chagmt.value = true;\n      await storeCreBP.getId();\n      for (let i = 0; i < filteredListeCmd.value.length; i++) {\n        const item = filteredListeCmd.value[i];\n        if (item.etat === true) {\n          item.myID = storeCreBP.myId;\n          let j = i + 1;\n          articles.value = item.article + \"[\" + j + \"/\" + filteredListeCmd.value.length + \"]\";\n          const {\n            article,\n            lettre,\n            designation,\n            lienCode,\n            lienNum,\n            Qte,\n            unitfact,\n            prix_ht,\n            modeliv,\n            lignelibre,\n            typeVente,\n            reglement,\n            echeancesp,\n            abs_qte,\n            factman,\n            offert,\n            artype,\n            devise,\n            coursdev,\n            prixht_dev,\n            totht_dev,\n            rem1,\n            rem2,\n            rem3,\n            totPrix_HT,\n            emplacement,\n            attachement,\n            lot,\n            arreffour,\n            cclmarche,\n            ccldate,\n            cclcolis,\n            arqtecolis,\n            cclpaht,\n            seqLib,\n            comment_mag,\n            cclcolisage,\n            cclnbcolis,\n            cclpack,\n            rayon,\n            depot,\n            cclpromo,\n            myID\n          } = item;\n          await storeCreBP.insertL6(item);\n        }\n      }\n      ;\n      const params = {\n        ids: storeCreBP.myId,\n        code_CC: CC,\n        depot: depotDefaut.value\n      };\n      await storeCreBP.insertBP(params);\n      if (storeCreBP.code_BP !== '' && storeCreBP.code_BP !== null) {\n        await atteTransfert();\n        articles.value = \"Impression \" + storeCreBP.code_BP;\n        try {\n          const response = await storePrintBP.generateReport(storeCreBP.code_BP, 0);\n          const blob = new Blob([response.data], {\n            type: 'application/pdf'\n          });\n          const url = URL.createObjectURL(blob);\n          window.open(url, '_blank');\n          URL.revokeObjectURL(url);\n        } catch (error) {\n          console.error(error);\n        }\n        chagmt.value = false;\n        await fetchPrepa();\n        if (storePrep.depotCmd.length === 0) {\n          closeDialog();\n          console.log(\"La liste storePrep.depotCmd est vide.\");\n        }\n      }\n    };\n    return {\n      dialogVisible,\n      titre_detail,\n      closeDialog,\n      CC,\n      headersRayonCmd,\n      storePrep,\n      fetchPrepa,\n      selectItem,\n      headers,\n      loading,\n      filteredRayonCmd,\n      filteredArticle,\n      selectedDepotCmd,\n      handleCheckboxClick,\n      filteredListeCmd,\n      filteredListeComp,\n      updated,\n      handleCheckboxChange,\n      totalArticles,\n      totalTransfert,\n      totalPorte,\n      totalSansEmpl,\n      onPrepareClick,\n      isPrioGros,\n      isError,\n      isVide,\n      isVideL6,\n      dialog,\n      showDialog,\n      message,\n      handleYes,\n      handleNo,\n      fetchInsertBP,\n      storeCreBP,\n      chagmt,\n      articles,\n      atteTransfert\n    };\n  }\n});","map":{"version":3,"mappings":"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","names":["MyDialog","MyTable","MyList","MyTextarea","MyTextField","MySelect","Alert","ConfirmationDialog","prepCommandStore","useCreateBP","VDataTable","useRoute","useRouter","MyLoading","useReportBPStore","ref","reactive","onMounted","computed","defineEmits","defineComponent","watch","onBeforeMount","onUpdated","components","name","setup","showDialog","route","CC","params","router","storePrep","storeCreBP","loading","updated","chagmt","articles","selectEtat","rayonEtat","isError","isVide","isVideL6","selectedDepotCmd","dialog","message","storePrintBP","dialogVisible","titre_detail","closeDialog","value","history","back","headersRayonCmd","text","align","sortable","headers","title","key","fetchPrepa","code","fetchPreparerCmd","depotCmd","length","filteredListeComp","selectItem","item","reactiveEtat","rayonCmd","forEach","etat","articleCmd","transfert","totalArticles","filteredArticle","totalTransfert","filter","total_T","filteredListeCmd","totalPorte","totalSansEmpl","depotDefaut","depot","trim","some","list","article","filteredRayonCmd","listeCmd","rayon","handleCheckboxClick","filteredListeCmdEtat","updatedListeCmd","map","itemA","itemB","find","handleCheckboxChange","isPrioGros","onPrepareClick","isGros","handleYes","fetchInsertBP","handleNo","atteTransfert","i","code_CC","lienCode","xSeq","BPLSEQ","getId","myID","myId","j","lettre","designation","lienNum","Qte","unitfact","prix_ht","modeliv","lignelibre","typeVente","reglement","echeancesp","abs_qte","factman","offert","artype","devise","coursdev","prixht_dev","totht_dev","rem1","rem2","rem3","totPrix_HT","emplacement","attachement","lot","arreffour","cclmarche","ccldate","cclcolis","arqtecolis","cclpaht","seqLib","comment_mag","cclcolisage","cclnbcolis","cclpack","cclpromo","insertL6","ids","insertBP","code_BP","response","generateReport","blob","Blob","data","type","url","URL","createObjectURL","window","open","revokeObjectURL","error","console","log"],"sourceRoot":"","sources":["/Users/anjaniainaandrianina/Desktop/Project/prepa/ERPO/frontend_prepa/prepa/src/views/PreparerCmd.vue"],"sourcesContent":["<template>\n    <MyDialog :titre_toolbar=titre_detail @close=\"closeDialog\" v-model=\"dialogVisible\">\n        <div class=\"pa-2\">\n            <v-row v-if=\"!loading\">\n                <v-col cols=\"10\" md=\"2\">\n                    <v-list :lines=\"false\" density=\"compact\" nav>\n                        <v-list-item v-for=\"(item, i) in storePrep.depotCmd\" :key=\"i\" :value=\"item\" active-color=\"primary\"\n                            @click=\"selectItem(item)\">\n                            <template v-slot:prepend>\n                                <v-icon icon=\"mdi-star\"></v-icon>\n                            </template>\n\n                            <v-list-item-title v-text=\"item.depot\"></v-list-item-title>\n                            <v-list-item-subtitle v-text=\"'Nb Article: ' + item.nb_article\"></v-list-item-subtitle>\n                        </v-list-item>\n                    </v-list>\n                </v-col>\n                <v-col cols=\"10\" md=\"2\">\n                    <v-table fixed-header height=\"300px\" density=\"compact\">\n                        <thead>\n                            <tr>\n                                <th class=\"text-center\" >\n                                    Rayon\n                                </th>\n                                <th class=\"text-center\" >\n                                    Nb Article\n                                </th>\n                                <th class=\"text-center\" >\n                                    <!-- <v-checkbox v-model=\"selectAll\" color=\"primary\" hide-details></v-checkbox> -->\n                                </th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr v-for=\"item in filteredRayonCmd \" :key=\"item.rayon\">\n                                <td>{{ item.rayon }}</td>\n                                <td>{{ item.nb_article }}</td>\n                                <td>\n                                    <v-checkbox v-model=\"item.etat\" v-bind:checked=\"item.etat\" hide-details color=\"primary\"\n                                        @change=\"handleCheckboxChange(item)\"></v-checkbox>\n                                </td>\n                            </tr>\n                        </tbody>\n                    </v-table>\n                </v-col>\n                <v-col cols=\"10\" md=\"4\">\n                </v-col>\n                <v-col cols=\"10\" md=\"2\" class=\"text-center\">\n                    <v-btn block rounded=\"xs\" variant=\"elevated\" color=\"#D3D3D3\" @click=\"onPrepareClick\">PREPARER</v-btn>\n                    <div class=\"pa-10\" v-if=\"selectedDepotCmd\">\n                        PREPARATION --> <b>{{ selectedDepotCmd.depot }}</b>\n                    </div>\n                    <v-alert v-if=\"isError\" type=\"error\" @click=\"isError = false, dialog = false\">preparation GROS en\n                        premier</v-alert>\n                    <v-alert v-if=\"isVide && !isError\" type=\"error\" @click=\"isVide = false, dialog = false\">La liste des\n                        articles à preparer est\n                        vide</v-alert>\n                    <v-alert v-if=\"isVideL6 && !isVide && !isError\" type=\"error\"\n                        @click=\"isVideL6 = false, dialog = false\">Un\n                        probleme est survenu sur la sortie de\n                        Bon de preparation, Veuillez contacter le responsable</v-alert>\n                    <ConfirmationDialog v-if=\"dialog && !isVideL6 && !isVide && !isError\" v-model=\"dialog\"\n                        title=\"Confirmation de Préparation\" :message=message @handleYes=\"handleYes\" @handleNo=\"handleNo\" />\n                    <MyLoading :loading=\"chagmt\" @close=\"chagmt = false\" :articles=\"articles\"></MyLoading>\n                    <router-view></router-view>\n\n                </v-col>\n\n            </v-row>\n        </div>\n        <div class=\"pa-2\">\n            <v-progress-linear v-if=\"loading\" color=\"primary\" rounded indeterminate height=\"5\">\n\n            </v-progress-linear>\n        </div>\n        <div v-if=\"updated\">\n            <v-container fluid>\n                <MyTable :headers=\"headers\" :items=\"filteredArticle\" fixed-header height=\"400\" v-if=\"!loading\"\n                    @handleCheckboxClick=\"handleCheckboxClick\">\n                </MyTable>\n\n                <v-card>\n                    <v-row>\n                        <v-col>\n                            <v-sheet class=\"pl-2\">\n                                <b> {{ totalArticles }}</b> articles\n                            </v-sheet>\n                        </v-col>\n\n                        <v-col>\n                            <v-sheet>\n                                <b> {{ totalTransfert }}</b> articles en attente Transfert\n                            </v-sheet>\n                        </v-col>\n\n                        <v-col>\n                            <v-sheet>\n                                <b> {{ totalPorte }}</b> articles en attente Porte\n                            </v-sheet>\n                        </v-col>\n\n                        <v-col>\n                            <v-sheet>\n                                <b> {{ totalSansEmpl }}</b> articles sans emplacement\n                            </v-sheet>\n                        </v-col>\n                    </v-row>\n                </v-card>\n\n            </v-container>\n\n        </div>\n    </MyDialog>\n</template>\n\n<script>\nimport MyDialog from '@/components/DialogFullScreen.vue';\nimport MyTable from '@/components/MyTable.vue';\nimport MyList from '@/components/MyList.vue';\nimport MyTextarea from '@/components/MyTextarea.vue';\nimport MyTextField from '@/components/MyTextField.vue';\nimport MySelect from '@/components/MySelect.vue';\nimport Alert from '@/components/Alert.vue';\nimport ConfirmationDialog from '@/components/ConfirmationDialog.vue';\nimport { prepCommandStore } from \"@/store/Apreparer/genererPrep\";\nimport { useCreateBP } from \"@/store/Apreparer/creationBP\";\nimport { VDataTable } from 'vuetify/labs/VDataTable';\nimport { useRoute, useRouter } from 'vue-router';\nimport MyLoading from '@/components/Loading.vue';\nimport { useReportBPStore } from \"@/store/report/printBP\";\nimport { ref, reactive, onMounted, computed, defineEmits, defineComponent, watch, onBeforeMount, onUpdated } from \"vue\";\nexport default defineComponent({\n    components: {\n        MyDialog,\n        MyTable,\n        MyList,\n        MyTextarea,\n        MyTextField,\n        MySelect,\n        Alert,\n        ConfirmationDialog,\n        MyLoading,\n    },\n    name: 'preparerCmd',\n    setup() {\n        const showDialog = ref(false);\n        const route = useRoute();\n        const CC = route.params.CC;\n        const router = useRouter();\n        const storePrep = prepCommandStore();\n        const storeCreBP = useCreateBP();\n        const loading = computed(() => storePrep.loading)\n        const updated = ref(false);\n        const chagmt = ref(false);\n        const articles = ref(null);\n        const selectEtat = ref(null);\n        const rayonEtat = ref(null);\n        const isError = ref(false);\n        const isVide = ref(false);\n        const isVideL6 = ref(false);\n        const selectedDepotCmd = ref(null);\n        const dialog = ref(false);\n        let message = ref(\"\");\n        const storePrintBP = useReportBPStore();\n\n\n\n\n        const dialogVisible = ref(false);\n\n        let titre_detail = ref(\"\");\n\n\n        function closeDialog() {\n            dialogVisible.value = false;\n            history.back();\n           // router.push({ name: 'attePrepa' });\n        }\n\n        const headersRayonCmd = [\n            { text: 'Rayon', align: 'start', value: 'rayon', sortable: true },\n            { text: 'Nb Article', align: 'start', value: 'nb_article' },\n            { text: 'Select', value: 'etat' },\n\n        ]\n\n\n        const headers = [\n            { title: 'commande', align: 'start', key: 'code_CCL' },\n            { title: 'Article', align: 'center', key: 'article', sortable: true },\n            { title: 'Libellé', align: 'start', key: 'libelle' },\n            { title: 'Quantité en Prep', align: 'center', key: 'qte_a_preparer' },\n            { title: 'Quantité Dispo', align: 'center', key: 'dispo' },\n            { title: 'Transfert', align: 'center', key: 'transfert' },\n            { title: 'etat', align: 'center', key: 'etat' },\n        ]\n\n\n        onBeforeMount(() => {\n            dialogVisible.value = true;\n            titre_detail.value = \"Preparation du Commande \" + CC;\n            fetchPrepa();\n        })\n\n        const fetchPrepa = async () => {\n            storePrep.params.code = CC;\n            await storePrep.fetchPreparerCmd();\n            if (storePrep.depotCmd.length > 0) {\n                selectedDepotCmd.value = storePrep.depotCmd[0];\n            }\n            filteredListeComp();\n        }\n\n        const selectItem = (item) => {\n            selectedDepotCmd.value = item;\n            reactiveEtat();\n            filteredListeComp();\n        };\n\n        const reactiveEtat = () => {\n            storePrep.rayonCmd.forEach(item => {\n                item.etat = true;\n            });\n            storePrep.articleCmd.forEach(item => {\n                if (item.transfert !== 'Transfert' && item.transfert !== 'Sans Empl' && item.transfert !== 'Porte') {\n                    item.etat = true;\n                }\n            });\n\n        }\n\n\n        const totalArticles = computed(() => {\n            return filteredArticle.value.length;\n        });\n\n        const totalTransfert = computed(() => {\n            return filteredArticle.value.filter(item => item.transfert === \"Transfert\").length\n        });\n\n        const total_T = computed(() => {\n            return filteredListeCmd.value.filter(item => (item.transfert === \"Transfert\" || item.transfert === \"Porte\" || item.transfert === \"Sans Empl\")).length\n        });\n        const totalPorte = computed(() => {\n            return filteredArticle.value.filter(item => item.transfert === \"Porte\").length\n        });\n\n        const totalSansEmpl = computed(() => {\n            return filteredArticle.value.filter(item => item.transfert === \"Sans Empl\").length\n        });\n\n        const depotDefaut = computed(() => {\n            if (!selectedDepotCmd.value && storePrep.depotCmd.length > 0) {\n                selectedDepotCmd.value = storePrep.depotCmd[0];\n            }\n            return selectedDepotCmd.value.depot\n        })\n\n\n        const filteredArticle = computed(() => {\n            if (selectedDepotCmd.value && !rayonEtat.value) {\n                return storePrep.articleCmd.filter(item => (item.depot.trim() === selectedDepotCmd.value.depot.trim()\n\n                ));\n\n            } else if (rayonEtat.value) {\n                return storePrep.articleCmd.filter(item => (item.depot.trim() === selectedDepotCmd.value.depot.trim()\n                    &&\n                    filteredListeCmd.value.some(list => list.article.trim() === item.article.trim() && list.depot.trim() === item.depot.trim())\n                ));\n            }\n            else {\n                return storePrep.articleCmd;\n            }\n        });\n\n        const filteredRayonCmd = computed(() => {\n            if (selectedDepotCmd.value && storePrep.depotCmd.length > 0) {\n                return storePrep.rayonCmd.filter(item => item.depot.trim() === selectedDepotCmd.value.depot.trim());\n            } else {\n                return storePrep.rayonCmd;\n            }\n        });\n\n        const filteredListeCmd = computed(() => {\n            if (selectedDepotCmd.value && !rayonEtat.value) {\n                return storePrep.listeCmd.filter(item => (item.depot.trim() === selectedDepotCmd.value.depot.trim()\n                ));\n            } else if (rayonEtat.value) {\n                return storePrep.listeCmd.filter(item => (item.depot.trim() === selectedDepotCmd.value.depot.trim() &&\n                    filteredRayonCmd.value.some(rayon => rayon.rayon.trim() === item.rayon.trim() && rayon.etat === true)\n                ));\n            }\n            else {\n                return storePrep.listeCmd;\n            }\n\n        });\n\n\n        const handleCheckboxClick = (item) => {\n            selectEtat.value = item;\n            filteredListeCmdEtat();\n        }\n\n\n\n        const filteredListeCmdEtat = () => {\n            let updatedListeCmd = filteredListeCmd.value.map(item => {\n                if (item.article.trim() === selectEtat.value.value.article.trim()) {\n                    item.etat = !selectEtat.value.value.etat;\n                }\n                return item;\n            });\n            filteredListeCmd.value = updatedListeCmd;\n        };\n\n\n        const filteredListeComp = () => {\n            filteredListeCmd.value.forEach(itemA => {\n                const itemB = filteredArticle.value.find(itemB => (itemB.article.trim() === itemA.article.trim() && itemB.depot.trim() === itemA.depot.trim()))\n                if (itemB) {\n                    itemA.etat = itemB.etat\n                }\n\n            })\n            updated.value = true;\n\n        };\n\n        const handleCheckboxChange = (item) => {\n            rayonEtat.value = item;\n        };\n\n        const isPrioGros = () => {\n            const itemB = storePrep.depotCmd.find(itemB => (itemB.depot.trim() === 'GROS'));\n            if (selectedDepotCmd.value && itemB) {\n                if (selectedDepotCmd.value.depot.trim() !== itemB.depot) {\n                    return false;\n                } else {\n                    return true;\n                }\n            } else {\n                return true;\n            }\n        };\n\n        const onPrepareClick = async () => {\n            const isGros = isPrioGros();\n            if (!selectedDepotCmd.value) {\n                selectedDepotCmd.value = storePrep.depotCmd[0];\n            }\n            message.value = \"Voulez vous préparer ces articles côchés dans le dépôt \" + selectedDepotCmd.value.depot;\n            if (isGros) {\n                isError.value = false;\n                dialog.value = true;\n            } else {\n                isError.value = true;\n                dialog.value = false;\n\n            }\n            if ((filteredArticle.value.filter(item => item.etat === true).length) > 0) {\n                isVide.value = false;\n                dialog.value = true;\n            } else {\n                isVide.value = true;\n                dialog.value = false;\n            }\n            if ((filteredListeCmd.value.filter(item => item.etat === true).length) > 0) {\n                isVideL6.value = false;\n                dialog.value = true;\n            } else {\n                isVideL6.value = true;\n                dialog.value = false;\n            }\n\n\n\n        };\n        function handleYes() {\n            dialog.value = false;\n            fetchInsertBP();\n        }\n\n        function handleNo() {\n            dialog.value = false;\n        }\n\n        const atteTransfert = async () => {\n            if (total_T.value > 0) {\n                for (let i = 0; i < filteredListeCmd.value.length; i++) {\n                    const item = filteredListeCmd.value[i];\n                    if (item.transfert === \"Transfert\" || item.transfert === \"Porte\" || item.transfert === \"Sans Empl\") {\n                        const params = {\n                            code_CC: item.lienCode,\n                            xSeq: item.BPLSEQ,\n                        }\n                        await storeCreBP.atteTransfert(params);\n                    }\n                }\n\n            }\n\n        }\n\n        const fetchInsertBP = async () => {\n            chagmt.value = true;\n            await storeCreBP.getId();\n            for (let i = 0; i < filteredListeCmd.value.length; i++) {\n                const item = filteredListeCmd.value[i];\n                if (item.etat === true) {\n                    item.myID = storeCreBP.myId;\n                    let j = i + 1;\n                    articles.value = item.article + \"[\" + j + \"/\" + filteredListeCmd.value.length + \"]\";\n                    const { article, lettre, designation, lienCode, lienNum, Qte, unitfact, prix_ht, modeliv, lignelibre, typeVente, reglement, echeancesp, abs_qte, factman, offert, artype, devise, coursdev, prixht_dev, totht_dev, rem1, rem2, rem3, totPrix_HT, emplacement, attachement, lot, arreffour, cclmarche, ccldate, cclcolis, arqtecolis, cclpaht, seqLib, comment_mag, cclcolisage, cclnbcolis, cclpack, rayon, depot, cclpromo, myID } = item;\n                    await storeCreBP.insertL6(item);\n                }\n            };\n            const params = {\n                ids: storeCreBP.myId,\n                code_CC: CC,\n                depot: depotDefaut.value\n            }\n            await storeCreBP.insertBP(params);\n\n            if (storeCreBP.code_BP !== '' && storeCreBP.code_BP !== null) {\n                await atteTransfert();\n                articles.value = \"Impression \" + storeCreBP.code_BP;\n                try {\n                    const response = await storePrintBP.generateReport(storeCreBP.code_BP, 0);\n                    const blob = new Blob([response.data], { type: 'application/pdf' });\n                    const url = URL.createObjectURL(blob);\n                    window.open(url, '_blank');\n                    URL.revokeObjectURL(url);\n                } catch (error) {\n                    console.error(error);\n                }\n                chagmt.value = false;\n                await fetchPrepa();\n                if (storePrep.depotCmd.length === 0) {\n                    closeDialog();\n                    console.log(\"La liste storePrep.depotCmd est vide.\");\n                }\n            }\n\n        }\n\n\n\n\n\n        return {\n            dialogVisible, titre_detail, closeDialog, CC, headersRayonCmd, storePrep, fetchPrepa, selectItem, headers, loading, filteredRayonCmd, filteredArticle,\n            selectedDepotCmd, handleCheckboxClick, filteredListeCmd, filteredListeComp, updated, handleCheckboxChange, totalArticles, totalTransfert,\n            totalPorte, totalSansEmpl, onPrepareClick, isPrioGros, isError, isVide, isVideL6, dialog, showDialog, message, handleYes, handleNo, fetchInsertBP, storeCreBP,\n            chagmt, articles, atteTransfert\n\n\n        }\n    },\n});\n</script>\n\n<style scoped>\n/* .container {\n    display: flex;\n    flex-direction: row;\n\n    justify-content: space-between;\n    max-height: 500px;\n    overflow-y: auto;\n}\n\n.left {\n    flex-basis: 70%;\n}\n\n.right {\n    flex-basis: 30%;\n} */\n\n.v-list-item.active {\n    background-color: blue;\n    color: white;\n}\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}