{"ast":null,"code":"import { resolveDirective as _resolveDirective, Fragment as _Fragment, createVNode as _createVNode } from \"vue\";\n// Components\nimport { VCheckboxBtn } from \"../../components/VCheckbox/index.mjs\";\nimport { VDataTableColumn } from \"./VDataTableColumn.mjs\";\nimport { VIcon } from \"../../components/VIcon/index.mjs\"; // Composables\nimport { IconValue } from \"../../composables/icons.mjs\";\nimport { LoaderSlot, makeLoaderProps, useLoader } from \"../../composables/loader.mjs\";\nimport { useBackgroundColor } from \"../../composables/color.mjs\";\nimport { useHeaders } from \"./composables/headers.mjs\";\nimport { useSelection } from \"./composables/select.mjs\";\nimport { useSort } from \"./composables/sort.mjs\"; // Utilities\nimport { convertToUnit, genericComponent, useRender } from \"../../util/index.mjs\"; // Types\nexport const VDataTableHeaders = genericComponent()({\n  name: 'VDataTableHeaders',\n  props: {\n    color: String,\n    sticky: Boolean,\n    multiSort: Boolean,\n    sortAscIcon: {\n      type: IconValue,\n      default: '$sortAsc'\n    },\n    sortDescIcon: {\n      type: IconValue,\n      default: '$sortDesc'\n    },\n    ...makeLoaderProps()\n  },\n  setup(props, _ref) {\n    let {\n      slots,\n      emit\n    } = _ref;\n    const {\n      toggleSort,\n      sortBy\n    } = useSort();\n    const {\n      someSelected,\n      allSelected,\n      selectAll\n    } = useSelection();\n    const {\n      columns,\n      headers\n    } = useHeaders();\n    const {\n      loaderClasses\n    } = useLoader(props);\n    const getFixedStyles = (column, y) => {\n      if (!props.sticky && !column.fixed) return null;\n      return {\n        position: 'sticky',\n        zIndex: column.fixed ? 4 : props.sticky ? 3 : undefined,\n        // TODO: This needs to account for possible previous fixed columns.\n        left: column.fixed ? convertToUnit(column.fixedOffset) : undefined,\n        // TODO: This needs to account for possible row/colspan of previous columns\n        top: props.sticky ? `calc(var(--v-table-header-height) * ${y})` : undefined\n      };\n    };\n    function getSortIcon(id) {\n      const item = sortBy.value.find(item => item.key === id);\n      if (!item) return props.sortAscIcon;\n      return item.order === 'asc' ? props.sortAscIcon : props.sortDescIcon;\n    }\n    const {\n      backgroundColorClasses,\n      backgroundColorStyles\n    } = useBackgroundColor(props, 'color');\n    const VDataTableHeaderCell = _ref2 => {\n      let {\n        column,\n        x,\n        y\n      } = _ref2;\n      const isSorted = !!sortBy.value.find(x => x.key === column.key);\n      const noPadding = column.key === 'data-table-select' || column.key === 'data-table-expand';\n      return _createVNode(VDataTableColumn, {\n        \"tag\": \"th\",\n        \"align\": column.align,\n        \"class\": ['v-data-table__th', {\n          'v-data-table__th--sortable': column.sortable,\n          'v-data-table__th--sorted': isSorted\n        }, loaderClasses.value],\n        \"style\": {\n          width: convertToUnit(column.width),\n          minWidth: convertToUnit(column.width),\n          ...getFixedStyles(column, y)\n        },\n        \"colspan\": column.colspan,\n        \"rowspan\": column.rowspan,\n        \"onClick\": column.sortable ? () => toggleSort(column.key) : undefined,\n        \"lastFixed\": column.lastFixed,\n        \"noPadding\": noPadding\n      }, {\n        default: () => {\n          const slotName = `column.${column.key}`;\n          const slotProps = {\n            column,\n            selectAll\n          };\n          if (slots[slotName]) return slots[slotName](slotProps);\n          if (column.key === 'data-table-select') {\n            return slots['column.data-table-select']?.(slotProps) ?? _createVNode(VCheckboxBtn, {\n              \"modelValue\": allSelected.value,\n              \"indeterminate\": someSelected.value && !allSelected.value,\n              \"onUpdate:modelValue\": selectAll\n            }, null);\n          }\n          return _createVNode(\"div\", {\n            \"class\": \"v-data-table-header__content\"\n          }, [_createVNode(\"span\", null, [column.title]), column.sortable && _createVNode(VIcon, {\n            \"key\": \"icon\",\n            \"class\": \"v-data-table-header__sort-icon\",\n            \"icon\": getSortIcon(column.key)\n          }, null), props.multiSort && isSorted && _createVNode(\"div\", {\n            \"key\": \"badge\",\n            \"class\": ['v-data-table-header__sort-badge', ...backgroundColorClasses.value],\n            \"style\": backgroundColorStyles.value\n          }, [sortBy.value.findIndex(x => x.key === column.key) + 1])]);\n        }\n      });\n    };\n    useRender(() => _createVNode(_Fragment, null, [headers.value.map((row, y) => _createVNode(\"tr\", null, [row.map((column, x) => _createVNode(VDataTableHeaderCell, {\n      \"column\": column,\n      \"x\": x,\n      \"y\": y\n    }, null))])), props.loading && _createVNode(\"tr\", {\n      \"class\": \"v-data-table__progress\"\n    }, [_createVNode(\"th\", {\n      \"colspan\": columns.value.length\n    }, [_createVNode(LoaderSlot, {\n      \"name\": \"v-data-table-headers\",\n      \"active\": true,\n      \"color\": typeof props.loading === 'boolean' ? undefined : props.loading,\n      \"indeterminate\": true\n    }, {\n      default: slots.loader\n    })])])]));\n  }\n});","map":{"version":3,"mappings":"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","names":["VCheckboxBtn","VDataTableColumn","VIcon","IconValue","LoaderSlot","makeLoaderProps","useLoader","useBackgroundColor","useHeaders","useSelection","useSort","convertToUnit","genericComponent","useRender","VDataTableHeaders","name","props","color","String","sticky","Boolean","multiSort","sortAscIcon","type","default","sortDescIcon","setup","slots","emit","toggleSort","sortBy","someSelected","allSelected","selectAll","columns","headers","loaderClasses","getFixedStyles","column","y","fixed","position","zIndex","undefined","left","fixedOffset","top","getSortIcon","id","item","value","find","key","order","backgroundColorClasses","backgroundColorStyles","VDataTableHeaderCell","_ref2","x","isSorted","noPadding","align","sortable","width","minWidth","colspan","rowspan","lastFixed","slotName","slotProps","title","findIndex","map","row","loading","length","loader"],"sources":["../../../src/labs/VDataTable/VDataTableHeaders.tsx"],"sourcesContent":["// Components\nimport { VCheckboxBtn } from '@/components/VCheckbox'\nimport { VDataTableColumn } from './VDataTableColumn'\nimport { VIcon } from '@/components/VIcon'\n\n// Composables\nimport { IconValue } from '@/composables/icons'\nimport { LoaderSlot, makeLoaderProps, useLoader } from '@/composables/loader'\nimport { useBackgroundColor } from '@/composables/color'\nimport { useHeaders } from './composables/headers'\nimport { useSelection } from './composables/select'\nimport { useSort } from './composables/sort'\n\n// Utilities\nimport { convertToUnit, genericComponent, useRender } from '@/util'\n\n// Types\nimport type { InternalDataTableHeader } from './types'\nimport type { LoaderSlotProps } from '@/composables/loader'\n\nexport type VDataTableHeadersSlots = {\n  default: []\n  loader: [LoaderSlotProps]\n  'column.data-table-select': [InternalDataTableHeader, (value: boolean) => void]\n}\n\nexport const VDataTableHeaders = genericComponent<VDataTableHeadersSlots>()({\n  name: 'VDataTableHeaders',\n\n  props: {\n    color: String,\n    sticky: Boolean,\n    multiSort: Boolean,\n    sortAscIcon: {\n      type: IconValue,\n      default: '$sortAsc',\n    },\n    sortDescIcon: {\n      type: IconValue,\n      default: '$sortDesc',\n    },\n\n    ...makeLoaderProps(),\n  },\n\n  setup (props, { slots, emit }) {\n    const { toggleSort, sortBy } = useSort()\n    const { someSelected, allSelected, selectAll } = useSelection()\n    const { columns, headers } = useHeaders()\n    const { loaderClasses } = useLoader(props)\n\n    const getFixedStyles = (column: InternalDataTableHeader, y: number) => {\n      if (!props.sticky && !column.fixed) return null\n\n      return {\n        position: 'sticky',\n        zIndex: column.fixed ? 4 : props.sticky ? 3 : undefined, // TODO: This needs to account for possible previous fixed columns.\n        left: column.fixed ? convertToUnit(column.fixedOffset) : undefined, // TODO: This needs to account for possible row/colspan of previous columns\n        top: props.sticky ? `calc(var(--v-table-header-height) * ${y})` : undefined,\n      }\n    }\n\n    function getSortIcon (id: string) {\n      const item = sortBy.value.find(item => item.key === id)\n\n      if (!item) return props.sortAscIcon\n\n      return item.order === 'asc' ? props.sortAscIcon : props.sortDescIcon\n    }\n\n    const { backgroundColorClasses, backgroundColorStyles } = useBackgroundColor(props, 'color')\n\n    const VDataTableHeaderCell = ({ column, x, y }: { column: InternalDataTableHeader, x: number, y: number }) => {\n      const isSorted = !!sortBy.value.find(x => x.key === column.key)\n      const noPadding = column.key === 'data-table-select' || column.key === 'data-table-expand'\n\n      return (\n        <VDataTableColumn\n          tag=\"th\"\n          align={ column.align }\n          class={[\n            'v-data-table__th',\n            {\n              'v-data-table__th--sortable': column.sortable,\n              'v-data-table__th--sorted': isSorted,\n            },\n            loaderClasses.value,\n          ]}\n          style={{\n            width: convertToUnit(column.width),\n            minWidth: convertToUnit(column.width),\n            ...getFixedStyles(column, y),\n          }}\n          colspan={ column.colspan }\n          rowspan={ column.rowspan }\n          onClick={ column.sortable ? () => toggleSort(column.key) : undefined }\n          lastFixed={ column.lastFixed }\n          noPadding={ noPadding }\n        >\n          {{\n            default: () => {\n              const slotName = `column.${column.key}`\n              const slotProps = {\n                column,\n                selectAll,\n              }\n\n              if (slots[slotName]) return slots[slotName]!(slotProps)\n\n              if (column.key === 'data-table-select') {\n                return slots['column.data-table-select']?.(slotProps) ?? (\n                  <VCheckboxBtn\n                    modelValue={ allSelected.value }\n                    indeterminate={ someSelected.value && !allSelected.value }\n                    onUpdate:modelValue={ selectAll }\n                  />\n                )\n              }\n\n              return (\n                <div class=\"v-data-table-header__content\">\n                  <span>{ column.title }</span>\n                  { column.sortable && (\n                    <VIcon\n                      key=\"icon\"\n                      class=\"v-data-table-header__sort-icon\"\n                      icon={ getSortIcon(column.key) }\n                    />\n                  )}\n                  { props.multiSort && isSorted && (\n                    <div\n                      key=\"badge\"\n                      class={[\n                        'v-data-table-header__sort-badge',\n                        ...backgroundColorClasses.value,\n                      ]}\n                      style={ backgroundColorStyles.value }\n                    >\n                      { sortBy.value.findIndex(x => x.key === column.key) + 1 }\n                    </div>\n                  )}\n                </div>\n              )\n            },\n          }}\n        </VDataTableColumn>\n      )\n    }\n\n    useRender(() => (\n      <>\n        { headers.value.map((row, y) => (\n          <tr>\n            { row.map((column, x) => (\n              <VDataTableHeaderCell column={ column } x={ x } y={ y } />\n            ))}\n          </tr>\n        ))}\n\n        { props.loading && (\n          <tr class=\"v-data-table__progress\">\n            <th colspan={ columns.value.length }>\n\n            <LoaderSlot\n              name=\"v-data-table-headers\"\n              active\n              color={ typeof props.loading === 'boolean' ? undefined : props.loading }\n              indeterminate\n              v-slots={{ default: slots.loader }}\n            />\n            </th>\n          </tr>\n        )}\n      </>\n    ))\n  },\n})\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}