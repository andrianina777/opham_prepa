{"ast":null,"code":"import { defineStore } from 'pinia';\nimport Config from \"@/utils/config.js\";\nimport axios from \"axios\";\nexport const useCreateBP = defineStore(\"useCreateBP\", {\n  state: () => ({\n    myId: '',\n    code_BP: '',\n    loading: false\n    // params:{\n    //   ids:'',\n    //   code_CC:'',\n    //   depot:''\n    // },\n  }),\n\n  // getters: {\n  //   getCommande(state) {\n  //     return state.commandes\n  //   }\n  // },\n  actions: {\n    async getId() {\n      this.loading = true;\n      try {\n        const data = await axios.get(Config.SERVER_URL + 'api/new-id');\n        this.myId = data.data;\n        this.loading = false;\n      } catch (error) {\n        alert(error);\n        console.log(error);\n      } finally {\n        this.loading = false;\n      }\n    },\n    async insertL6(listeCmd) {\n      this.loading = true;\n      const response = await axios.post(Config.SERVER_URL + 'api/insertL6', listeCmd);\n      this.data = response.data;\n      this.loading = false;\n    },\n    async insertBP(params) {\n      this.loading = true;\n      const response = await axios.post(Config.SERVER_URL + 'api/insertBP', null, {\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        params: params // Pass params as query parameters\n      });\n\n      this.code_BP = response.data;\n      this.loading = false;\n    },\n    async atteTransfert(params) {\n      this.loading = true;\n      const response = await axios.post(Config.SERVER_URL + 'api/atteTransfert', null, {\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        params: params // Pass params as query parameters\n      });\n\n      this.loading = false;\n    }\n  }\n});","map":{"version":3,"names":["defineStore","Config","axios","useCreateBP","state","myId","code_BP","loading","actions","getId","data","get","SERVER_URL","error","alert","console","log","insertL6","listeCmd","response","post","insertBP","params","headers","atteTransfert"],"sources":["/Users/anjaniainaandrianina/Desktop/Project/prepa/ERPO/frontend_prepa/prepa/src/store/Apreparer/creationBP.js"],"sourcesContent":["import { defineStore } from 'pinia'\nimport Config  from \"@/utils/config.js\"\nimport axios from \"axios\"\nexport const useCreateBP= defineStore(\"useCreateBP\", {\n  state: () => ({\n    myId: '',\n    code_BP :'',\n    loading: false\n    // params:{\n    //   ids:'',\n    //   code_CC:'',\n    //   depot:''\n    // },\n  }),\n  // getters: {\n  //   getCommande(state) {\n  //     return state.commandes\n  //   }\n  // },\n  actions: {\n    async getId() {\n      this.loading = true\n      try {\n        const data = await axios.get(Config.SERVER_URL + 'api/new-id')\n        this.myId = data.data\n        this.loading = false\n      }\n      catch (error) {\n        alert(error)\n        console.log(error)\n      } finally {\n        this.loading = false\n      }\n    },\n    async insertL6(listeCmd) {\n      this.loading = true\n      const response = await axios.post(Config.SERVER_URL +'api/insertL6',  listeCmd );\n      this.data = response.data;\n      this.loading = false\n    },\n    async insertBP(params) {\n      this.loading = true\n      const response = await axios.post(Config.SERVER_URL + 'api/insertBP', null, {\n        headers: { 'Content-Type': 'application/json' },\n        params: params  // Pass params as query parameters\n      });\n      this.code_BP = response.data;\n      this.loading = false\n    },\n    async atteTransfert(params) {\n      this.loading = true\n      const response = await axios.post(Config.SERVER_URL + 'api/atteTransfert', null, {\n        headers: { 'Content-Type': 'application/json' },\n        params: params  // Pass params as query parameters\n      });\n      this.loading = false\n    },\n\n\n    \n\n\n  },\n \n})\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,OAAO;AACnC,OAAOC,MAAM,MAAO,mBAAmB;AACvC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,MAAMC,WAAW,GAAEH,WAAW,CAAC,aAAa,EAAE;EACnDI,KAAK,EAAE,OAAO;IACZC,IAAI,EAAE,EAAE;IACRC,OAAO,EAAE,EAAE;IACXC,OAAO,EAAE;IACT;IACA;IACA;IACA;IACA;EACF,CAAC,CAAC;;EACF;EACA;EACA;EACA;EACA;EACAC,OAAO,EAAE;IACP,MAAMC,KAAK,GAAG;MACZ,IAAI,CAACF,OAAO,GAAG,IAAI;MACnB,IAAI;QACF,MAAMG,IAAI,GAAG,MAAMR,KAAK,CAACS,GAAG,CAACV,MAAM,CAACW,UAAU,GAAG,YAAY,CAAC;QAC9D,IAAI,CAACP,IAAI,GAAGK,IAAI,CAACA,IAAI;QACrB,IAAI,CAACH,OAAO,GAAG,KAAK;MACtB,CAAC,CACD,OAAOM,KAAK,EAAE;QACZC,KAAK,CAACD,KAAK,CAAC;QACZE,OAAO,CAACC,GAAG,CAACH,KAAK,CAAC;MACpB,CAAC,SAAS;QACR,IAAI,CAACN,OAAO,GAAG,KAAK;MACtB;IACF,CAAC;IACD,MAAMU,QAAQ,CAACC,QAAQ,EAAE;MACvB,IAAI,CAACX,OAAO,GAAG,IAAI;MACnB,MAAMY,QAAQ,GAAG,MAAMjB,KAAK,CAACkB,IAAI,CAACnB,MAAM,CAACW,UAAU,GAAE,cAAc,EAAGM,QAAQ,CAAE;MAChF,IAAI,CAACR,IAAI,GAAGS,QAAQ,CAACT,IAAI;MACzB,IAAI,CAACH,OAAO,GAAG,KAAK;IACtB,CAAC;IACD,MAAMc,QAAQ,CAACC,MAAM,EAAE;MACrB,IAAI,CAACf,OAAO,GAAG,IAAI;MACnB,MAAMY,QAAQ,GAAG,MAAMjB,KAAK,CAACkB,IAAI,CAACnB,MAAM,CAACW,UAAU,GAAG,cAAc,EAAE,IAAI,EAAE;QAC1EW,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CD,MAAM,EAAEA,MAAM,CAAE;MAClB,CAAC,CAAC;;MACF,IAAI,CAAChB,OAAO,GAAGa,QAAQ,CAACT,IAAI;MAC5B,IAAI,CAACH,OAAO,GAAG,KAAK;IACtB,CAAC;IACD,MAAMiB,aAAa,CAACF,MAAM,EAAE;MAC1B,IAAI,CAACf,OAAO,GAAG,IAAI;MACnB,MAAMY,QAAQ,GAAG,MAAMjB,KAAK,CAACkB,IAAI,CAACnB,MAAM,CAACW,UAAU,GAAG,mBAAmB,EAAE,IAAI,EAAE;QAC/EW,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CD,MAAM,EAAEA,MAAM,CAAE;MAClB,CAAC,CAAC;;MACF,IAAI,CAACf,OAAO,GAAG,KAAK;IACtB;EAMF;AAEF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}