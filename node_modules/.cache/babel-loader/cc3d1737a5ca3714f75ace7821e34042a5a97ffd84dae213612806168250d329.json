{"ast":null,"code":"import { withDirectives as _withDirectives, resolveDirective as _resolveDirective, Fragment as _Fragment, createVNode as _createVNode } from \"vue\";\nimport \"./VImg.css\";\n\n// Components\nimport { VResponsive } from \"../VResponsive/index.mjs\"; // Directives\nimport intersect from \"../../directives/intersect/index.mjs\"; // Composables\nimport { makeTransitionProps, MaybeTransition } from \"../../composables/transition.mjs\"; // Utilities\nimport { computed, nextTick, onBeforeMount, ref, vShow, watch, withDirectives } from 'vue';\nimport { convertToUnit, genericComponent, SUPPORTS_INTERSECTION, useRender } from \"../../util/index.mjs\"; // Types\nexport const VImg = genericComponent()({\n  name: 'VImg',\n  directives: {\n    intersect\n  },\n  props: {\n    aspectRatio: [String, Number],\n    alt: String,\n    cover: Boolean,\n    eager: Boolean,\n    gradient: String,\n    lazySrc: String,\n    options: {\n      type: Object,\n      // For more information on types, navigate to:\n      // https://developer.mozilla.org/en-US/docs/Web/API/Intersection_Observer_API\n      default: () => ({\n        root: undefined,\n        rootMargin: undefined,\n        threshold: undefined\n      })\n    },\n    sizes: String,\n    src: {\n      type: [String, Object],\n      default: ''\n    },\n    srcset: String,\n    width: [String, Number],\n    ...makeTransitionProps()\n  },\n  emits: {\n    loadstart: value => true,\n    load: value => true,\n    error: value => true\n  },\n  setup(props, _ref) {\n    let {\n      emit,\n      slots\n    } = _ref;\n    const currentSrc = ref(''); // Set from srcset\n    const image = ref();\n    const state = ref(props.eager ? 'loading' : 'idle');\n    const naturalWidth = ref();\n    const naturalHeight = ref();\n    const normalisedSrc = computed(() => {\n      return props.src && typeof props.src === 'object' ? {\n        src: props.src.src,\n        srcset: props.srcset || props.src.srcset,\n        lazySrc: props.lazySrc || props.src.lazySrc,\n        aspect: Number(props.aspectRatio || props.src.aspect || 0)\n      } : {\n        src: props.src,\n        srcset: props.srcset,\n        lazySrc: props.lazySrc,\n        aspect: Number(props.aspectRatio || 0)\n      };\n    });\n    const aspectRatio = computed(() => {\n      return normalisedSrc.value.aspect || naturalWidth.value / naturalHeight.value || 0;\n    });\n    watch(() => props.src, () => {\n      init(state.value !== 'idle');\n    });\n    watch(aspectRatio, (val, oldVal) => {\n      if (!val && oldVal && image.value) {\n        pollForSize(image.value);\n      }\n    });\n\n    // TODO: getSrc when window width changes\n\n    onBeforeMount(() => init());\n    function init(isIntersecting) {\n      if (props.eager && isIntersecting) return;\n      if (SUPPORTS_INTERSECTION && !isIntersecting && !props.eager) return;\n      state.value = 'loading';\n      if (normalisedSrc.value.lazySrc) {\n        const lazyImg = new Image();\n        lazyImg.src = normalisedSrc.value.lazySrc;\n        pollForSize(lazyImg, null);\n      }\n      if (!normalisedSrc.value.src) return;\n      nextTick(() => {\n        emit('loadstart', image.value?.currentSrc || normalisedSrc.value.src);\n        if (image.value?.complete) {\n          if (!image.value.naturalWidth) {\n            onError();\n          }\n          if (state.value === 'error') return;\n          if (!aspectRatio.value) pollForSize(image.value, null);\n          onLoad();\n        } else {\n          if (!aspectRatio.value) pollForSize(image.value);\n          getSrc();\n        }\n      });\n    }\n    function onLoad() {\n      getSrc();\n      state.value = 'loaded';\n      emit('load', image.value?.currentSrc || normalisedSrc.value.src);\n    }\n    function onError() {\n      state.value = 'error';\n      emit('error', image.value?.currentSrc || normalisedSrc.value.src);\n    }\n    function getSrc() {\n      const img = image.value;\n      if (img) currentSrc.value = img.currentSrc || img.src;\n    }\n    let timer = -1;\n    function pollForSize(img) {\n      let timeout = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 100;\n      const poll = () => {\n        clearTimeout(timer);\n        const {\n          naturalHeight: imgHeight,\n          naturalWidth: imgWidth\n        } = img;\n        if (imgHeight || imgWidth) {\n          naturalWidth.value = imgWidth;\n          naturalHeight.value = imgHeight;\n        } else if (!img.complete && state.value === 'loading' && timeout != null) {\n          timer = window.setTimeout(poll, timeout);\n        } else if (img.currentSrc.endsWith('.svg') || img.currentSrc.startsWith('data:image/svg+xml')) {\n          naturalWidth.value = 1;\n          naturalHeight.value = 1;\n        }\n      };\n      poll();\n    }\n    const containClasses = computed(() => ({\n      'v-img__img--cover': props.cover,\n      'v-img__img--contain': !props.cover\n    }));\n    const __image = () => {\n      if (!normalisedSrc.value.src || state.value === 'idle') return null;\n      const img = _createVNode(\"img\", {\n        \"class\": ['v-img__img', containClasses.value],\n        \"src\": normalisedSrc.value.src,\n        \"srcset\": normalisedSrc.value.srcset,\n        \"alt\": props.alt,\n        \"sizes\": props.sizes,\n        \"ref\": image,\n        \"onLoad\": onLoad,\n        \"onError\": onError\n      }, null);\n      const sources = slots.sources?.();\n      return _createVNode(MaybeTransition, {\n        \"transition\": props.transition,\n        \"appear\": true\n      }, {\n        default: () => [withDirectives(sources ? _createVNode(\"picture\", {\n          \"class\": \"v-img__picture\"\n        }, [sources, img]) : img, [[vShow, state.value === 'loaded']])]\n      });\n    };\n    const __preloadImage = () => _createVNode(MaybeTransition, {\n      \"transition\": props.transition\n    }, {\n      default: () => [normalisedSrc.value.lazySrc && state.value !== 'loaded' && _createVNode(\"img\", {\n        \"class\": ['v-img__img', 'v-img__img--preload', containClasses.value],\n        \"src\": normalisedSrc.value.lazySrc,\n        \"alt\": props.alt\n      }, null)]\n    });\n    const __placeholder = () => {\n      if (!slots.placeholder) return null;\n      return _createVNode(MaybeTransition, {\n        \"transition\": props.transition,\n        \"appear\": true\n      }, {\n        default: () => [(state.value === 'loading' || state.value === 'error' && !slots.error) && _createVNode(\"div\", {\n          \"class\": \"v-img__placeholder\"\n        }, [slots.placeholder()])]\n      });\n    };\n    const __error = () => {\n      if (!slots.error) return null;\n      return _createVNode(MaybeTransition, {\n        \"transition\": props.transition,\n        \"appear\": true\n      }, {\n        default: () => [state.value === 'error' && _createVNode(\"div\", {\n          \"class\": \"v-img__error\"\n        }, [slots.error()])]\n      });\n    };\n    const __gradient = () => {\n      if (!props.gradient) return null;\n      return _createVNode(\"div\", {\n        \"class\": \"v-img__gradient\",\n        \"style\": {\n          backgroundImage: `linear-gradient(${props.gradient})`\n        }\n      }, null);\n    };\n    const isBooted = ref(false);\n    {\n      const stop = watch(aspectRatio, val => {\n        if (val) {\n          // Doesn't work with nextTick, idk why\n          requestAnimationFrame(() => {\n            requestAnimationFrame(() => {\n              isBooted.value = true;\n            });\n          });\n          stop();\n        }\n      });\n    }\n    useRender(() => _withDirectives(_createVNode(VResponsive, {\n      \"class\": ['v-img', {\n        'v-img--booting': !isBooted.value\n      }],\n      \"style\": {\n        width: convertToUnit(props.width === 'auto' ? naturalWidth.value : props.width)\n      },\n      \"aspectRatio\": aspectRatio.value,\n      \"aria-label\": props.alt,\n      \"role\": props.alt ? 'img' : undefined\n    }, {\n      additional: () => _createVNode(_Fragment, null, [_createVNode(__image, null, null), _createVNode(__preloadImage, null, null), _createVNode(__gradient, null, null), _createVNode(__placeholder, null, null), _createVNode(__error, null, null)]),\n      default: slots.default\n    }), [[_resolveDirective(\"intersect\"), {\n      handler: init,\n      options: props.options\n    }, null, {\n      once: true\n    }]]));\n    return {\n      currentSrc,\n      image,\n      state,\n      naturalWidth,\n      naturalHeight\n    };\n  }\n});","map":{"version":3,"mappings":"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","names":["VResponsive","intersect","makeTransitionProps","MaybeTransition","computed","nextTick","onBeforeMount","ref","vShow","watch","withDirectives","convertToUnit","genericComponent","SUPPORTS_INTERSECTION","useRender","VImg","name","directives","props","aspectRatio","String","Number","alt","cover","Boolean","eager","gradient","lazySrc","options","type","Object","default","root","undefined","rootMargin","threshold","sizes","src","srcset","width","emits","loadstart","value","load","error","setup","emit","slots","currentSrc","image","state","naturalWidth","naturalHeight","normalisedSrc","aspect","init","val","oldVal","pollForSize","isIntersecting","lazyImg","Image","complete","onError","onLoad","getSrc","img","timer","timeout","poll","clearTimeout","imgHeight","imgWidth","window","setTimeout","endsWith","startsWith","containClasses","__image","sources","transition","__preloadImage","__placeholder","placeholder","__error","__gradient","backgroundImage","isBooted","stop","requestAnimationFrame","additional","handler","once"],"sources":["../../../src/components/VImg/VImg.tsx"],"sourcesContent":["import './VImg.sass'\n\n// Components\nimport { VResponsive } from '@/components/VResponsive'\n\n// Directives\nimport intersect from '@/directives/intersect'\n\n// Composables\nimport { makeTransitionProps, MaybeTransition } from '@/composables/transition'\n\n// Utilities\nimport {\n  computed,\n  nextTick,\n  onBeforeMount,\n  ref,\n  vShow,\n  watch,\n  withDirectives,\n} from 'vue'\nimport {\n  convertToUnit,\n  genericComponent,\n  SUPPORTS_INTERSECTION,\n  useRender,\n} from '@/util'\n\n// Types\nimport type { PropType } from 'vue'\n\n// not intended for public use, this is passed in by vuetify-loader\nexport interface srcObject {\n  src?: string\n  srcset?: string\n  lazySrc?: string\n  aspect: number\n}\n\nexport type VImgSlots = {\n  default: []\n  placeholder: []\n  error: []\n  sources: []\n}\n\nexport const VImg = genericComponent<VImgSlots>()({\n  name: 'VImg',\n\n  directives: { intersect },\n\n  props: {\n    aspectRatio: [String, Number],\n    alt: String,\n    cover: Boolean,\n    eager: Boolean,\n    gradient: String,\n    lazySrc: String,\n    options: {\n      type: Object as PropType<IntersectionObserverInit>,\n      // For more information on types, navigate to:\n      // https://developer.mozilla.org/en-US/docs/Web/API/Intersection_Observer_API\n      default: () => ({\n        root: undefined,\n        rootMargin: undefined,\n        threshold: undefined,\n      }),\n    },\n    sizes: String,\n    src: {\n      type: [String, Object] as PropType<string | srcObject>,\n      default: '',\n    },\n    srcset: String,\n    width: [String, Number],\n\n    ...makeTransitionProps(),\n  },\n\n  emits: {\n    loadstart: (value: string | undefined) => true,\n    load: (value: string | undefined) => true,\n    error: (value: string | undefined) => true,\n  },\n\n  setup (props, { emit, slots }) {\n    const currentSrc = ref('') // Set from srcset\n    const image = ref<HTMLImageElement>()\n    const state = ref<'idle' | 'loading' | 'loaded' | 'error'>(props.eager ? 'loading' : 'idle')\n    const naturalWidth = ref<number>()\n    const naturalHeight = ref<number>()\n\n    const normalisedSrc = computed<srcObject>(() => {\n      return props.src && typeof props.src === 'object'\n        ? {\n          src: props.src.src,\n          srcset: props.srcset || props.src.srcset,\n          lazySrc: props.lazySrc || props.src.lazySrc,\n          aspect: Number(props.aspectRatio || props.src.aspect || 0),\n        } : {\n          src: props.src,\n          srcset: props.srcset,\n          lazySrc: props.lazySrc,\n          aspect: Number(props.aspectRatio || 0),\n        }\n    })\n    const aspectRatio = computed(() => {\n      return normalisedSrc.value.aspect || naturalWidth.value! / naturalHeight.value! || 0\n    })\n\n    watch(() => props.src, () => {\n      init(state.value !== 'idle')\n    })\n    watch(aspectRatio, (val, oldVal) => {\n      if (!val && oldVal && image.value) {\n        pollForSize(image.value)\n      }\n    })\n\n    // TODO: getSrc when window width changes\n\n    onBeforeMount(() => init())\n\n    function init (isIntersecting?: boolean) {\n      if (props.eager && isIntersecting) return\n      if (\n        SUPPORTS_INTERSECTION &&\n        !isIntersecting &&\n        !props.eager\n      ) return\n\n      state.value = 'loading'\n\n      if (normalisedSrc.value.lazySrc) {\n        const lazyImg = new Image()\n        lazyImg.src = normalisedSrc.value.lazySrc\n        pollForSize(lazyImg, null)\n      }\n\n      if (!normalisedSrc.value.src) return\n\n      nextTick(() => {\n        emit('loadstart', image.value?.currentSrc || normalisedSrc.value.src)\n\n        if (image.value?.complete) {\n          if (!image.value.naturalWidth) {\n            onError()\n          }\n\n          if (state.value === 'error') return\n\n          if (!aspectRatio.value) pollForSize(image.value, null)\n          onLoad()\n        } else {\n          if (!aspectRatio.value) pollForSize(image.value!)\n          getSrc()\n        }\n      })\n    }\n\n    function onLoad () {\n      getSrc()\n      state.value = 'loaded'\n      emit('load', image.value?.currentSrc || normalisedSrc.value.src)\n    }\n\n    function onError () {\n      state.value = 'error'\n      emit('error', image.value?.currentSrc || normalisedSrc.value.src)\n    }\n\n    function getSrc () {\n      const img = image.value\n      if (img) currentSrc.value = img.currentSrc || img.src\n    }\n\n    let timer = -1\n    function pollForSize (img: HTMLImageElement, timeout: number | null = 100) {\n      const poll = () => {\n        clearTimeout(timer)\n        const { naturalHeight: imgHeight, naturalWidth: imgWidth } = img\n\n        if (imgHeight || imgWidth) {\n          naturalWidth.value = imgWidth\n          naturalHeight.value = imgHeight\n        } else if (!img.complete && state.value === 'loading' && timeout != null) {\n          timer = window.setTimeout(poll, timeout)\n        } else if (img.currentSrc.endsWith('.svg') || img.currentSrc.startsWith('data:image/svg+xml')) {\n          naturalWidth.value = 1\n          naturalHeight.value = 1\n        }\n      }\n\n      poll()\n    }\n\n    const containClasses = computed(() => ({\n      'v-img__img--cover': props.cover,\n      'v-img__img--contain': !props.cover,\n    }))\n\n    const __image = () => {\n      if (!normalisedSrc.value.src || state.value === 'idle') return null\n\n      const img = (\n        <img\n          class={['v-img__img', containClasses.value]}\n          src={ normalisedSrc.value.src }\n          srcset={ normalisedSrc.value.srcset }\n          alt={ props.alt }\n          sizes={ props.sizes }\n          ref={ image }\n          onLoad={ onLoad }\n          onError={ onError }\n        />\n      )\n\n      const sources = slots.sources?.()\n\n      return (\n        <MaybeTransition transition={ props.transition } appear>\n          {\n            withDirectives(\n              sources\n                ? <picture class=\"v-img__picture\">{ sources }{ img }</picture>\n                : img,\n              [[vShow, state.value === 'loaded']]\n            )\n          }\n        </MaybeTransition>\n      )\n    }\n\n    const __preloadImage = () => (\n      <MaybeTransition transition={ props.transition }>\n        { normalisedSrc.value.lazySrc && state.value !== 'loaded' && (\n          <img\n            class={['v-img__img', 'v-img__img--preload', containClasses.value]}\n            src={ normalisedSrc.value.lazySrc }\n            alt={ props.alt }\n          />\n        )}\n      </MaybeTransition>\n    )\n\n    const __placeholder = () => {\n      if (!slots.placeholder) return null\n\n      return (\n        <MaybeTransition transition={ props.transition } appear>\n          { (state.value === 'loading' || (state.value === 'error' && !slots.error)) &&\n          <div class=\"v-img__placeholder\">{ slots.placeholder() }</div>\n          }\n        </MaybeTransition>\n      )\n    }\n\n    const __error = () => {\n      if (!slots.error) return null\n\n      return (\n        <MaybeTransition transition={ props.transition } appear>\n          { state.value === 'error' &&\n            <div class=\"v-img__error\">{ slots.error() }</div>\n          }\n        </MaybeTransition>\n      )\n    }\n\n    const __gradient = () => {\n      if (!props.gradient) return null\n\n      return <div class=\"v-img__gradient\" style={{ backgroundImage: `linear-gradient(${props.gradient})` }} />\n    }\n\n    const isBooted = ref(false)\n    {\n      const stop = watch(aspectRatio, val => {\n        if (val) {\n          // Doesn't work with nextTick, idk why\n          requestAnimationFrame(() => {\n            requestAnimationFrame(() => {\n              isBooted.value = true\n            })\n          })\n          stop()\n        }\n      })\n    }\n\n    useRender(() => (\n      <VResponsive\n        class={[\n          'v-img',\n          { 'v-img--booting': !isBooted.value },\n        ]}\n        style={{ width: convertToUnit(props.width === 'auto' ? naturalWidth.value : props.width) }}\n        aspectRatio={ aspectRatio.value }\n        aria-label={ props.alt }\n        role={ props.alt ? 'img' : undefined }\n        v-intersect={[{\n          handler: init,\n          options: props.options,\n        }, null, ['once']]}\n      >{{\n        additional: () => (\n          <>\n            <__image />\n            <__preloadImage />\n            <__gradient />\n            <__placeholder />\n            <__error />\n          </>\n        ),\n        default: slots.default,\n      }}</VResponsive>\n    ))\n\n    return {\n      currentSrc,\n      image,\n      state,\n      naturalWidth,\n      naturalHeight,\n    }\n  },\n})\n\nexport type VImg = InstanceType<typeof VImg>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}