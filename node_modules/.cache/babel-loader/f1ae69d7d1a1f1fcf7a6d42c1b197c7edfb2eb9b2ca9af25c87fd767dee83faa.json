{"ast":null,"code":"import { defineStore } from 'pinia';\nimport Config from \"@/utils/config.js\";\nimport axios from \"axios\";\nexport const useInfoCmdStore = defineStore(\"infoCmd\", {\n  state: () => ({\n    infoCmds: [],\n    loading: false,\n    params: {\n      code: ''\n    }\n  }),\n  // getters: {\n  //   getCommande(state) {\n  //     return state.commandes\n  //   }\n  // },\n  actions: {\n    async fetchInfoCommande() {\n      this.loading = true;\n      try {\n        const data = await axios.get(Config.SERVER_URL + 'api/infoCmd', {\n          params: this.params\n        });\n        this.infoCmds = data.data;\n        this.loading = false;\n      } catch (error) {\n        alert(error);\n        console.log(error);\n      } finally {\n        this.loading = false;\n      }\n    },\n    async updateInfoCommande(infCmd) {\n      const response = await axios.patch(Config.SERVER_URL + 'api/updateInfoCmd', infCmd);\n      this.data = response.data;\n    },\n    setCode(code) {\n      this.params.code = code;\n    }\n  }\n});\n//export const piniaPlugin = createPiniaPlugin()","map":{"version":3,"names":["defineStore","Config","axios","useInfoCmdStore","state","infoCmds","loading","params","code","actions","fetchInfoCommande","data","get","SERVER_URL","error","alert","console","log","updateInfoCommande","infCmd","response","patch","setCode"],"sources":["/Users/anjaniainaandrianina/Desktop/Project/prepa/ERPO/frontend_prepa/prepa/src/store/Apreparer/infoCmd.js"],"sourcesContent":["import { defineStore } from 'pinia'\nimport Config  from \"@/utils/config.js\"\nimport axios from \"axios\"\nexport const useInfoCmdStore = defineStore(\"infoCmd\", {\n  state: () => ({\n    infoCmds: [],\n    loading: false,\n    params:{\n      code:'',\n    },\n  }),\n  // getters: {\n  //   getCommande(state) {\n  //     return state.commandes\n  //   }\n  // },\n  actions: {\n    async fetchInfoCommande() {\n      this.loading = true\n      try {\n        const data = await axios.get(Config.SERVER_URL + 'api/infoCmd',{ params: this.params })\n        this.infoCmds = data.data\n        this.loading = false\n      }\n      catch (error) {\n        alert(error)\n        console.log(error)\n      } finally {\n        this.loading = false\n      }\n    },\n    async updateInfoCommande(infCmd) {\n      const response = await axios.patch(Config.SERVER_URL +'api/updateInfoCmd', infCmd);\n      this.data = response.data;\n    },\n    setCode(code) {\n      this.params.code = code;\n    },\n  },\n \n})\n//export const piniaPlugin = createPiniaPlugin()"],"mappings":"AAAA,SAASA,WAAW,QAAQ,OAAO;AACnC,OAAOC,MAAM,MAAO,mBAAmB;AACvC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,MAAMC,eAAe,GAAGH,WAAW,CAAC,SAAS,EAAE;EACpDI,KAAK,EAAE,OAAO;IACZC,QAAQ,EAAE,EAAE;IACZC,OAAO,EAAE,KAAK;IACdC,MAAM,EAAC;MACLC,IAAI,EAAC;IACP;EACF,CAAC,CAAC;EACF;EACA;EACA;EACA;EACA;EACAC,OAAO,EAAE;IACP,MAAMC,iBAAiB,GAAG;MACxB,IAAI,CAACJ,OAAO,GAAG,IAAI;MACnB,IAAI;QACF,MAAMK,IAAI,GAAG,MAAMT,KAAK,CAACU,GAAG,CAACX,MAAM,CAACY,UAAU,GAAG,aAAa,EAAC;UAAEN,MAAM,EAAE,IAAI,CAACA;QAAO,CAAC,CAAC;QACvF,IAAI,CAACF,QAAQ,GAAGM,IAAI,CAACA,IAAI;QACzB,IAAI,CAACL,OAAO,GAAG,KAAK;MACtB,CAAC,CACD,OAAOQ,KAAK,EAAE;QACZC,KAAK,CAACD,KAAK,CAAC;QACZE,OAAO,CAACC,GAAG,CAACH,KAAK,CAAC;MACpB,CAAC,SAAS;QACR,IAAI,CAACR,OAAO,GAAG,KAAK;MACtB;IACF,CAAC;IACD,MAAMY,kBAAkB,CAACC,MAAM,EAAE;MAC/B,MAAMC,QAAQ,GAAG,MAAMlB,KAAK,CAACmB,KAAK,CAACpB,MAAM,CAACY,UAAU,GAAE,mBAAmB,EAAEM,MAAM,CAAC;MAClF,IAAI,CAACR,IAAI,GAAGS,QAAQ,CAACT,IAAI;IAC3B,CAAC;IACDW,OAAO,CAACd,IAAI,EAAE;MACZ,IAAI,CAACD,MAAM,CAACC,IAAI,GAAGA,IAAI;IACzB;EACF;AAEF,CAAC,CAAC;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}