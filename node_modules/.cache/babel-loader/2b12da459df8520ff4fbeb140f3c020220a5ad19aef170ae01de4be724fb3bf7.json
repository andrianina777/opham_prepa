{"ast":null,"code":"import { defineStore } from 'pinia';\nimport Config from \"@/utils/config.js\";\nimport axios from \"axios\";\nexport const useCommandeStore = defineStore(\"commande\", {\n  state: () => ({\n    commandes: [],\n    loading: false,\n    params: {\n      groupe: '',\n      dateliv: null\n    }\n  }),\n  // getters: {\n  //   getCommande(state) {\n  //     return state.commandes\n  //   }\n  // },\n  actions: {\n    async fetchCommande() {\n      this.loading = true;\n      try {\n        const data = await axios.get(Config.SERVER_URL + 'api/prep', {\n          params: this.params\n        });\n        this.commandes = data.data;\n        this.loading = false;\n      } catch (error) {\n        alert(error);\n        console.log(error);\n      } finally {\n        this.loading = false;\n      }\n    }\n    // setGroupe(groupe) {\n    //   this.params.groupe = groupe;\n    // },\n    // setDateliv(dateliv) {\n    //   this.params.dateliv = dateliv;\n    // }\n  }\n});\n//export const piniaPlugin = createPiniaPlugin()","map":{"version":3,"names":["defineStore","Config","axios","useCommandeStore","state","commandes","loading","params","groupe","dateliv","actions","fetchCommande","data","get","SERVER_URL","error","alert","console","log"],"sources":["/Users/anjaniainaandrianina/Desktop/Project/prepa/ERPO/frontend_prepa/prepa/src/store/Apreparer/commande.js"],"sourcesContent":["import { defineStore } from 'pinia'\nimport Config  from \"@/utils/config.js\"\nimport axios from \"axios\"\nexport const useCommandeStore = defineStore(\"commande\", {\n  state: () => ({\n    commandes: [],\n    loading: false,\n    params:{\n      groupe:'',\n      dateliv:null,\n    },\n  }),\n  // getters: {\n  //   getCommande(state) {\n  //     return state.commandes\n  //   }\n  // },\n  actions: {\n    async fetchCommande() {\n      this.loading = true\n      try {\n        const data = await axios.get(Config.SERVER_URL+ 'api/prep',{ params: this.params })\n        this.commandes = data.data\n        this.loading = false\n      }\n      catch (error) {\n        alert(error)\n        console.log(error)\n      } finally {\n        this.loading = false\n      }\n    },\n    // setGroupe(groupe) {\n    //   this.params.groupe = groupe;\n    // },\n    // setDateliv(dateliv) {\n    //   this.params.dateliv = dateliv;\n    // }\n  },\n \n})\n//export const piniaPlugin = createPiniaPlugin()"],"mappings":"AAAA,SAASA,WAAW,QAAQ,OAAO;AACnC,OAAOC,MAAM,MAAO,mBAAmB;AACvC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,MAAMC,gBAAgB,GAAGH,WAAW,CAAC,UAAU,EAAE;EACtDI,KAAK,EAAE,OAAO;IACZC,SAAS,EAAE,EAAE;IACbC,OAAO,EAAE,KAAK;IACdC,MAAM,EAAC;MACLC,MAAM,EAAC,EAAE;MACTC,OAAO,EAAC;IACV;EACF,CAAC,CAAC;EACF;EACA;EACA;EACA;EACA;EACAC,OAAO,EAAE;IACP,MAAMC,aAAa,GAAG;MACpB,IAAI,CAACL,OAAO,GAAG,IAAI;MACnB,IAAI;QACF,MAAMM,IAAI,GAAG,MAAMV,KAAK,CAACW,GAAG,CAACZ,MAAM,CAACa,UAAU,GAAE,UAAU,EAAC;UAAEP,MAAM,EAAE,IAAI,CAACA;QAAO,CAAC,CAAC;QACnF,IAAI,CAACF,SAAS,GAAGO,IAAI,CAACA,IAAI;QAC1B,IAAI,CAACN,OAAO,GAAG,KAAK;MACtB,CAAC,CACD,OAAOS,KAAK,EAAE;QACZC,KAAK,CAACD,KAAK,CAAC;QACZE,OAAO,CAACC,GAAG,CAACH,KAAK,CAAC;MACpB,CAAC,SAAS;QACR,IAAI,CAACT,OAAO,GAAG,KAAK;MACtB;IACF;IACA;IACA;IACA;IACA;IACA;IACA;EACF;AAEF,CAAC,CAAC;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}