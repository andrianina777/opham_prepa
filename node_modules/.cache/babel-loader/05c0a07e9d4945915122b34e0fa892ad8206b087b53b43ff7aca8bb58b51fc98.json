{"ast":null,"code":"import { resolveDirective as _resolveDirective, createVNode as _createVNode, mergeProps as _mergeProps, Fragment as _Fragment } from \"vue\";\n// Styles\nimport \"./VFileInput.css\";\n\n// Components\nimport { filterFieldProps, makeVFieldProps } from \"../VField/VField.mjs\";\nimport { filterInputProps, makeVInputProps, VInput } from \"../VInput/VInput.mjs\";\nimport { VChip } from \"../VChip/index.mjs\";\nimport { VCounter } from \"../VCounter/index.mjs\";\nimport { VField } from \"../VField/index.mjs\"; // Composables\nimport { forwardRefs } from \"../../composables/forwardRefs.mjs\";\nimport { useLocale } from \"../../composables/locale.mjs\";\nimport { useProxiedModel } from \"../../composables/proxiedModel.mjs\"; // Utilities\nimport { computed, nextTick, ref, watch } from 'vue';\nimport { callEvent, filterInputAttrs, genericComponent, humanReadableFileSize, useRender, wrapInArray } from \"../../util/index.mjs\"; // Types\nexport const VFileInput = genericComponent()({\n  name: 'VFileInput',\n  inheritAttrs: false,\n  props: {\n    chips: Boolean,\n    counter: Boolean,\n    counterSizeString: {\n      type: String,\n      default: '$vuetify.fileInput.counterSize'\n    },\n    counterString: {\n      type: String,\n      default: '$vuetify.fileInput.counter'\n    },\n    multiple: Boolean,\n    hint: String,\n    persistentHint: Boolean,\n    showSize: {\n      type: [Boolean, Number],\n      default: false,\n      validator: v => {\n        return typeof v === 'boolean' || [1000, 1024].includes(v);\n      }\n    },\n    ...makeVInputProps({\n      prependIcon: '$file'\n    }),\n    modelValue: {\n      type: Array,\n      default: () => [],\n      validator: val => {\n        return wrapInArray(val).every(v => v != null && typeof v === 'object');\n      }\n    },\n    ...makeVFieldProps({\n      clearable: true\n    })\n  },\n  emits: {\n    'click:control': e => true,\n    'mousedown:control': e => true,\n    'update:modelValue': files => true\n  },\n  setup(props, _ref) {\n    let {\n      attrs,\n      emit,\n      slots\n    } = _ref;\n    const {\n      t\n    } = useLocale();\n    const model = useProxiedModel(props, 'modelValue');\n    const base = computed(() => typeof props.showSize !== 'boolean' ? props.showSize : undefined);\n    const totalBytes = computed(() => (model.value ?? []).reduce((bytes, _ref2) => {\n      let {\n        size = 0\n      } = _ref2;\n      return bytes + size;\n    }, 0));\n    const totalBytesReadable = computed(() => humanReadableFileSize(totalBytes.value, base.value));\n    const fileNames = computed(() => (model.value ?? []).map(file => {\n      const {\n        name = '',\n        size = 0\n      } = file;\n      return !props.showSize ? name : `${name} (${humanReadableFileSize(size, base.value)})`;\n    }));\n    const counterValue = computed(() => {\n      const fileCount = model.value?.length ?? 0;\n      if (props.showSize) return t(props.counterSizeString, fileCount, totalBytesReadable.value);else return t(props.counterString, fileCount);\n    });\n    const vInputRef = ref();\n    const vFieldRef = ref();\n    const isFocused = ref(false);\n    const inputRef = ref();\n    const messages = computed(() => {\n      return props.messages.length ? props.messages : props.persistentHint ? props.hint : '';\n    });\n    function onFocus() {\n      if (inputRef.value !== document.activeElement) {\n        inputRef.value?.focus();\n      }\n      if (!isFocused.value) {\n        isFocused.value = true;\n      }\n    }\n    function onClickPrepend(e) {\n      callEvent(props['onClick:prepend'], e);\n      onControlClick(e);\n    }\n    function onControlMousedown(e) {\n      emit('mousedown:control', e);\n    }\n    function onControlClick(e) {\n      inputRef.value?.click();\n      emit('click:control', e);\n    }\n    function onClear(e) {\n      e.stopPropagation();\n      onFocus();\n      nextTick(() => {\n        model.value = [];\n        callEvent(props['onClick:clear'], e);\n      });\n    }\n    watch(model, newValue => {\n      const hasModelReset = !Array.isArray(newValue) || !newValue.length;\n      if (hasModelReset && inputRef.value) {\n        inputRef.value.value = '';\n      }\n    });\n    useRender(() => {\n      const hasCounter = !!(slots.counter || props.counter);\n      const hasDetails = !!(hasCounter || slots.details);\n      const [rootAttrs, inputAttrs] = filterInputAttrs(attrs);\n      const [{\n        modelValue: _,\n        ...inputProps\n      }] = filterInputProps(props);\n      const [fieldProps] = filterFieldProps(props);\n      return _createVNode(VInput, _mergeProps({\n        \"ref\": vInputRef,\n        \"modelValue\": model.value,\n        \"onUpdate:modelValue\": $event => model.value = $event,\n        \"class\": \"v-file-input\",\n        \"onClick:prepend\": onClickPrepend,\n        \"onClick:append\": props['onClick:append']\n      }, rootAttrs, inputProps, {\n        \"focused\": isFocused.value,\n        \"messages\": messages.value\n      }), {\n        ...slots,\n        default: _ref3 => {\n          let {\n            id,\n            isDisabled,\n            isDirty,\n            isReadonly,\n            isValid\n          } = _ref3;\n          return _createVNode(VField, _mergeProps({\n            \"ref\": vFieldRef,\n            \"prepend-icon\": props.prependIcon,\n            \"onMousedown\": onControlMousedown,\n            \"onClick\": onControlClick,\n            \"onClick:clear\": onClear,\n            \"onClick:prependInner\": props['onClick:prependInner'],\n            \"onClick:appendInner\": props['onClick:appendInner']\n          }, fieldProps, {\n            \"id\": id.value,\n            \"active\": isDirty.value || isFocused.value,\n            \"dirty\": isDirty.value,\n            \"disabled\": isDisabled.value,\n            \"focused\": isFocused.value,\n            \"error\": isValid.value === false\n          }), {\n            ...slots,\n            default: _ref4 => {\n              let {\n                props: {\n                  class: fieldClass,\n                  ...slotProps\n                }\n              } = _ref4;\n              return _createVNode(_Fragment, null, [_createVNode(\"input\", _mergeProps({\n                \"ref\": inputRef,\n                \"type\": \"file\",\n                \"readonly\": isReadonly.value,\n                \"disabled\": isDisabled.value,\n                \"multiple\": props.multiple,\n                \"name\": props.name,\n                \"onClick\": e => {\n                  e.stopPropagation();\n                  onFocus();\n                },\n                \"onChange\": e => {\n                  if (!e.target) return;\n                  const target = e.target;\n                  model.value = [...(target.files ?? [])];\n                },\n                \"onFocus\": onFocus,\n                \"onBlur\": () => isFocused.value = false\n              }, slotProps, inputAttrs), null), _createVNode(\"div\", {\n                \"class\": fieldClass\n              }, [!!model.value?.length && (slots.selection ? slots.selection({\n                fileNames: fileNames.value,\n                totalBytes: totalBytes.value,\n                totalBytesReadable: totalBytesReadable.value\n              }) : props.chips ? fileNames.value.map(text => _createVNode(VChip, {\n                \"key\": text,\n                \"size\": \"small\",\n                \"color\": props.color\n              }, {\n                default: () => [text]\n              })) : fileNames.value.join(', '))])]);\n            }\n          });\n        },\n        details: hasDetails ? slotProps => _createVNode(_Fragment, null, [slots.details?.(slotProps), hasCounter && _createVNode(_Fragment, null, [_createVNode(\"span\", null, null), _createVNode(VCounter, {\n          \"active\": !!model.value?.length,\n          \"value\": counterValue.value\n        }, slots.counter)])]) : undefined\n      });\n    });\n    return forwardRefs({}, vInputRef, vFieldRef, inputRef);\n  }\n});","map":{"version":3,"mappings":"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","names":["filterFieldProps","makeVFieldProps","filterInputProps","makeVInputProps","VInput","VChip","VCounter","VField","forwardRefs","useLocale","useProxiedModel","computed","nextTick","ref","watch","callEvent","filterInputAttrs","genericComponent","humanReadableFileSize","useRender","wrapInArray","VFileInput","name","inheritAttrs","props","chips","Boolean","counter","counterSizeString","type","String","default","counterString","multiple","hint","persistentHint","showSize","Number","validator","v","includes","prependIcon","modelValue","Array","val","every","clearable","emits","e","files","setup","attrs","emit","slots","t","model","base","undefined","totalBytes","value","reduce","bytes","size","totalBytesReadable","fileNames","map","file","counterValue","fileCount","length","vInputRef","vFieldRef","isFocused","inputRef","messages","onFocus","document","activeElement","focus","onClickPrepend","onControlClick","onControlMousedown","click","onClear","stopPropagation","newValue","hasModelReset","isArray","hasCounter","hasDetails","details","rootAttrs","inputAttrs","_","inputProps","fieldProps","_ref3","id","isDisabled","isDirty","isReadonly","isValid","_ref4","class","fieldClass","slotProps","target","onBlur","selection","text","color","join"],"sources":["../../../src/components/VFileInput/VFileInput.tsx"],"sourcesContent":["// Styles\nimport './VFileInput.sass'\n\n// Components\nimport { filterFieldProps, makeVFieldProps } from '@/components/VField/VField'\nimport { filterInputProps, makeVInputProps, VInput } from '@/components/VInput/VInput'\nimport { VChip } from '@/components/VChip'\nimport { VCounter } from '@/components/VCounter'\nimport { VField } from '@/components/VField'\n\n// Composables\nimport { forwardRefs } from '@/composables/forwardRefs'\nimport { useLocale } from '@/composables/locale'\nimport { useProxiedModel } from '@/composables/proxiedModel'\n\n// Utilities\nimport { computed, nextTick, ref, watch } from 'vue'\nimport {\n  callEvent,\n  filterInputAttrs,\n  genericComponent,\n  humanReadableFileSize,\n  useRender,\n  wrapInArray,\n} from '@/util'\n\n// Types\nimport type { PropType } from 'vue'\nimport type { MakeSlots } from '@/util'\nimport type { VFieldSlots } from '@/components/VField/VField'\nimport type { VInputSlots } from '@/components/VInput/VInput'\n\nexport type VFileInputSlots = VInputSlots & VFieldSlots & MakeSlots<{\n  counter: []\n}>\n\nexport const VFileInput = genericComponent<VFileInputSlots>()({\n  name: 'VFileInput',\n\n  inheritAttrs: false,\n\n  props: {\n    chips: Boolean,\n    counter: Boolean,\n    counterSizeString: {\n      type: String,\n      default: '$vuetify.fileInput.counterSize',\n    },\n    counterString: {\n      type: String,\n      default: '$vuetify.fileInput.counter',\n    },\n    multiple: Boolean,\n    hint: String,\n    persistentHint: Boolean,\n    showSize: {\n      type: [Boolean, Number] as PropType<boolean | 1000 | 1024>,\n      default: false,\n      validator: (v: boolean | number) => {\n        return (\n          typeof v === 'boolean' ||\n          [1000, 1024].includes(v)\n        )\n      },\n    },\n\n    ...makeVInputProps({ prependIcon: '$file' }),\n\n    modelValue: {\n      type: Array as PropType<File[]>,\n      default: () => ([]),\n      validator: (val: any) => {\n        return wrapInArray(val).every(v => v != null && typeof v === 'object')\n      },\n    },\n\n    ...makeVFieldProps({ clearable: true }),\n  },\n\n  emits: {\n    'click:control': (e: MouseEvent) => true,\n    'mousedown:control': (e: MouseEvent) => true,\n    'update:modelValue': (files: File[]) => true,\n  },\n\n  setup (props, { attrs, emit, slots }) {\n    const { t } = useLocale()\n    const model = useProxiedModel(props, 'modelValue')\n    const base = computed(() => typeof props.showSize !== 'boolean' ? props.showSize : undefined)\n    const totalBytes = computed(() => (model.value ?? []).reduce((bytes, { size = 0 }) => bytes + size, 0))\n    const totalBytesReadable = computed(() => humanReadableFileSize(totalBytes.value, base.value))\n\n    const fileNames = computed(() => (model.value ?? []).map(file => {\n      const { name = '', size = 0 } = file\n\n      return !props.showSize\n        ? name\n        : `${name} (${humanReadableFileSize(size, base.value)})`\n    }))\n\n    const counterValue = computed(() => {\n      const fileCount = model.value?.length ?? 0\n      if (props.showSize) return t(props.counterSizeString, fileCount, totalBytesReadable.value)\n      else return t(props.counterString, fileCount)\n    })\n    const vInputRef = ref<VInput>()\n    const vFieldRef = ref<VInput>()\n    const isFocused = ref(false)\n    const inputRef = ref<HTMLInputElement>()\n    const messages = computed(() => {\n      return props.messages.length\n        ? props.messages\n        : (props.persistentHint) ? props.hint : ''\n    })\n    function onFocus () {\n      if (inputRef.value !== document.activeElement) {\n        inputRef.value?.focus()\n      }\n\n      if (!isFocused.value) {\n        isFocused.value = true\n      }\n    }\n    function onClickPrepend (e: MouseEvent) {\n      callEvent(props['onClick:prepend'], e)\n      onControlClick(e)\n    }\n    function onControlMousedown (e: MouseEvent) {\n      emit('mousedown:control', e)\n    }\n    function onControlClick (e: MouseEvent) {\n      inputRef.value?.click()\n\n      emit('click:control', e)\n    }\n    function onClear (e: MouseEvent) {\n      e.stopPropagation()\n\n      onFocus()\n\n      nextTick(() => {\n        model.value = []\n\n        callEvent(props['onClick:clear'], e)\n      })\n    }\n\n    watch(model, newValue => {\n      const hasModelReset = !Array.isArray(newValue) || !newValue.length\n\n      if (hasModelReset && inputRef.value) {\n        inputRef.value.value = ''\n      }\n    })\n\n    useRender(() => {\n      const hasCounter = !!(slots.counter || props.counter)\n      const hasDetails = !!(hasCounter || slots.details)\n      const [rootAttrs, inputAttrs] = filterInputAttrs(attrs)\n      const [{ modelValue: _, ...inputProps }] = filterInputProps(props)\n      const [fieldProps] = filterFieldProps(props)\n\n      return (\n        <VInput\n          ref={ vInputRef }\n          v-model={ model.value }\n          class=\"v-file-input\"\n          onClick:prepend={ onClickPrepend }\n          onClick:append={ props['onClick:append'] }\n          { ...rootAttrs }\n          { ...inputProps }\n          focused={ isFocused.value }\n          messages={ messages.value }\n        >\n          {{\n            ...slots,\n            default: ({\n              id,\n              isDisabled,\n              isDirty,\n              isReadonly,\n              isValid,\n            }) => (\n              <VField\n                ref={ vFieldRef }\n                prepend-icon={ props.prependIcon }\n                onMousedown={ onControlMousedown }\n                onClick={ onControlClick }\n                onClick:clear={ onClear }\n                onClick:prependInner={ props['onClick:prependInner'] }\n                onClick:appendInner={ props['onClick:appendInner'] }\n                { ...fieldProps }\n                id={ id.value }\n                active={ isDirty.value || isFocused.value }\n                dirty={ isDirty.value }\n                disabled={ isDisabled.value }\n                focused={ isFocused.value }\n                error={ isValid.value === false }\n              >\n                {{\n                  ...slots,\n                  default: ({\n                    props: { class: fieldClass, ...slotProps },\n                  }) => (\n                    <>\n                      <input\n                        ref={ inputRef }\n                        type=\"file\"\n                        readonly={ isReadonly.value }\n                        disabled={ isDisabled.value }\n                        multiple={ props.multiple }\n                        name={ props.name }\n                        onClick={ e => {\n                          e.stopPropagation()\n\n                          onFocus()\n                        }}\n                        onChange={ e => {\n                          if (!e.target) return\n\n                          const target = e.target as HTMLInputElement\n                          model.value = [...target.files ?? []]\n                        }}\n                        onFocus={ onFocus }\n                        onBlur={ () => (isFocused.value = false) }\n                        { ...slotProps }\n                        { ...inputAttrs }\n                      />\n\n                      <div class={ fieldClass }>\n                        { !!model.value?.length && (\n                          slots.selection ? slots.selection({\n                            fileNames: fileNames.value,\n                            totalBytes: totalBytes.value,\n                            totalBytesReadable: totalBytesReadable.value,\n                          })\n                          : props.chips ? fileNames.value.map(text => (\n                            <VChip\n                              key={ text }\n                              size=\"small\"\n                              color={ props.color }\n                            >{ text }</VChip>\n                          ))\n                          : fileNames.value.join(', ')\n                        )}\n                      </div>\n                    </>\n                  ),\n                }}\n              </VField>\n            ),\n            details: hasDetails ? slotProps => (\n              <>\n                { slots.details?.(slotProps) }\n\n                { hasCounter && (\n                  <>\n                    <span />\n\n                    <VCounter\n                      active={ !!model.value?.length }\n                      value={ counterValue.value }\n                      v-slots:default={ slots.counter }\n                    />\n                  </>\n                )}\n              </>\n            ) : undefined,\n          }}\n        </VInput>\n      )\n    })\n\n    return forwardRefs({}, vInputRef, vFieldRef, inputRef)\n  },\n})\n\nexport type VFileInput = InstanceType<typeof VFileInput>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}