{"ast":null,"code":"import MyDialog from '@/components/DialogFullScreen.vue';\nimport MyTable from '@/components/MyTable.vue';\nimport MyList from '@/components/MyList.vue';\nimport MyTextarea from '@/components/MyTextarea.vue';\nimport MyTextField from '@/components/MyTextField.vue';\nimport MySelect from '@/components/MySelect.vue';\nimport Alert from '@/components/Alert.vue';\nimport { useLigneCommandeStore } from \"@/store/Apreparer/ligneCommande.js\";\nimport { useDetailPrepStore } from \"@/store/Apreparer/detailPrep.js\";\nimport { useInfoCmdStore } from \"@/store/Apreparer/infoCmd.js\";\nimport { useAxeStore } from \"@/store/utils/axe.js\";\nimport { useEnumerationStore } from \"@/store/utils/enumeration.js\";\nimport { useRoute, useRouter } from 'vue-router';\nimport { useReportBPStore } from '@/store/report/printBP';\nimport { ref, reactive, onMounted, computed, defineEmits, defineComponent, watch, onBeforeMount } from \"vue\";\nimport useDateTime from '@/composables/useDateTime';\nexport default defineComponent({\n  components: {\n    MyDialog,\n    MyTable,\n    MyList,\n    MyTextarea,\n    MyTextField,\n    MySelect,\n    Alert\n  },\n  name: 'voirCmd',\n  setup() {\n    const route = useRoute();\n    const CC = route.params.CC;\n    const router = useRouter();\n    const storeLigne = useLigneCommandeStore();\n    const storePrep = useDetailPrepStore();\n    const storeInfoCmd = useInfoCmdStore();\n    const storeEnum = useEnumerationStore();\n    const storeAxe = useAxeStore();\n    const loading = ref(false);\n    const dialogVisible = ref(false);\n    const success = ref(false);\n    let titre_detail = ref(\"\");\n    const date_liv = ref(null);\n    const storePrint = useReportBPStore();\n\n    // function closeDialog() {\n    //     dialogVisible.value = true;\n    //     // router.push({ name: 'attePrepa' });\n    //     history.back();\n    // }\n\n    onBeforeMount(() => {\n      dialogVisible.value = true;\n      titre_detail.value = \"Details du Commande \" + CC;\n      fetchligneCommande();\n      fetchDetailPreps();\n      fetchInfoCmd();\n      fetchAxes();\n      fetchEnumCom();\n    });\n    const headersLigne = [{\n      title: 'article',\n      align: 'start',\n      key: 'code_article',\n      sortable: true\n    }, {\n      title: 'Libellé',\n      align: 'start',\n      key: 'libelle',\n      sortable: true\n    }, {\n      title: 'Quantité Commandée',\n      align: 'center',\n      key: 'qte_cmd'\n    },\n    // { title: 'Quantité Restée', align: 'end', key: 'qte_reste' },\n    // { title: 'Quantité Expediée', align: 'end', key: 'qte_expedie' },\n    {\n      title: 'Transfert',\n      align: 'center',\n      key: 'coms'\n    }];\n    const headersSecondtable = [{\n      title: 'BP',\n      align: 'start',\n      key: 'code_BP',\n      sortable: true\n    }, {\n      title: 'DEPOT',\n      align: 'start',\n      key: 'depot'\n    }, {\n      title: 'DATE',\n      align: 'start',\n      key: 'datecre_BP',\n      sortable: true\n    }, {\n      title: 'STADE',\n      align: 'start',\n      key: 'stade'\n    }, {\n      title: 'BACS',\n      align: 'start',\n      key: 'listBac'\n    }, {\n      title: 'EMPLACEMENT',\n      align: 'start',\n      key: 'empl'\n    }, {\n      title: 'NB COLIS',\n      align: 'center',\n      key: 'nbColis'\n    }, {\n      title: 'Actions',\n      align: 'start',\n      key: 'actions',\n      value: 'actions'\n    }];\n    const fetchligneCommande = async () => {\n      loading.value = true;\n      storeLigne.params.code = CC;\n      console.log(storeLigne.params.code);\n      storeLigne.fetchLigneCommande();\n      loading.value = false;\n    };\n    const fetchDetailPreps = async () => {\n      loading.value = true;\n      storePrep.params.code = CC;\n      console.log(storePrep.params.code);\n      storePrep.fetchDetailPrep();\n      loading.value = false;\n    };\n    const fetchInfoCmd = async () => {\n      loading.value = true;\n      storeInfoCmd.params.code = CC;\n      storeInfoCmd.fetchInfoCommande();\n      const {\n        dateTime\n      } = useDateTime(storeInfoCmd.infoCmds.date_liv);\n      date_liv.value = dateTime.value;\n      loading.value = false;\n      console.log(storeInfoCmd);\n    };\n    const fetchAxes = async () => {\n      loading.value = true;\n      storeAxe.fetchAxe();\n      loading.value = false;\n    };\n    const fetchEnumCom = async () => {\n      loading.value = true;\n      storeEnum.params.code = \"COM_DATELIV\";\n      console.log(storeEnum.params.code);\n      storeEnum.fetchEnums();\n      loading.value = false;\n    };\n    function saveItem() {\n      const infoCmd = {\n        coms_mag: storeInfoCmd.infoCmds.coms_mag,\n        axe: storeInfoCmd.infoCmds.axe,\n        date_liv: new Date(storeInfoCmd.infoCmds.date_l + 'T' + storeInfoCmd.infoCmds.heure_l),\n        raisonDateLiv: storeInfoCmd.infoCmds.raisonDateLiv,\n        code_cc: CC\n      };\n      console.log(infoCmd);\n      storeInfoCmd.updateInfoCommande(infoCmd);\n      // closeDialog();\n    }\n\n    const imprimer = async item => {\n      try {\n        console.log(item.value.code_BP);\n        const response = await storePrint.generateReport(item.value.code_BP, 1);\n        //     const blob = new Blob([response.data], { type: 'application/pdf' });\n        //     const url = URL.createObjectURL(blob);\n        //     const link = document.createElement('a');\n        //     link.href = url;\n        //     link.setAttribute('download', 'prepaA5.pdf');\n        //     document.body.appendChild(link);\n        //     link.click();\n        //     document.body.removeChild(link);\n        //     URL.revokeObjectURL(url);\n        // } catch (error) {\n        //     console.error(error);\n        // }\n        const blob = new Blob([response.data], {\n          type: 'application/pdf'\n        });\n        const url = URL.createObjectURL(blob);\n        window.open(url, '_blank');\n        URL.revokeObjectURL(url);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    // const selectedDateTimeFormatted = computed(() => {\n    //     if (storeInfoCmd.infoCmds.date_liv != null) {\n    //         const { dateTime } = useDateTime(storeInfoCmd.infoCmds.date_liv);\n    //         return dateTime.value;\n    //     } else {\n    //         return \"\";\n    //     }\n    // });\n\n    return {\n      dialogVisible,\n      headersLigne,\n      headersSecondtable,\n      titre_detail,\n      storeLigne,\n      fetchligneCommande,\n      fetchDetailPreps,\n      storePrep,\n      storeInfoCmd,\n      fetchInfoCmd,\n      fetchAxes,\n      storeAxe,\n      fetchEnumCom,\n      storeEnum,\n      saveItem,\n      onMounted,\n      CC,\n      success,\n      imprimer\n    };\n  }\n});","map":{"version":3,"mappings":"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","names":["MyDialog","MyTable","MyList","MyTextarea","MyTextField","MySelect","Alert","useLigneCommandeStore","useDetailPrepStore","useInfoCmdStore","useAxeStore","useEnumerationStore","useRoute","useRouter","useReportBPStore","ref","reactive","onMounted","computed","defineEmits","defineComponent","watch","onBeforeMount","useDateTime","components","name","setup","route","CC","params","router","storeLigne","storePrep","storeInfoCmd","storeEnum","storeAxe","loading","dialogVisible","success","titre_detail","date_liv","storePrint","value","fetchligneCommande","fetchDetailPreps","fetchInfoCmd","fetchAxes","fetchEnumCom","headersLigne","title","align","key","sortable","headersSecondtable","code","console","log","fetchLigneCommande","fetchDetailPrep","fetchInfoCommande","dateTime","infoCmds","fetchAxe","fetchEnums","saveItem","infoCmd","coms_mag","axe","Date","date_l","heure_l","raisonDateLiv","code_cc","updateInfoCommande","imprimer","item","code_BP","response","generateReport","blob","Blob","data","type","url","URL","createObjectURL","window","open","revokeObjectURL","error"],"sourceRoot":"","sources":["/Users/anjaniainaandrianina/Desktop/Project/prepa/ERPO/frontend_prepa/prepa/src/views/VoirCmd.vue"],"sourcesContent":["<template>\n    <MyDialog :titre_toolbar=titre_detail btn_valide=\"Valider\" @save=\"saveItem\" @close=\"closeDialog\"\n        v-model=\"dialogVisible\">\n        <!-- <div>\n\n            <v-card-text>\n                <b> {{ storeInfoCmd.infoCmds.nom_client }}</b>\n                <v-spacer />\n                Adresses: {{ storeInfoCmd.infoCmds.adresse }}\n                <v-spacer />\n                Contacts: {{ storeInfoCmd.infoCmds.contact }}\n            </v-card-text>\n        </div> -->\n        <div>\n            <v-form>\n                <v-container fluid>\n                    <v-row>\n                        <v-col cols=\"12\" md=\"3\">\n                            <MyTextarea name_lab_area=\"Commentaires Client\" v-model=\"storeInfoCmd.infoCmds.coms_client\">\n                            </MyTextarea>\n                        </v-col>\n                        <v-col cols=\"12\" md=\"3\">\n                            <MyTextarea name_lab_area=\"Commentaires Magasin\" v-model=\"storeInfoCmd.infoCmds.coms_mag\">\n                            </MyTextarea>\n                        </v-col>\n                        <v-col cols=\"12\" md=\"3\">\n                            <MySelect comb_lab=\"Commentaire changement Date Livaison\"\n                                v-model=\"storeInfoCmd.infoCmds.raisonDateLiv\" :items=\"storeEnum.enumerations\">\n                            </MySelect>\n                            <v-card-actions>\n                                <MyTextField name_lab_text=\"Date Livraison sohaitée\" v-model=\"storeInfoCmd.infoCmds.date_l\"\n                                    type_text=\"date\" clearable>\n                                </MyTextField>\n                                <v-spacer></v-spacer>\n                                <MyTextField name_lab_text=\"Heure Livraison sohaitée\"\n                                    v-model=\"storeInfoCmd.infoCmds.heure_l\" type_text=\"time\" clearable>\n                                </MyTextField>\n                            </v-card-actions>\n                        </v-col>\n                        <v-col cols=\"12\" md=\"3\">\n                            <MySelect comb_lab=\"Axe\" :items=\"storeAxe.axes\" v-model=\"storeInfoCmd.infoCmds.axe\">\n                            </MySelect>\n\n                        </v-col>\n                    </v-row>\n                </v-container>\n            </v-form>\n        </div>\n        <div>\n            <div class=\"container fluid\">\n                <div class=\"left pa-2\">\n                    <h2><u>Articles en préparations</u></h2>\n                    <MyTable :headers=\"headersLigne\" :items=\"storeLigne.ligneCommandes\" v-if=\"!loading\" height=\"600\">\n                    </MyTable>\n                </div>\n                <div class=\"right pa-2\">\n                    <h2><u>Préparation</u></h2>\n                    <MyTable :headers=\"headersSecondtable\" :items=\"storePrep.detailPreps\" v-if=\"!loading\" height=\"600\"\n                        action2=\"Imprimer\" @action2Item=\"imprimer\" :showAction1=\"false\">\n                    </MyTable>\n\n                    <!-- <v-list density=\"comfortable\">\n                        <v-list-item v-for=\"(item, index) in storePrep.detailPreps\" :key=\"index\" v-if=\"!loading\">\n                            <v-list-item-content>\n                                <v-list-item-title class=\"pb-0.5\"\n                                    v-text=\"`${item.code_BP} - ${item.depot}`\"></v-list-item-title>\n                                <v-list-item-subtitle class=\"pb-0.5\"\n                                    v-text=\"`Date Creation: ${item.datecre_BP} | Stade: ${item.stade}`\">\n                                </v-list-item-subtitle>\n                                <v-list-item-subtitle class=\"pb-0.5\"\n                                    v-text=\"`Bacs: ${item.listBac} | Emplacement: ${item.empl} | Nb Colis: ${item.nbColis}`\">\n                                </v-list-item-subtitle>\n                            </v-list-item-content>\n                            <v-list-item-action @click=\"imprimer(item)\">\n                                <v-icon size=\"large\" color=\"blue\">mdi-printer</v-icon>\n                            </v-list-item-action>\n                            <v-divider></v-divider>\n                        </v-list-item>\n                    </v-list> -->\n\n                </div>\n            </div>\n        </div>\n\n\n    </MyDialog>\n</template>\n\n<script>\nimport MyDialog from '@/components/DialogFullScreen.vue';\nimport MyTable from '@/components/MyTable.vue';\nimport MyList from '@/components/MyList.vue';\nimport MyTextarea from '@/components/MyTextarea.vue';\nimport MyTextField from '@/components/MyTextField.vue';\nimport MySelect from '@/components/MySelect.vue';\nimport Alert from '@/components/Alert.vue';\nimport { useLigneCommandeStore } from \"@/store/Apreparer/ligneCommande.js\";\nimport { useDetailPrepStore } from \"@/store/Apreparer/detailPrep.js\";\nimport { useInfoCmdStore } from \"@/store/Apreparer/infoCmd.js\";\nimport { useAxeStore } from \"@/store/utils/axe.js\";\nimport { useEnumerationStore } from \"@/store/utils/enumeration.js\";\nimport { useRoute, useRouter } from 'vue-router'\nimport { useReportBPStore } from '@/store/report/printBP';\nimport { ref, reactive, onMounted, computed, defineEmits, defineComponent, watch, onBeforeMount } from \"vue\";\nimport useDateTime from '@/composables/useDateTime';\n\nexport default defineComponent({\n    components: {\n        MyDialog,\n        MyTable,\n        MyList,\n        MyTextarea,\n        MyTextField,\n        MySelect,\n        Alert,\n    },\n    name: 'voirCmd',\n    setup() {\n\n        const route = useRoute();\n        const CC = route.params.CC;\n        const router = useRouter();\n\n        const storeLigne = useLigneCommandeStore();\n        const storePrep = useDetailPrepStore();\n        const storeInfoCmd = useInfoCmdStore();\n        const storeEnum = useEnumerationStore();\n        const storeAxe = useAxeStore();\n        const loading = ref(false);\n        const dialogVisible = ref(false);\n        const success = ref(false);\n\n        let titre_detail = ref(\"\");\n        const date_liv = ref(null);\n\n        const storePrint = useReportBPStore();\n\n        // function closeDialog() {\n        //     dialogVisible.value = true;\n        //     // router.push({ name: 'attePrepa' });\n        //     history.back();\n        // }\n\n\n\n        onBeforeMount(() => {\n            dialogVisible.value = true;\n            titre_detail.value = \"Details du Commande \" + CC;\n            fetchligneCommande();\n            fetchDetailPreps();\n            fetchInfoCmd();\n            fetchAxes();\n            fetchEnumCom();\n        })\n\n\n\n\n        const headersLigne = [\n            { title: 'article', align: 'start', key: 'code_article', sortable: true },\n            { title: 'Libellé', align: 'start', key: 'libelle', sortable: true },\n            { title: 'Quantité Commandée', align: 'center', key: 'qte_cmd' },\n            // { title: 'Quantité Restée', align: 'end', key: 'qte_reste' },\n            // { title: 'Quantité Expediée', align: 'end', key: 'qte_expedie' },\n            { title: 'Transfert', align: 'center', key: 'coms' },\n\n        ]\n\n        const headersSecondtable = [\n            { title: 'BP', align: 'start', key: 'code_BP', sortable: true },\n            { title: 'DEPOT', align: 'start', key: 'depot' },\n            { title: 'DATE', align: 'start', key: 'datecre_BP', sortable: true },\n            { title: 'STADE', align: 'start', key: 'stade' },\n            { title: 'BACS', align: 'start', key: 'listBac' },\n            { title: 'EMPLACEMENT', align: 'start', key: 'empl' },\n            { title: 'NB COLIS', align: 'center', key: 'nbColis' },\n            { title: 'Actions', align: 'start', key: 'actions', value: 'actions' },\n        ]\n\n        const fetchligneCommande = async () => {\n            loading.value = true;\n            storeLigne.params.code = CC;\n            console.log(storeLigne.params.code)\n            storeLigne.fetchLigneCommande();\n            loading.value = false;\n        }\n\n        const fetchDetailPreps = async () => {\n            loading.value = true;\n            storePrep.params.code = CC;\n            console.log(storePrep.params.code)\n            storePrep.fetchDetailPrep();\n            loading.value = false;\n        }\n        const fetchInfoCmd = async () => {\n            loading.value = true;\n            storeInfoCmd.params.code = CC;\n            storeInfoCmd.fetchInfoCommande();\n            const { dateTime } = useDateTime(storeInfoCmd.infoCmds.date_liv);\n            date_liv.value = dateTime.value\n            loading.value = false;\n            console.log(storeInfoCmd);\n\n        }\n\n        const fetchAxes = async () => {\n            loading.value = true;\n            storeAxe.fetchAxe();\n            loading.value = false;\n        }\n\n        const fetchEnumCom = async () => {\n            loading.value = true;\n            storeEnum.params.code = \"COM_DATELIV\";\n            console.log(storeEnum.params.code);\n            storeEnum.fetchEnums();\n            loading.value = false;\n        }\n\n\n        function saveItem() {\n            const infoCmd = {\n                coms_mag: storeInfoCmd.infoCmds.coms_mag,\n                axe: storeInfoCmd.infoCmds.axe,\n                date_liv: new Date(storeInfoCmd.infoCmds.date_l + 'T' + storeInfoCmd.infoCmds.heure_l),\n                raisonDateLiv: storeInfoCmd.infoCmds.raisonDateLiv,\n                code_cc: CC\n            }\n            console.log(infoCmd);\n            storeInfoCmd.updateInfoCommande(infoCmd);\n            // closeDialog();\n        }\n\n\n\n        const imprimer = async (item) => {\n            try {\n                console.log(item.value.code_BP);\n                const response = await storePrint.generateReport(item.value.code_BP, 1);\n                //     const blob = new Blob([response.data], { type: 'application/pdf' });\n                //     const url = URL.createObjectURL(blob);\n                //     const link = document.createElement('a');\n                //     link.href = url;\n                //     link.setAttribute('download', 'prepaA5.pdf');\n                //     document.body.appendChild(link);\n                //     link.click();\n                //     document.body.removeChild(link);\n                //     URL.revokeObjectURL(url);\n                // } catch (error) {\n                //     console.error(error);\n                // }\n                const blob = new Blob([response.data], { type: 'application/pdf' });\n                const url = URL.createObjectURL(blob);\n\n                window.open(url, '_blank');\n\n                URL.revokeObjectURL(url);\n            } catch (error) {\n                console.error(error);\n            }\n        };\n\n\n\n        // const selectedDateTimeFormatted = computed(() => {\n        //     if (storeInfoCmd.infoCmds.date_liv != null) {\n        //         const { dateTime } = useDateTime(storeInfoCmd.infoCmds.date_liv);\n        //         return dateTime.value;\n        //     } else {\n        //         return \"\";\n        //     }\n        // });\n\n        return {\n            dialogVisible,\n            headersLigne, headersSecondtable, titre_detail, storeLigne, fetchligneCommande,\n            fetchDetailPreps, storePrep, storeInfoCmd, fetchInfoCmd, fetchAxes, storeAxe, fetchEnumCom, storeEnum\n            ,\n            saveItem, onMounted, CC, success, imprimer\n\n        }\n    }\n});\n</script>\n\n<style scoped>\n.container {\n    display: flex;\n    flex-direction: row;\n\n    justify-content: space-between;\n\n    overflow-y: auto;\n}\n\n.left {\n    flex-basis: 70%;\n}\n\n.right {\n    flex-basis: 30%;\n}\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}