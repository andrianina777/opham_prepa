import { openBlock as g, createElementBlock as P, createElementVNode as ne, reactive as Dt, computed as V, unref as i, ref as U, watch as ut, onMounted as Ue, nextTick as mt, toRef as It, defineComponent as He, renderSlot as H, createCommentVNode as D, normalizeClass as ve, withKeys as ie, createBlock as fe, withModifiers as Xe, normalizeStyle as lt, normalizeProps as Ye, mergeProps as Se, Fragment as ue, createTextVNode as xe, toDisplayString as Ce, renderList as De, createVNode as Qe, Transition as ht, withCtx as oe, onBeforeUpdate as Xn, onUnmounted as on, withDirectives as St, vShow as Ct, createSlots as Be, isRef as rt, guardReactiveProps as qe, resolveDynamicComponent as qn, useSlots as sn, getCurrentScope as Jn, onScopeDispose as Qn } from "vue";
import { isBefore as un, isEqual as Bn, isAfter as cn, setHours as Yn, setMinutes as Vn, setSeconds as En, setMilliseconds as dn, parse as an, isValid as Pt, isDate as ea, format as wt, getMonth as he, getDay as ta, getYear as ge, getHours as Ge, getMinutes as Ze, getSeconds as yt, parseISO as na, startOfWeek as gn, endOfWeek as aa, setMonth as Nt, setYear as it, addDays as vt, set as Re, add as Ln, addMonths as ot, subMonths as bt, getWeek as ra, getISOWeek as la, differenceInCalendarDays as oa, eachDayOfInterval as pn, addYears as sa, subYears as ia, sub as ua } from "date-fns";
const ct = (e, n) => {
  const a = e.__vccOpts || e;
  for (const [t, o] of n)
    a[t] = o;
  return a;
}, ca = {}, da = {
  version: "1.1",
  xmlns: "http://www.w3.org/2000/svg",
  width: "32",
  height: "32",
  viewBox: "0 0 32 32",
  class: "dp__icon"
}, fa = /* @__PURE__ */ ne("path", { d: "M29.333 8c0-2.208-1.792-4-4-4h-18.667c-2.208 0-4 1.792-4 4v18.667c0 2.208 1.792 4 4 4h18.667c2.208 0 4-1.792 4-4v-18.667zM26.667 8v18.667c0 0.736-0.597 1.333-1.333 1.333 0 0-18.667 0-18.667 0-0.736 0-1.333-0.597-1.333-1.333 0 0 0-18.667 0-18.667 0-0.736 0.597-1.333 1.333-1.333 0 0 18.667 0 18.667 0 0.736 0 1.333 0.597 1.333 1.333z" }, null, -1), va = /* @__PURE__ */ ne("path", { d: "M20 2.667v5.333c0 0.736 0.597 1.333 1.333 1.333s1.333-0.597 1.333-1.333v-5.333c0-0.736-0.597-1.333-1.333-1.333s-1.333 0.597-1.333 1.333z" }, null, -1), ma = /* @__PURE__ */ ne("path", { d: "M9.333 2.667v5.333c0 0.736 0.597 1.333 1.333 1.333s1.333-0.597 1.333-1.333v-5.333c0-0.736-0.597-1.333-1.333-1.333s-1.333 0.597-1.333 1.333z" }, null, -1), ya = /* @__PURE__ */ ne("path", { d: "M4 14.667h24c0.736 0 1.333-0.597 1.333-1.333s-0.597-1.333-1.333-1.333h-24c-0.736 0-1.333 0.597-1.333 1.333s0.597 1.333 1.333 1.333z" }, null, -1), ha = [
  fa,
  va,
  ma,
  ya
];
function ga(e, n) {
  return g(), P("svg", da, ha);
}
const Lt = /* @__PURE__ */ ct(ca, [["render", ga]]), pa = {}, ka = {
  version: "1.1",
  xmlns: "http://www.w3.org/2000/svg",
  width: "32",
  height: "32",
  viewBox: "0 0 32 32",
  class: "dp__icon"
}, wa = /* @__PURE__ */ ne("path", { d: "M23.057 7.057l-16 16c-0.52 0.52-0.52 1.365 0 1.885s1.365 0.52 1.885 0l16-16c0.52-0.52 0.52-1.365 0-1.885s-1.365-0.52-1.885 0z" }, null, -1), ba = /* @__PURE__ */ ne("path", { d: "M7.057 8.943l16 16c0.52 0.52 1.365 0.52 1.885 0s0.52-1.365 0-1.885l-16-16c-0.52-0.52-1.365-0.52-1.885 0s-0.52 1.365 0 1.885z" }, null, -1), $a = [
  wa,
  ba
];
function Da(e, n) {
  return g(), P("svg", ka, $a);
}
const Ma = /* @__PURE__ */ ct(pa, [["render", Da]]), _a = {}, Ta = {
  version: "1.1",
  xmlns: "http://www.w3.org/2000/svg",
  width: "32",
  height: "32",
  viewBox: "0 0 32 32",
  class: "dp__icon"
}, Aa = /* @__PURE__ */ ne("path", { d: "M20.943 23.057l-7.057-7.057c0 0 7.057-7.057 7.057-7.057 0.52-0.52 0.52-1.365 0-1.885s-1.365-0.52-1.885 0l-8 8c-0.521 0.521-0.521 1.365 0 1.885l8 8c0.52 0.52 1.365 0.52 1.885 0s0.52-1.365 0-1.885z" }, null, -1), Sa = [
  Aa
];
function Ca(e, n) {
  return g(), P("svg", Ta, Sa);
}
const kn = /* @__PURE__ */ ct(_a, [["render", Ca]]), Pa = {}, Na = {
  version: "1.1",
  xmlns: "http://www.w3.org/2000/svg",
  width: "32",
  height: "32",
  viewBox: "0 0 32 32",
  class: "dp__icon"
}, Ra = /* @__PURE__ */ ne("path", { d: "M12.943 24.943l8-8c0.521-0.521 0.521-1.365 0-1.885l-8-8c-0.52-0.52-1.365-0.52-1.885 0s-0.52 1.365 0 1.885l7.057 7.057c0 0-7.057 7.057-7.057 7.057-0.52 0.52-0.52 1.365 0 1.885s1.365 0.52 1.885 0z" }, null, -1), Ia = [
  Ra
];
function Oa(e, n) {
  return g(), P("svg", Na, Ia);
}
const wn = /* @__PURE__ */ ct(Pa, [["render", Oa]]), Ba = {}, Ya = {
  version: "1.1",
  xmlns: "http://www.w3.org/2000/svg",
  width: "32",
  height: "32",
  viewBox: "0 0 32 32",
  class: "dp__icon"
}, Va = /* @__PURE__ */ ne("path", { d: "M16 1.333c-8.095 0-14.667 6.572-14.667 14.667s6.572 14.667 14.667 14.667c8.095 0 14.667-6.572 14.667-14.667s-6.572-14.667-14.667-14.667zM16 4c6.623 0 12 5.377 12 12s-5.377 12-12 12c-6.623 0-12-5.377-12-12s5.377-12 12-12z" }, null, -1), Ea = /* @__PURE__ */ ne("path", { d: "M14.667 8v8c0 0.505 0.285 0.967 0.737 1.193l5.333 2.667c0.658 0.329 1.46 0.062 1.789-0.596s0.062-1.46-0.596-1.789l-4.596-2.298c0 0 0-7.176 0-7.176 0-0.736-0.597-1.333-1.333-1.333s-1.333 0.597-1.333 1.333z" }, null, -1), La = [
  Va,
  Ea
];
function Fa(e, n) {
  return g(), P("svg", Ya, La);
}
const Fn = /* @__PURE__ */ ct(Ba, [["render", Fa]]), Ua = {}, Ha = {
  version: "1.1",
  xmlns: "http://www.w3.org/2000/svg",
  width: "32",
  height: "32",
  viewBox: "0 0 32 32",
  class: "dp__icon"
}, Wa = /* @__PURE__ */ ne("path", { d: "M24.943 19.057l-8-8c-0.521-0.521-1.365-0.521-1.885 0l-8 8c-0.52 0.52-0.52 1.365 0 1.885s1.365 0.52 1.885 0l7.057-7.057c0 0 7.057 7.057 7.057 7.057 0.52 0.52 1.365 0.52 1.885 0s0.52-1.365 0-1.885z" }, null, -1), za = [
  Wa
];
function xa(e, n) {
  return g(), P("svg", Ha, za);
}
const Un = /* @__PURE__ */ ct(Ua, [["render", xa]]), Ka = {}, ja = {
  version: "1.1",
  xmlns: "http://www.w3.org/2000/svg",
  width: "32",
  height: "32",
  viewBox: "0 0 32 32",
  class: "dp__icon"
}, Ga = /* @__PURE__ */ ne("path", { d: "M7.057 12.943l8 8c0.521 0.521 1.365 0.521 1.885 0l8-8c0.52-0.52 0.52-1.365 0-1.885s-1.365-0.52-1.885 0l-7.057 7.057c0 0-7.057-7.057-7.057-7.057-0.52-0.52-1.365-0.52-1.885 0s-0.52 1.365 0 1.885z" }, null, -1), Za = [
  Ga
];
function Xa(e, n) {
  return g(), P("svg", ja, Za);
}
const Hn = /* @__PURE__ */ ct(Ka, [["render", Xa]]), bn = (e, n) => {
  const a = an(e, n.slice(0, e.length), new Date());
  return Pt(a) && ea(a) ? a : null;
}, qa = (e, n) => {
  if (typeof n == "string")
    return bn(e, n);
  if (Array.isArray(n)) {
    let a = null;
    for (const t of n)
      if (a = bn(e, t), a)
        break;
    return a;
  }
  return typeof n == "function" ? n(e) : null;
}, b = (e) => e ? new Date(e) : new Date(), Ja = (e, n) => {
  if (n) {
    const t = (e.getMonth() + 1).toString().padStart(2, "0"), o = e.getDate().toString().padStart(2, "0"), d = e.getHours().toString().padStart(2, "0"), p = e.getMinutes().toString().padStart(2, "0");
    return `${e.getFullYear()}-${t}-${o}T${d}:${p}:00.000Z`;
  }
  const a = Date.UTC(
    e.getUTCFullYear(),
    e.getUTCMonth(),
    e.getUTCDate(),
    e.getUTCHours(),
    e.getUTCMinutes(),
    e.getUTCSeconds()
  );
  return new Date(a).toISOString();
}, Ke = (e) => {
  let n = b(JSON.parse(JSON.stringify(e)));
  return n = Yn(n, 0), n = Vn(n, 0), n = En(n, 0), n = dn(n, 0), n;
}, Ee = (e, n, a, t) => {
  let o = e ? b(e) : b();
  return (n || n === 0) && (o = Yn(o, +n)), (a || a === 0) && (o = Vn(o, +a)), (t || t === 0) && (o = En(o, +t)), dn(o, 0);
}, Pe = (e, n) => !e || !n ? !1 : un(Ke(e), Ke(n)), pe = (e, n) => !e || !n ? !1 : Bn(Ke(e), Ke(n)), Oe = (e, n) => !e || !n ? !1 : cn(Ke(e), Ke(n)), Wn = (e, n, a) => e && e[0] && e[1] ? Oe(a, e[0]) && Pe(a, e[1]) : e && e[0] && n ? Oe(a, e[0]) && Pe(a, n) || Pe(a, e[0]) && Oe(a, n) : !1, kt = Dt({
  menuFocused: !1,
  shiftKeyInMenu: !1
}), zn = () => {
  const e = (t) => {
    kt.menuFocused = t;
  }, n = (t) => {
    kt.shiftKeyInMenu !== t && (kt.shiftKeyInMenu = t);
  };
  return {
    control: V(() => ({ shiftKeyInMenu: kt.shiftKeyInMenu, menuFocused: kt.menuFocused })),
    setMenuFocused: e,
    setShiftKey: n
  };
};
function fn(e) {
  return e && e.__esModule && Object.prototype.hasOwnProperty.call(e, "default") ? e.default : e;
}
var Ot = {}, Qa = {
  get exports() {
    return Ot;
  },
  set exports(e) {
    Ot = e;
  }
};
(function(e, n) {
  Object.defineProperty(n, "__esModule", {
    value: !0
  }), n.default = a;
  function a(t) {
    if (t === null || t === !0 || t === !1)
      return NaN;
    var o = Number(t);
    return isNaN(o) ? o : o < 0 ? Math.ceil(o) : Math.floor(o);
  }
  e.exports = n.default;
})(Qa, Ot);
const er = /* @__PURE__ */ fn(Ot);
var Bt = {}, tr = {
  get exports() {
    return Bt;
  },
  set exports(e) {
    Bt = e;
  }
};
(function(e, n) {
  Object.defineProperty(n, "__esModule", {
    value: !0
  }), n.default = a;
  function a(t) {
    var o = new Date(Date.UTC(t.getFullYear(), t.getMonth(), t.getDate(), t.getHours(), t.getMinutes(), t.getSeconds(), t.getMilliseconds()));
    return o.setUTCFullYear(t.getFullYear()), t.getTime() - o.getTime();
  }
  e.exports = n.default;
})(tr, Bt);
const $n = /* @__PURE__ */ fn(Bt);
function nr(e, n) {
  var a = or(n);
  return a.formatToParts ? rr(a, e) : lr(a, e);
}
var ar = {
  year: 0,
  month: 1,
  day: 2,
  hour: 3,
  minute: 4,
  second: 5
};
function rr(e, n) {
  try {
    for (var a = e.formatToParts(n), t = [], o = 0; o < a.length; o++) {
      var d = ar[a[o].type];
      d >= 0 && (t[d] = parseInt(a[o].value, 10));
    }
    return t;
  } catch (p) {
    if (p instanceof RangeError)
      return [NaN];
    throw p;
  }
}
function lr(e, n) {
  var a = e.format(n).replace(/\u200E/g, ""), t = /(\d+)\/(\d+)\/(\d+),? (\d+):(\d+):(\d+)/.exec(a);
  return [t[3], t[1], t[2], t[4], t[5], t[6]];
}
var jt = {};
function or(e) {
  if (!jt[e]) {
    var n = new Intl.DateTimeFormat("en-US", {
      hour12: !1,
      timeZone: "America/New_York",
      year: "numeric",
      month: "numeric",
      day: "2-digit",
      hour: "2-digit",
      minute: "2-digit",
      second: "2-digit"
    }).format(new Date("2014-06-25T04:00:00.123Z")), a = n === "06/25/2014, 00:00:00" || n === "‎06‎/‎25‎/‎2014‎ ‎00‎:‎00‎:‎00";
    jt[e] = a ? new Intl.DateTimeFormat("en-US", {
      hour12: !1,
      timeZone: e,
      year: "numeric",
      month: "numeric",
      day: "2-digit",
      hour: "2-digit",
      minute: "2-digit",
      second: "2-digit"
    }) : new Intl.DateTimeFormat("en-US", {
      hourCycle: "h23",
      timeZone: e,
      year: "numeric",
      month: "numeric",
      day: "2-digit",
      hour: "2-digit",
      minute: "2-digit",
      second: "2-digit"
    });
  }
  return jt[e];
}
function vn(e, n, a, t, o, d, p) {
  var $ = new Date(0);
  return $.setUTCFullYear(e, n, a), $.setUTCHours(t, o, d, p), $;
}
var Dn = 36e5, sr = 6e4, Gt = {
  timezone: /([Z+-].*)$/,
  timezoneZ: /^(Z)$/,
  timezoneHH: /^([+-]\d{2})$/,
  timezoneHHMM: /^([+-]\d{2}):?(\d{2})$/
};
function mn(e, n, a) {
  var t, o;
  if (!e || (t = Gt.timezoneZ.exec(e), t))
    return 0;
  var d;
  if (t = Gt.timezoneHH.exec(e), t)
    return d = parseInt(t[1], 10), Mn(d) ? -(d * Dn) : NaN;
  if (t = Gt.timezoneHHMM.exec(e), t) {
    d = parseInt(t[1], 10);
    var p = parseInt(t[2], 10);
    return Mn(d, p) ? (o = Math.abs(d) * Dn + p * sr, d > 0 ? -o : o) : NaN;
  }
  if (cr(e)) {
    n = new Date(n || Date.now());
    var $ = a ? n : ir(n), O = rn($, e), R = a ? O : ur(n, O, e);
    return -R;
  }
  return NaN;
}
function ir(e) {
  return vn(
    e.getFullYear(),
    e.getMonth(),
    e.getDate(),
    e.getHours(),
    e.getMinutes(),
    e.getSeconds(),
    e.getMilliseconds()
  );
}
function rn(e, n) {
  var a = nr(e, n), t = vn(
    a[0],
    a[1] - 1,
    a[2],
    a[3] % 24,
    a[4],
    a[5],
    0
  ).getTime(), o = e.getTime(), d = o % 1e3;
  return o -= d >= 0 ? d : 1e3 + d, t - o;
}
function ur(e, n, a) {
  var t = e.getTime(), o = t - n, d = rn(new Date(o), a);
  if (n === d)
    return n;
  o -= d - n;
  var p = rn(new Date(o), a);
  return d === p ? d : Math.max(d, p);
}
function Mn(e, n) {
  return -23 <= e && e <= 23 && (n == null || 0 <= n && n <= 59);
}
var _n = {};
function cr(e) {
  if (_n[e])
    return !0;
  try {
    return new Intl.DateTimeFormat(void 0, { timeZone: e }), _n[e] = !0, !0;
  } catch {
    return !1;
  }
}
var dr = /(Z|[+-]\d{2}(?::?\d{2})?| UTC| [a-zA-Z]+\/[a-zA-Z_]+(?:\/[a-zA-Z_]+)?)$/;
const xn = dr;
var Zt = 36e5, Tn = 6e4, fr = 2, Ie = {
  dateTimePattern: /^([0-9W+-]+)(T| )(.*)/,
  datePattern: /^([0-9W+-]+)(.*)/,
  plainTime: /:/,
  // year tokens
  YY: /^(\d{2})$/,
  YYY: [
    /^([+-]\d{2})$/,
    // 0 additional digits
    /^([+-]\d{3})$/,
    // 1 additional digit
    /^([+-]\d{4})$/
    // 2 additional digits
  ],
  YYYY: /^(\d{4})/,
  YYYYY: [
    /^([+-]\d{4})/,
    // 0 additional digits
    /^([+-]\d{5})/,
    // 1 additional digit
    /^([+-]\d{6})/
    // 2 additional digits
  ],
  // date tokens
  MM: /^-(\d{2})$/,
  DDD: /^-?(\d{3})$/,
  MMDD: /^-?(\d{2})-?(\d{2})$/,
  Www: /^-?W(\d{2})$/,
  WwwD: /^-?W(\d{2})-?(\d{1})$/,
  HH: /^(\d{2}([.,]\d*)?)$/,
  HHMM: /^(\d{2}):?(\d{2}([.,]\d*)?)$/,
  HHMMSS: /^(\d{2}):?(\d{2}):?(\d{2}([.,]\d*)?)$/,
  // time zone tokens (to identify the presence of a tz)
  timeZone: xn
};
function ln(e, n) {
  if (arguments.length < 1)
    throw new TypeError("1 argument required, but only " + arguments.length + " present");
  if (e === null)
    return new Date(NaN);
  var a = n || {}, t = a.additionalDigits == null ? fr : er(a.additionalDigits);
  if (t !== 2 && t !== 1 && t !== 0)
    throw new RangeError("additionalDigits must be 0, 1 or 2");
  if (e instanceof Date || typeof e == "object" && Object.prototype.toString.call(e) === "[object Date]")
    return new Date(e.getTime());
  if (typeof e == "number" || Object.prototype.toString.call(e) === "[object Number]")
    return new Date(e);
  if (!(typeof e == "string" || Object.prototype.toString.call(e) === "[object String]"))
    return new Date(NaN);
  var o = vr(e), d = mr(o.date, t), p = d.year, $ = d.restDateString, O = yr($, p);
  if (isNaN(O))
    return new Date(NaN);
  if (O) {
    var R = O.getTime(), F = 0, A;
    if (o.time && (F = hr(o.time), isNaN(F)))
      return new Date(NaN);
    if (o.timeZone || a.timeZone) {
      if (A = mn(o.timeZone || a.timeZone, new Date(R + F)), isNaN(A))
        return new Date(NaN);
    } else
      A = $n(new Date(R + F)), A = $n(new Date(R + F + A));
    return new Date(R + F + A);
  } else
    return new Date(NaN);
}
function vr(e) {
  var n = {}, a = Ie.dateTimePattern.exec(e), t;
  if (a ? (n.date = a[1], t = a[3]) : (a = Ie.datePattern.exec(e), a ? (n.date = a[1], t = a[2]) : (n.date = null, t = e)), t) {
    var o = Ie.timeZone.exec(t);
    o ? (n.time = t.replace(o[1], ""), n.timeZone = o[1].trim()) : n.time = t;
  }
  return n;
}
function mr(e, n) {
  var a = Ie.YYY[n], t = Ie.YYYYY[n], o;
  if (o = Ie.YYYY.exec(e) || t.exec(e), o) {
    var d = o[1];
    return {
      year: parseInt(d, 10),
      restDateString: e.slice(d.length)
    };
  }
  if (o = Ie.YY.exec(e) || a.exec(e), o) {
    var p = o[1];
    return {
      year: parseInt(p, 10) * 100,
      restDateString: e.slice(p.length)
    };
  }
  return {
    year: null
  };
}
function yr(e, n) {
  if (n === null)
    return null;
  var a, t, o, d;
  if (e.length === 0)
    return t = new Date(0), t.setUTCFullYear(n), t;
  if (a = Ie.MM.exec(e), a)
    return t = new Date(0), o = parseInt(a[1], 10) - 1, Sn(n, o) ? (t.setUTCFullYear(n, o), t) : new Date(NaN);
  if (a = Ie.DDD.exec(e), a) {
    t = new Date(0);
    var p = parseInt(a[1], 10);
    return kr(n, p) ? (t.setUTCFullYear(n, 0, p), t) : new Date(NaN);
  }
  if (a = Ie.MMDD.exec(e), a) {
    t = new Date(0), o = parseInt(a[1], 10) - 1;
    var $ = parseInt(a[2], 10);
    return Sn(n, o, $) ? (t.setUTCFullYear(n, o, $), t) : new Date(NaN);
  }
  if (a = Ie.Www.exec(e), a)
    return d = parseInt(a[1], 10) - 1, Cn(n, d) ? An(n, d) : new Date(NaN);
  if (a = Ie.WwwD.exec(e), a) {
    d = parseInt(a[1], 10) - 1;
    var O = parseInt(a[2], 10) - 1;
    return Cn(n, d, O) ? An(n, d, O) : new Date(NaN);
  }
  return null;
}
function hr(e) {
  var n, a, t;
  if (n = Ie.HH.exec(e), n)
    return a = parseFloat(n[1].replace(",", ".")), Xt(a) ? a % 24 * Zt : NaN;
  if (n = Ie.HHMM.exec(e), n)
    return a = parseInt(n[1], 10), t = parseFloat(n[2].replace(",", ".")), Xt(a, t) ? a % 24 * Zt + t * Tn : NaN;
  if (n = Ie.HHMMSS.exec(e), n) {
    a = parseInt(n[1], 10), t = parseInt(n[2], 10);
    var o = parseFloat(n[3].replace(",", "."));
    return Xt(a, t, o) ? a % 24 * Zt + t * Tn + o * 1e3 : NaN;
  }
  return null;
}
function An(e, n, a) {
  n = n || 0, a = a || 0;
  var t = new Date(0);
  t.setUTCFullYear(e, 0, 4);
  var o = t.getUTCDay() || 7, d = n * 7 + a + 1 - o;
  return t.setUTCDate(t.getUTCDate() + d), t;
}
var gr = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31], pr = [31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];
function Kn(e) {
  return e % 400 === 0 || e % 4 === 0 && e % 100 !== 0;
}
function Sn(e, n, a) {
  if (n < 0 || n > 11)
    return !1;
  if (a != null) {
    if (a < 1)
      return !1;
    var t = Kn(e);
    if (t && a > pr[n] || !t && a > gr[n])
      return !1;
  }
  return !0;
}
function kr(e, n) {
  if (n < 1)
    return !1;
  var a = Kn(e);
  return !(a && n > 366 || !a && n > 365);
}
function Cn(e, n, a) {
  return !(n < 0 || n > 52 || a != null && (a < 0 || a > 6));
}
function Xt(e, n, a) {
  return !(e != null && (e < 0 || e >= 25) || n != null && (n < 0 || n >= 60) || a != null && (a < 0 || a >= 60));
}
var Yt = {}, wr = {
  get exports() {
    return Yt;
  },
  set exports(e) {
    Yt = e;
  }
}, Vt = {}, br = {
  get exports() {
    return Vt;
  },
  set exports(e) {
    Vt = e;
  }
};
(function(e, n) {
  Object.defineProperty(n, "__esModule", {
    value: !0
  }), n.default = a;
  function a(t, o) {
    if (t == null)
      throw new TypeError("assign requires that input parameter not be null or undefined");
    for (var d in o)
      Object.prototype.hasOwnProperty.call(o, d) && (t[d] = o[d]);
    return t;
  }
  e.exports = n.default;
})(br, Vt);
(function(e, n) {
  Object.defineProperty(n, "__esModule", {
    value: !0
  }), n.default = o;
  var a = t(Vt);
  function t(d) {
    return d && d.__esModule ? d : { default: d };
  }
  function o(d) {
    return (0, a.default)({}, d);
  }
  e.exports = n.default;
})(wr, Yt);
const $r = /* @__PURE__ */ fn(Yt);
function Dr(e, n, a) {
  var t = ln(e, a), o = mn(n, t, !0), d = new Date(t.getTime() - o), p = new Date(0);
  return p.setFullYear(d.getUTCFullYear(), d.getUTCMonth(), d.getUTCDate()), p.setHours(d.getUTCHours(), d.getUTCMinutes(), d.getUTCSeconds(), d.getUTCMilliseconds()), p;
}
function Mr(e, n, a) {
  if (typeof e == "string" && !e.match(xn)) {
    var t = $r(a);
    return t.timeZone = n, ln(e, t);
  }
  var o = ln(e, a), d = vn(
    o.getFullYear(),
    o.getMonth(),
    o.getDate(),
    o.getHours(),
    o.getMinutes(),
    o.getSeconds(),
    o.getMilliseconds()
  ).getTime(), p = mn(n, new Date(d));
  return new Date(d + p);
}
const _r = (e, n = 3) => {
  const a = [];
  for (let t = 0; t < e.length; t += n)
    a.push([e[t], e[t + 1], e[t + 2]]);
  return a;
}, Tr = (e, n) => {
  const a = [1, 2, 3, 4, 5, 6, 7].map((d) => new Intl.DateTimeFormat(e, { weekday: "short", timeZone: "UTC" }).format(new Date(`2017-01-0${d}T00:00:00+00:00`)).slice(0, 2)), t = a.slice(0, n), o = a.slice(n + 1, a.length);
  return [a[n]].concat(...o).concat(...t);
}, Ar = (e) => {
  const n = [];
  for (let a = +e[0]; a <= +e[1]; a++)
    n.push({ value: +a, text: `${a}` });
  return n;
}, Sr = (e, n) => {
  const a = new Intl.DateTimeFormat(e, { month: n, timeZone: "UTC" });
  return [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12].map((o) => {
    const d = o < 10 ? `0${o}` : o;
    return new Date(`2017-${d}-01T00:00:00+00:00`);
  }).map((o, d) => ({
    text: a.format(o),
    value: d
  }));
}, Cr = (e) => [12, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11][e], Me = (e) => {
  const n = i(e);
  return n != null && n.$el ? n == null ? void 0 : n.$el : n;
}, Pr = (e) => Object.assign({ type: "dot" }, e), jn = (e) => Array.isArray(e) ? !!e[0] && !!e[1] : !1, Et = {
  prop: (e) => `"${e}" prop must be enabled!`,
  dateArr: (e) => `You need to use array as "model-value" binding in order to support "${e}"`
}, _e = (e) => e, Pn = (e) => e === 0 ? e : !e || isNaN(+e) ? null : +e, Nn = (e) => Object.assign(
  {
    menuAppear: "dp-menu-appear",
    open: "dp-slide-down",
    close: "dp-slide-up",
    next: "calendar-next",
    previous: "calendar-prev",
    vNext: "dp-slide-up",
    vPrevious: "dp-slide-down"
  },
  e
), Nr = (e) => Object.assign(
  {
    toggleOverlay: "Toggle overlay",
    menu: "Datepicker menu",
    input: "Datepicker input",
    calendarWrap: "Calendar wrapper",
    calendarDays: "Calendar days",
    openTimePicker: "Open time picker",
    closeTimePicker: "Close time Picker",
    incrementValue: (n) => `Increment ${n}`,
    decrementValue: (n) => `Decrement ${n}`,
    openTpOverlay: (n) => `Open ${n} overlay`,
    amPmButton: "Switch AM/PM mode",
    openYearsOverlay: "Open years overlay",
    openMonthsOverlay: "Open months overlay",
    nextMonth: "Next month",
    prevMonth: "Previous month",
    day: () => ""
  },
  e
), Rr = (e) => e === null ? 0 : typeof e == "boolean" ? e ? 2 : 0 : +e >= 2 ? +e : 2, Ir = (e, n, a) => e || (typeof a == "string" ? a : n), Or = (e) => typeof e == "boolean" ? e ? Nn({}) : !1 : Nn(e), Br = () => ({
  enterSubmit: !0,
  tabSubmit: !0,
  openMenu: !0,
  rangeSeparator: " - "
}), Yr = (e) => Object.assign({ months: [], years: [], times: { hours: [], minutes: [], seconds: [] } }, e), Ve = (e) => {
  const n = () => {
    if (e.partialRange)
      return null;
    throw new Error(Et.prop("partial-range"));
  }, a = V(() => ({
    ariaLabels: Nr(e.ariaLabels),
    textInputOptions: Object.assign(Br(), e.textInputOptions),
    multiCalendars: Rr(e.multiCalendars),
    previewFormat: Ir(e.previewFormat, e.format, d()),
    filters: Yr(e.filters),
    transitions: Or(e.transitions),
    startTime: c()
  })), t = (r) => {
    if (e.range)
      return r();
    throw new Error(Et.prop("range"));
  }, o = () => {
    const r = e.enableSeconds ? ":ss" : "";
    return e.is24 ? `HH:mm${r}` : `hh:mm${r} aa`;
  }, d = () => e.format ? e.format : e.monthPicker ? "MM/yyyy" : e.timePicker ? o() : e.weekPicker ? "MM/dd/yyyy" : e.yearPicker ? "yyyy" : e.enableTimePicker ? `MM/dd/yyyy, ${o()}` : "MM/dd/yyyy", p = (r, m) => {
    if (typeof e.format == "function")
      return e.format(r);
    const y = m || d(), k = e.formatLocale ? { locale: e.formatLocale } : void 0;
    return Array.isArray(r) ? `${wt(r[0], y, k)} ${e.modelAuto && !r[1] ? "" : a.value.textInputOptions.rangeSeparator || "-"} ${r[1] ? wt(r[1], y, k) : ""}` : wt(r, y, k);
  }, $ = (r) => e.timezone ? Dr(r, e.timezone) : r, O = (r) => e.timezone ? Mr(r, e.timezone) : r, R = V(() => (r) => {
    var m;
    return (m = e.hideNavigation) == null ? void 0 : m.includes(r);
  }), F = (r) => {
    const m = e.maxDate ? Oe($(r), $(b(e.maxDate))) : !1, y = e.minDate ? Pe($(r), $(b(e.minDate))) : !1, k = B(r, e.disabledDates), G = a.value.filters.months.map((we) => +we).includes(he(r)), de = e.disabledWeekDays.length ? e.disabledWeekDays.some((we) => +we === ta(r)) : !1, f = e.allowedDates.length ? !e.allowedDates.some((we) => pe($(b(we)), $(r))) : !1, l = ge(r), Q = l < +e.yearRange[0] || l > +e.yearRange[1];
    return !(m || y || k || G || Q || de || f);
  }, A = (r) => {
    const m = {
      hours: Ge(b()),
      minutes: Ze(b()),
      seconds: yt(b())
    };
    return Object.assign(m, r);
  }, c = () => e.range ? e.startTime && Array.isArray(e.startTime) ? [A(e.startTime[0]), A(e.startTime[1])] : null : e.startTime && !Array.isArray(e.startTime) ? A(e.startTime) : null, M = (r) => !F(r), W = (r) => Array.isArray(r) ? Pt(r[0]) && (r[1] ? Pt(r[1]) : !0) : r ? Pt(r) : !1, Y = (r) => r instanceof Date ? r : na(r), ee = (r) => {
    const m = gn($(r), { weekStartsOn: +e.weekStart }), y = aa($(r), { weekStartsOn: +e.weekStart });
    return [m, y];
  }, B = (r, m) => Array.isArray(m) ? m.some((y) => pe($(b(y)), $(r))) : m(r), E = (r, m, y) => {
    let k = r ? b(r) : b();
    return (m || m === 0) && (k = Nt(k, m)), y && (k = it(k, y)), k;
  }, N = (r) => Re(b(), { hours: Ge(r), minutes: Ze(r), seconds: yt(r) }), j = (r) => Re(b(), {
    hours: +r.hours || 0,
    minutes: +r.minutes || 0,
    seconds: +r.seconds || 0
  }), ae = (r, m, y, k) => {
    if (!r)
      return !0;
    if (k) {
      const x = y === "max" ? un(r, m) : cn(r, m), G = { seconds: 0, milliseconds: 0 };
      return x || Bn(Re(r, G), Re(m, G));
    }
    return y === "max" ? r.getTime() <= m.getTime() : r.getTime() >= m.getTime();
  }, le = () => !e.enableTimePicker || e.monthPicker || e.yearPicker || e.ignoreTimeValidation, ce = (r) => Array.isArray(r) ? [r[0] ? N(r[0]) : null, r[1] ? N(r[1]) : null] : N(r), v = (r) => {
    const m = e.maxTime ? j(e.maxTime) : b(e.maxDate);
    return Array.isArray(r) ? ae(r[0], m, "max", !!e.maxDate) && ae(r[1], m, "max", !!e.maxDate) : ae(r, m, "max", !!e.maxDate);
  }, S = (r, m) => {
    const y = e.minTime ? j(e.minTime) : b(e.minDate);
    return Array.isArray(r) ? ae(r[0], y, "min", !!e.minDate) && ae(r[1], y, "min", !!e.minDate) && m : ae(r, y, "min", !!e.minDate) && m;
  }, I = (r) => {
    let m = !0;
    if (!r || le())
      return !0;
    const y = !e.minDate && !e.maxDate ? ce(r) : r;
    return (e.maxTime || e.maxDate) && (m = v(_e(y))), (e.minTime || e.minDate) && (m = S(_e(y), m)), m;
  }, T = (r, m) => {
    const y = b(JSON.parse(JSON.stringify(r))), k = [];
    for (let x = 0; x < 7; x++) {
      const G = vt(y, x), de = he(G) !== m;
      k.push({
        text: e.hideOffsetDates && de ? "" : G.getDate(),
        value: G,
        current: !de,
        classData: {}
      });
    }
    return k;
  }, L = (r, m) => {
    const y = [], k = b($(new Date(m, r))), x = b($(new Date(m, r + 1, 0))), G = gn(k, { weekStartsOn: e.weekStart }), de = (f) => {
      const l = T(f, r);
      if (y.push({ days: l }), !y[y.length - 1].days.some(
        (Q) => pe(Ke(Q.value), Ke(x))
      )) {
        const Q = vt(f, 7);
        de(Q);
      }
    };
    if (de(G), e.sixWeeks && y.length < 6) {
      const f = 6 - y.length;
      for (let l = 1; l <= f; l++) {
        const Q = y[y.length - 1], we = Q.days[Q.days.length - 1], be = T(vt(we.value, 1), he(k));
        y.push({ days: be });
      }
    }
    return y;
  }, Z = (r, m, y) => [Re(b(r), { date: 1 }), Re(b(), { month: m, year: y, date: 1 })], J = (r, m) => Pe(...Z(e.minDate, r, m)) || pe(...Z(e.minDate, r, m)), _ = (r, m) => Oe(...Z(e.maxDate, r, m)) || pe(...Z(e.maxDate, r, m)), C = (r, m, y) => {
    let k = !1;
    return e.maxDate && y && _(r, m) && (k = !0), e.minDate && !y && J(r, m) && (k = !0), k;
  };
  return {
    checkPartialRangeValue: n,
    checkRangeEnabled: t,
    getZonedDate: $,
    getZonedToUtc: O,
    formatDate: p,
    getDefaultPattern: d,
    validateDate: F,
    getDefaultStartTime: c,
    isDisabled: M,
    isValidDate: W,
    sanitizeDate: Y,
    getWeekFromDate: ee,
    matchDate: B,
    setDateMonthOrYear: E,
    isValidTime: I,
    getCalendarDays: L,
    validateMonthYearInRange: (r, m, y, k) => {
      let x = !1;
      return k ? e.minDate && e.maxDate ? x = C(r, m, y) : (e.minDate && J(r, m) || e.maxDate && _(r, m)) && (x = !0) : x = !0, x;
    },
    validateMaxDate: _,
    validateMinDate: J,
    defaults: a,
    hideNavigationButtons: R
  };
}, ye = Dt({
  monthYear: [],
  calendar: [],
  time: [],
  actionRow: [],
  selectionGrid: [],
  timePicker: {
    0: [],
    1: []
  },
  monthPicker: []
}), qt = U(null), At = U(!1), Jt = U(!1), Qt = U(!1), en = U(!1), Ne = U(0), Ae = U(0), et = () => {
  const e = V(() => At.value ? [...ye.selectionGrid, ye.actionRow].filter((B) => B.length) : Jt.value ? [
    ...ye.timePicker[0],
    ...ye.timePicker[1],
    en.value ? [] : [qt.value],
    ye.actionRow
  ].filter((B) => B.length) : Qt.value ? [...ye.monthPicker, ye.actionRow] : [ye.monthYear, ...ye.calendar, ye.time, ye.actionRow].filter((B) => B.length)), n = (B) => {
    Ne.value = B ? Ne.value + 1 : Ne.value - 1;
    let E = null;
    e.value[Ae.value] && (E = e.value[Ae.value][Ne.value]), E || (Ne.value = B ? Ne.value - 1 : Ne.value + 1);
  }, a = (B) => {
    if (Ae.value === 0 && !B || Ae.value === e.value.length && B)
      return;
    Ae.value = B ? Ae.value + 1 : Ae.value - 1, e.value[Ae.value] ? e.value[Ae.value] && !e.value[Ae.value][Ne.value] && Ne.value !== 0 && (Ne.value = e.value[Ae.value].length - 1) : Ae.value = B ? Ae.value - 1 : Ae.value + 1;
  }, t = (B) => {
    let E = null;
    e.value[Ae.value] && (E = e.value[Ae.value][Ne.value]), E ? E.focus({ preventScroll: !At.value }) : Ne.value = B ? Ne.value - 1 : Ne.value + 1;
  }, o = () => {
    n(!0), t(!0);
  }, d = () => {
    n(!1), t(!1);
  }, p = () => {
    a(!1), t(!0);
  }, $ = () => {
    a(!0), t(!0);
  }, O = (B, E) => {
    ye[E] = B;
  }, R = (B, E) => {
    ye[E] = B;
  }, F = () => {
    Ne.value = 0, Ae.value = 0;
  };
  return {
    buildMatrix: O,
    buildMultiLevelMatrix: R,
    setTimePickerBackRef: (B) => {
      qt.value = B;
    },
    setSelectionGrid: (B) => {
      At.value = B, F(), B || (ye.selectionGrid = []);
    },
    setTimePicker: (B, E = !1) => {
      Jt.value = B, en.value = E, F(), B || (ye.timePicker[0] = [], ye.timePicker[1] = []);
    },
    setTimePickerElements: (B, E = 0) => {
      ye.timePicker[E] = B;
    },
    arrowRight: o,
    arrowLeft: d,
    arrowUp: p,
    arrowDown: $,
    clearArrowNav: () => {
      ye.monthYear = [], ye.calendar = [], ye.time = [], ye.actionRow = [], ye.selectionGrid = [], ye.timePicker[0] = [], ye.timePicker[1] = [], At.value = !1, Jt.value = !1, en.value = !1, Qt.value = !1, F(), qt.value = null;
    },
    setMonthPicker: (B) => {
      Qt.value = B, F();
    },
    refSets: ye
    // exposed for testing
  };
}, Rn = (e) => Array.isArray(e), at = (e) => Array.isArray(e), In = (e) => Array.isArray(e) && e.length === 2, Vr = (e, n, a, t, o) => {
  const {
    getDefaultStartTime: d,
    isDisabled: p,
    sanitizeDate: $,
    getWeekFromDate: O,
    setDateMonthOrYear: R,
    validateMonthYearInRange: F,
    defaults: A
  } = Ve(e), c = V({
    get: () => e.internalModelValue,
    set: (s) => {
      !e.readonly && !e.disabled && n("update:internal-model-value", s);
    }
  }), M = U([]);
  ut(c, () => {
    e.multiCalendars || ae();
  });
  const W = U([{ month: he(b()), year: ge(b()) }]), Y = Dt({
    hours: e.range ? [Ge(b()), Ge(b())] : Ge(b()),
    minutes: e.range ? [Ze(b()), Ze(b())] : Ze(b()),
    seconds: e.range ? [0, 0] : 0
  }), ee = V(
    () => (s) => W.value[s] ? W.value[s].month : 0
  ), B = V(
    () => (s) => W.value[s] ? W.value[s].year : 0
  ), E = V(() => e.flow && e.flow.length ? o.value === e.flow.length : !0), N = (s, w, K) => {
    var te, h;
    W.value[s] || (W.value[s] = { month: 0, year: 0 }), W.value[s].month = w === null ? (te = W.value[s]) == null ? void 0 : te.month : w, W.value[s].year = K === null ? (h = W.value[s]) == null ? void 0 : h.year : K;
  }, j = (s, w) => {
    Y[s] = w;
  };
  Ue(() => {
    c.value || (e.startDate && (N(0, he(b(e.startDate)), ge(b(e.startDate))), A.value.multiCalendars && nt(0)), A.value.startTime && _()), ae(!0);
  });
  const ae = (s = !1) => {
    if (c.value)
      return Array.isArray(c.value) ? (M.value = c.value, I(s)) : ce(c.value);
    if (e.timePicker)
      return T();
    if (e.monthPicker && !e.range)
      return L();
    if (e.yearPicker && !e.range)
      return Z();
    if (A.value.multiCalendars && s && !e.startDate)
      return le(b(), s);
  }, le = (s, w = !1) => {
    if ((!A.value.multiCalendars || !e.multiStatic || w) && N(0, he(s), ge(s)), A.value.multiCalendars)
      for (let K = 1; K < A.value.multiCalendars; K++) {
        const te = Re(b(), { month: ee.value(K - 1), year: B.value(K - 1) }), h = Ln(te, { months: 1 });
        W.value[K] = { month: he(h), year: ge(h) };
      }
  }, ce = (s) => {
    le(s), j("hours", Ge(s)), j("minutes", Ze(s)), j("seconds", yt(s));
  }, v = (s, w) => {
    le(s[0], w);
    const K = (te, h) => [
      te(s[0]),
      s[1] ? te(s[1]) : Y[h][1]
    ];
    j("hours", K(Ge, "hours")), j("minutes", K(Ze, "minutes")), j("seconds", K(yt, "seconds"));
  }, S = (s, w) => {
    if ((e.range || e.weekPicker) && !e.multiDates)
      return v(s, w);
    if (e.multiDates) {
      const K = s[s.length - 1];
      return ce(K);
    }
  }, I = (s) => {
    const w = c.value;
    S(w, s), A.value.multiCalendars && e.multiCalendarsSolo && u();
  }, T = () => {
    if (_(), !e.range)
      c.value = Ee(b(), Y.hours, Y.minutes, J());
    else {
      const s = Y.hours, w = Y.minutes;
      c.value = [
        Ee(b(), s[0], w[0], J()),
        Ee(b(), s[1], w[1], J(!1))
      ];
    }
  }, L = () => {
    c.value = R(b(), ee.value(0), B.value(0));
  }, Z = () => {
    c.value = b();
  }, J = (s = !0) => e.enableSeconds ? Array.isArray(Y.seconds) ? s ? Y.seconds[0] : Y.seconds[1] : Y.seconds : 0, _ = () => {
    const s = d();
    if (s) {
      const w = Array.isArray(s), K = w ? [+s[0].hours, +s[1].hours] : +s.hours, te = w ? [+s[0].minutes, +s[1].minutes] : +s.minutes, h = w ? [+s[0].seconds, +s[1].seconds] : +s.seconds;
      j("hours", K), j("minutes", te), e.enableSeconds && j("seconds", h);
    }
  }, C = () => Array.isArray(c.value) && c.value.length ? c.value[c.value.length - 1] : null, u = () => {
    if (Array.isArray(c.value) && c.value.length === 2) {
      const s = b(
        b(c.value[1] ? c.value[1] : ot(c.value[0], 1))
      ), [w, K] = [he(c.value[0]), ge(c.value[0])], [te, h] = [he(c.value[1]), ge(c.value[1])];
      (w !== te || w === te && K !== h) && e.multiCalendarsSolo && N(1, he(s), ge(s));
    }
  }, r = (s) => {
    const w = ot(s, 1);
    return { month: he(w), year: ge(w) };
  }, m = (s) => {
    const w = he(b(s)), K = ge(b(s));
    if (N(0, w, K), A.value.multiCalendars > 0)
      for (let te = 1; te < A.value.multiCalendars; te++) {
        const h = r(
          Re(b(s), { year: ee.value(te - 1), month: B.value(te - 1) })
        );
        N(te, h.month, h.year);
      }
  }, y = (s) => {
    if (c.value && Array.isArray(c.value))
      if (c.value.some((w) => pe(s, w))) {
        const w = c.value.filter((K) => !pe(K, s));
        c.value = w.length ? w : null;
      } else
        (e.multiDatesLimit && +e.multiDatesLimit > c.value.length || !e.multiDatesLimit) && c.value.push(s);
    else
      c.value = [s];
  }, k = (s, w) => {
    const K = Oe(s, w) ? w : s, te = Oe(w, s) ? w : s;
    return pn({ start: K, end: te });
  }, x = (s) => {
    if (Array.isArray(c.value) && c.value[0]) {
      const w = oa(s, c.value[0]), K = k(c.value[0], s), te = K.length === 1 ? 0 : K.filter((z) => p(z)).length, h = Math.abs(w) - te;
      if (e.minRange && e.maxRange)
        return h >= +e.minRange && h <= +e.maxRange;
      if (e.minRange)
        return h >= +e.minRange;
      if (e.maxRange)
        return h <= +e.maxRange;
    }
    return !0;
  }, G = (s) => Array.isArray(c.value) && c.value.length === 2 ? e.fixedStart && (Oe(s, c.value[0]) || pe(s, c.value[0])) ? [c.value[0], s] : e.fixedEnd && (Pe(s, c.value[1]) || pe(s, c.value[1])) ? [s, c.value[1]] : (n("invalid-fixed-range", s), c.value) : [], de = () => {
    e.autoApply && E.value && n("auto-apply");
  }, f = () => {
    e.autoApply && n("select-date");
  }, l = (s) => !pn({ start: s[0], end: s[1] }).some((K) => p(K)), Q = (s) => (c.value = O(b(s.value)), de()), we = (s) => {
    const w = Ee(b(s.value), Y.hours, Y.minutes, J());
    e.multiDates ? y(w) : c.value = w, a(), de();
  }, be = () => {
    M.value = c.value ? c.value.slice() : [], M.value.length === 2 && !(e.fixedStart || e.fixedEnd) && (M.value = []);
  }, We = (s, w) => {
    const K = [b(s.value), vt(b(s.value), +e.autoRange)];
    l(K) && (w && m(s.value), M.value = K);
  }, je = (s) => {
    re(s.value) || (M.value = G(b(s.value)));
  }, re = (s) => e.noDisabledRange ? k(M.value[0], s).some((K) => p(K)) : !1, Je = (s, w) => {
    if (be(), e.autoRange)
      return We(s, w);
    if (e.fixedStart || e.fixedEnd)
      return je(s);
    M.value[0] ? x(b(s.value)) && !re(s.value) && (Pe(b(s.value), b(M.value[0])) ? M.value.unshift(b(s.value)) : M.value[1] = b(s.value)) : M.value[0] = b(s.value);
  }, ze = (s) => {
    M.value[s] = Ee(
      M.value[s],
      Y.hours[s],
      Y.minutes[s],
      J(s !== 1)
    );
  }, X = () => {
    M.value.length && (M.value[0] && !M.value[1] ? ze(0) : (ze(0), ze(1), a()), c.value = M.value.slice(), M.value[0] && M.value[1] && e.autoApply && n("auto-apply"), M.value[0] && !M.value[1] && e.modelAuto && e.autoApply && n("auto-apply"));
  }, ke = (s, w = !1) => {
    if (!(p(s.value) || !s.current && e.hideOffsetDates)) {
      if (e.weekPicker)
        return Q(s);
      if (!e.range)
        return we(s);
      at(Y.hours) && at(Y.minutes) && !e.multiDates && (Je(s, w), X());
    }
  }, me = (s) => {
    const w = s[0];
    return e.weekNumbers === "local" ? ra(w.value, { weekStartsOn: +e.weekStart }) : e.weekNumbers === "iso" ? la(w.value) : typeof e.weekNumbers == "function" ? e.weekNumbers(w.value) : "";
  }, nt = (s) => {
    for (let w = s - 1; w >= 0; w--) {
      const K = bt(Re(b(), { month: ee.value(w + 1), year: B.value(w + 1) }), 1);
      N(w, he(K), ge(K));
    }
    for (let w = s + 1; w <= A.value.multiCalendars - 1; w++) {
      const K = ot(Re(b(), { month: ee.value(w - 1), year: B.value(w - 1) }), 1);
      N(w, he(K), ge(K));
    }
  }, Le = (s) => R(b(), ee.value(s), B.value(s)), gt = (s) => Ee(s, Y.hours, Y.minutes, J()), Ut = (s, w) => {
    const K = e.monthPicker ? ee.value(s) !== w.month || !w.fromNav : B.value(s) !== w.year;
    if (N(s, w.month, w.year), A.value.multiCalendars && !e.multiCalendarsSolo && nt(s), e.monthPicker || e.yearPicker)
      if (e.range) {
        if (K) {
          let te = c.value ? c.value.slice() : [];
          te.length === 2 && te[1] !== null && (te = []), te.length ? Pe(Le(s), te[0]) ? te.unshift(Le(s)) : te[1] = Le(s) : te = [Le(s)], c.value = te;
        }
      } else
        c.value = Le(s);
    n("update-month-year", { instance: s, month: w.month, year: w.year }), t(e.multiCalendarsSolo ? s : void 0);
  }, Ht = async (s = !1) => {
    if (e.autoApply && (e.monthPicker || e.yearPicker)) {
      await mt();
      const w = e.monthPicker ? s : !1;
      e.range ? n("auto-apply", w || !c.value || c.value.length === 1) : n("auto-apply", w);
    }
    a();
  }, Mt = (s, w) => {
    const K = Re(b(), { month: ee.value(w), year: B.value(w) }), te = s < 0 ? ot(K, 1) : bt(K, 1);
    F(he(te), ge(te), s < 0, e.preventMinMaxNavigation) && (N(w, he(te), ge(te)), A.value.multiCalendars && !e.multiCalendarsSolo && nt(w), n("update-month-year", { instance: w, month: he(te), year: ge(te) }), t());
  }, pt = (s) => {
    Rn(s) && Rn(c.value) && at(Y.hours) && at(Y.minutes) ? (s[0] && c.value[0] && (c.value[0] = Ee(s[0], Y.hours[0], Y.minutes[0], J())), s[1] && c.value[1] && (c.value[1] = Ee(s[1], Y.hours[1], Y.minutes[1], J(!1)))) : e.multiDates && Array.isArray(c.value) ? c.value[c.value.length - 1] = gt(s) : !e.range && !In(s) && (c.value = gt(s)), n("time-update");
  }, Wt = (s, w = !0, K = !1) => {
    const te = w ? s : Y.hours, h = !w && !K ? s : Y.minutes, z = K ? s : Y.seconds;
    if (e.range && In(c.value) && at(te) && at(h) && at(z) && !e.disableTimeRangeValidation) {
      const $e = (Fe) => Ee(c.value[Fe], te[Fe], h[Fe], z[Fe]), Te = (Fe) => dn(c.value[Fe], 0);
      if (pe(c.value[0], c.value[1]) && (cn($e(0), Te(1)) || un($e(1), Te(0))))
        return;
    }
    if (j("hours", te), j("minutes", h), j("seconds", z), c.value)
      if (e.multiDates) {
        const $e = C();
        $e && pt($e);
      } else
        pt(c.value);
    else
      e.timePicker && pt(e.range ? [b(), b()] : b());
    a();
  }, zt = (s, w) => {
    e.monthChangeOnScroll && Mt(e.monthChangeOnScroll !== "inverse" ? -s.deltaY : s.deltaY, w);
  }, xt = (s, w, K = !1) => {
    e.monthChangeOnArrows && e.vertical === K && _t(s, w);
  }, _t = (s, w) => {
    Mt(s === "right" ? -1 : 1, w);
  };
  return {
    time: Y,
    month: ee,
    year: B,
    modelValue: c,
    calendars: W,
    monthYearSelect: Ht,
    isDisabled: p,
    updateTime: Wt,
    getWeekNum: me,
    selectDate: ke,
    updateMonthYear: Ut,
    handleScroll: zt,
    getMarker: (s) => e.markers.find((w) => pe($(s.value), $(w.date))),
    handleArrow: xt,
    handleSwipe: _t,
    selectCurrentDate: () => {
      e.range ? c.value && Array.isArray(c.value) && c.value[0] ? c.value = Pe(b(), c.value[0]) ? [b(), c.value[0]] : [c.value[0], b()] : c.value = [b()] : c.value = b(), f();
    },
    presetDateRange: (s, w) => {
      w || s.length && s.length <= 2 && e.range && (c.value = s.map((K) => b(K)), f(), e.multiCalendars && mt().then(() => ae(!0)));
    }
  };
}, Er = (e, n, a) => {
  const t = U(), {
    getZonedToUtc: o,
    getZonedDate: d,
    formatDate: p,
    getDefaultPattern: $,
    checkRangeEnabled: O,
    checkPartialRangeValue: R,
    isValidDate: F,
    setDateMonthOrYear: A,
    defaults: c
  } = Ve(n), M = U(""), W = It(n, "format");
  ut(t, () => {
    e("internal-model-change", t.value);
  }), ut(W, () => {
    r();
  });
  const Y = (l) => {
    const Q = l || b();
    return n.modelType ? y(Q) : {
      hours: Ge(Q),
      minutes: Ze(Q),
      seconds: n.enableSeconds ? yt(Q) : 0
    };
  }, ee = (l) => n.modelType ? y(l) : { month: he(l), year: ge(l) }, B = (l) => Array.isArray(l) ? O(() => [
    it(b(), l[0]),
    l[1] ? it(b(), l[1]) : R()
  ]) : it(b(), +l), E = (l, Q) => (typeof l == "string" || typeof l == "number") && n.modelType ? m(l) : Q, N = (l) => Array.isArray(l) ? [
    E(
      l[0],
      Ee(null, +l[0].hours, +l[0].minutes, l[0].seconds)
    ),
    E(
      l[1],
      Ee(null, +l[1].hours, +l[1].minutes, l[1].seconds)
    )
  ] : E(l, Ee(null, l.hours, l.minutes, l.seconds)), j = (l) => Array.isArray(l) ? O(() => [
    E(l[0], A(null, +l[0].month, +l[0].year)),
    E(
      l[1],
      l[1] ? A(null, +l[1].month, +l[1].year) : R()
    )
  ]) : E(l, A(null, +l.month, +l.year)), ae = (l) => {
    if (Array.isArray(l))
      return l.map((Q) => m(Q));
    throw new Error(Et.dateArr("multi-dates"));
  }, le = (l) => {
    if (Array.isArray(l))
      return [b(l[0]), b(l[1])];
    throw new Error(Et.dateArr("week-picker"));
  }, ce = (l) => n.modelAuto ? Array.isArray(l) ? [m(l[0]), m(l[1])] : n.autoApply ? [m(l)] : [m(l), null] : Array.isArray(l) ? O(() => [
    m(l[0]),
    l[1] ? m(l[1]) : R()
  ]) : m(l), v = () => {
    Array.isArray(t.value) && n.range && t.value.length === 1 && t.value.push(R());
  }, S = () => {
    const l = t.value;
    return [
      y(l[0]),
      l[1] ? y(l[1]) : R()
    ];
  }, I = () => t.value[1] ? S() : y(_e(t.value[0])), T = () => (t.value || []).map((l) => y(l)), L = () => (v(), n.modelAuto ? I() : n.multiDates ? T() : Array.isArray(t.value) ? O(() => S()) : y(_e(t.value))), Z = (l) => l ? n.timePicker ? N(_e(l)) : n.monthPicker ? j(_e(l)) : n.yearPicker ? B(_e(l)) : n.multiDates ? ae(_e(l)) : n.weekPicker ? le(_e(l)) : ce(_e(l)) : null, J = (l) => {
    const Q = Z(l);
    F(_e(Q)) ? (t.value = _e(Q), r()) : (t.value = null, M.value = "");
  }, _ = () => {
    var Q;
    const l = (we) => {
      var be;
      return wt(we, (be = c.value.textInputOptions) == null ? void 0 : be.format);
    };
    return `${l(t.value[0])} ${(Q = c.value.textInputOptions) == null ? void 0 : Q.rangeSeparator} ${t.value[1] ? l(t.value[1]) : ""}`;
  }, C = () => {
    var l;
    return a.value && t.value ? Array.isArray(t.value) ? _() : wt(t.value, (l = c.value.textInputOptions) == null ? void 0 : l.format) : p(t.value);
  }, u = () => {
    var l;
    return t.value ? n.multiDates ? t.value.map((Q) => p(Q)).join("; ") : n.textInput && typeof ((l = c.value.textInputOptions) == null ? void 0 : l.format) == "string" ? C() : p(t.value) : "";
  }, r = () => {
    !n.format || typeof n.format == "string" ? M.value = u() : M.value = n.format(t.value);
  }, m = (l) => {
    if (n.utc) {
      const Q = new Date(l);
      return n.utc === "preserve" ? new Date(Q.getTime() + Q.getTimezoneOffset() * 6e4) : Q;
    }
    return n.modelType ? n.modelType === "date" || n.modelType === "timestamp" ? d(new Date(l)) : n.modelType === "format" && (typeof n.format == "string" || !n.format) ? an(l, $(), new Date()) : d(an(l, n.modelType, new Date())) : d(new Date(l));
  }, y = (l) => n.utc ? Ja(l, n.utc === "preserve") : n.modelType ? n.modelType === "timestamp" ? +o(l) : n.modelType === "format" && (typeof n.format == "string" || !n.format) ? p(o(l)) : p(o(l), n.modelType) : o(l), k = (l) => {
    e("update:model-value", l);
  }, x = (l) => Array.isArray(t.value) ? [
    l(t.value[0]),
    t.value[1] ? l(t.value[1]) : R()
  ] : l(_e(t.value)), G = (l) => k(_e(x(l)));
  return {
    inputValue: M,
    internalModelValue: t,
    checkBeforeEmit: () => t.value ? n.range ? n.partialRange ? t.value.length >= 1 : t.value.length === 2 : !!t.value : !1,
    parseExternalModelValue: J,
    formatInputValue: r,
    emitModelValue: () => (r(), n.monthPicker ? G(ee) : n.timePicker ? G(Y) : n.yearPicker ? G(ge) : n.weekPicker ? k(t.value) : k(L()))
  };
}, Lr = (e, n) => {
  const { validateMonthYearInRange: a, validateMaxDate: t, validateMinDate: o, defaults: d } = Ve(e), p = (A, c) => {
    let M = A;
    return d.value.filters.months.includes(he(M)) ? (M = c ? ot(A, 1) : bt(A, 1), p(M, c)) : M;
  }, $ = (A, c) => {
    let M = A;
    return d.value.filters.years.includes(ge(M)) ? (M = c ? sa(A, 1) : ia(A, 1), $(M, c)) : M;
  }, O = (A) => {
    const c = Re(new Date(), { month: e.month, year: e.year });
    let M = A ? ot(c, 1) : bt(c, 1), W = he(M), Y = ge(M);
    d.value.filters.months.includes(W) && (M = p(M, A), W = he(M), Y = ge(M)), d.value.filters.years.includes(Y) && (M = $(M, A), Y = ge(M)), a(W, Y, A, e.preventMinMaxNavigation) && R(W, Y);
  }, R = (A, c) => {
    n("update-month-year", { month: A, year: c });
  }, F = V(() => (A) => {
    if (!e.preventMinMaxNavigation || A && !e.maxDate || !A && !e.minDate)
      return !1;
    const c = Re(new Date(), { month: e.month, year: e.year }), M = A ? ot(c, 1) : bt(c, 1), W = [he(M), ge(M)];
    return A ? !t(...W) : !o(...W);
  });
  return { handleMonthYearChange: O, isDisabled: F, updateMonthYear: R };
};
var Rt = /* @__PURE__ */ ((e) => (e.center = "center", e.left = "left", e.right = "right", e))(Rt || {});
const Fr = (e, n, a, t) => {
  const o = U({
    top: "0",
    left: "0",
    transform: "none"
  }), d = U(!1), p = It(t, "teleportCenter");
  ut(p, () => {
    Y();
  });
  const $ = () => ({ top: 0, left: 0 }), O = (v, S) => {
    o.value.left = `${v + S}px`, o.value.transform = "translateX(-100%)";
  }, R = (v) => {
    o.value.left = `${v}px`, o.value.transform = "translateX(0)";
  }, F = (v, S, I = !1) => {
    t.position === Rt.left && R(v), t.position === Rt.right && O(v, S), t.position === Rt.center && (o.value.left = `${v + S / 2}px`, o.value.transform = I ? "translate(-50%, -50%)" : "translateX(-50%)");
  }, A = (v) => {
    const { width: S, height: I } = v.getBoundingClientRect(), { top: T, left: L } = t.altPosition ? t.altPosition(v) : $();
    return { top: +T, left: +L, width: S, height: I };
  }, c = () => {
    const v = Me(n);
    if (v) {
      const { top: S, left: I, width: T, height: L } = A(v);
      o.value.top = `${S + L / 2}px`, o.value.transform = "translateY(-50%)", F(I, T, !0);
    }
  }, M = () => {
    o.value.left = "50%", o.value.top = "50%", o.value.transform = "translate(-50%, -50%)", o.value.position = "fixed";
  }, W = () => {
    const v = Me(n), { top: S, left: I, transform: T } = t.altPosition(v);
    o.value = { top: `${S}px`, left: `${I}px`, transform: T || "" };
  }, Y = (v = !0) => {
    if (!t.inline)
      return p.value ? M() : t.altPosition !== null ? W() : (v && a("recalculate-position"), ae());
  }, ee = ({
    inputEl: v,
    menuEl: S,
    left: I,
    width: T
  }) => {
    window.screen.width > 768 && F(I, T), N(v, S);
  }, B = (v, S) => {
    const { top: I, left: T, height: L, width: Z } = A(v);
    o.value.top = `${L + I + +t.offset}px`, ee({ inputEl: v, menuEl: S, left: T, width: Z }), d.value = !1;
  }, E = (v, S) => {
    const { top: I, left: T, width: L } = A(v), { height: Z } = S.getBoundingClientRect();
    o.value.top = `${I - Z - +t.offset}px`, ee({ inputEl: v, menuEl: S, left: T, width: L }), d.value = !0;
  }, N = (v, S) => {
    if (t.autoPosition) {
      const { left: I, width: T } = A(v), { left: L, right: Z } = S.getBoundingClientRect();
      return L <= 0 || L <= I ? R(I) : Z >= document.documentElement.clientWidth ? O(I, T) : F(I, T);
    }
  }, j = (v, S) => {
    const { height: I } = S.getBoundingClientRect(), { top: T, height: L } = v.getBoundingClientRect(), J = window.innerHeight - T - L, _ = T;
    return I <= J ? B(v, S) : I > J && I <= _ ? E(v, S) : J >= _ ? B(v, S) : E(v, S);
  }, ae = () => {
    const v = Me(n), S = Me(e);
    if (v && S)
      return t.autoPosition ? j(v, S) : B(v, S);
  }, le = function(v) {
    if (v) {
      const S = v.scrollHeight > v.clientHeight, T = window.getComputedStyle(v).overflowY.indexOf("hidden") !== -1;
      return S && !T;
    }
    return !0;
  }, ce = function(v) {
    return !v || v === document.body ? window : le(v) ? v : ce(v.parentNode);
  };
  return { openOnTop: d, menuPosition: o, setMenuPosition: Y, setInitialPosition: c, getScrollableParent: ce };
}, ft = [
  { name: "clock-icon", use: ["time", "calendar"] },
  { name: "arrow-left", use: ["month-year", "calendar"] },
  { name: "arrow-right", use: ["month-year", "calendar"] },
  { name: "arrow-up", use: ["time", "calendar"] },
  { name: "arrow-down", use: ["time", "calendar"] },
  { name: "calendar-icon", use: ["month-year", "time", "calendar"] },
  { name: "day", use: ["calendar"] },
  { name: "month-overlay-value", use: ["calendar", "month-year"] },
  { name: "year-overlay-value", use: ["calendar", "month-year"] },
  { name: "year-overlay", use: ["month-year"] },
  { name: "month-overlay", use: ["month-year"] },
  { name: "month-overlay-header", use: ["month-year"] },
  { name: "year-overlay-header", use: ["month-year"] },
  { name: "hours-overlay-value", use: ["calendar", "time"] },
  { name: "minutes-overlay-value", use: ["calendar", "time"] },
  { name: "seconds-overlay-value", use: ["calendar", "time"] },
  { name: "hours", use: ["calendar", "time"] },
  { name: "minutes", use: ["calendar", "time"] },
  { name: "month", use: ["calendar", "month-year"] },
  { name: "year", use: ["calendar", "month-year"] },
  { name: "action-select", use: ["action"] },
  { name: "action-preview", use: ["action"] },
  { name: "calendar-header", use: ["calendar"] },
  { name: "marker-tooltip", use: ["calendar"] },
  { name: "now-button", use: [] },
  { name: "time-picker-overlay", use: ["calendar", "time"] },
  { name: "am-pm-button", use: ["calendar", "time"] },
  { name: "left-sidebar", use: ["menu"] },
  { name: "right-sidebar", use: ["menu"] },
  { name: "month-year", use: ["month-year"] },
  { name: "time-picker", use: ["menu"] },
  { name: "action-row", use: ["action"] }
], Ur = [{ name: "trigger" }, { name: "input-icon" }, { name: "clear-icon" }, { name: "dp-input" }], Hr = {
  all: () => ft,
  monthYear: () => ft.filter((e) => e.use.includes("month-year")),
  input: () => Ur,
  timePicker: () => ft.filter((e) => e.use.includes("time")),
  action: () => ft.filter((e) => e.use.includes("action")),
  calendar: () => ft.filter((e) => e.use.includes("calendar")),
  menu: () => ft.filter((e) => e.use.includes("menu"))
}, st = (e, n, a) => {
  const t = [];
  return Hr[n]().forEach((o) => {
    e[o.name] && t.push(o.name);
  }), a && a.length && a.forEach((o) => {
    o.slot && t.push(o.slot);
  }), t;
}, Ft = (e) => ({ transitionName: V(() => (a) => e && typeof e != "boolean" ? a ? e.open : e.close : ""), showTransition: !!e }), tt = {
  multiCalendars: { type: [Boolean, Number, String], default: null },
  modelValue: { type: [String, Date, Array, Object, Number], default: null },
  modelType: { type: String, default: null },
  position: { type: String, default: "center" },
  dark: { type: Boolean, default: !1 },
  format: {
    type: [String, Function],
    default: () => null
  },
  closeOnScroll: { type: Boolean, default: !1 },
  autoPosition: { type: Boolean, default: !0 },
  closeOnAutoApply: { type: Boolean, default: !0 },
  altPosition: { type: Function, default: null },
  transitions: { type: [Boolean, Object], default: !0 },
  formatLocale: { type: Object, default: null },
  utc: { type: [Boolean, String], default: !1 },
  ariaLabels: { type: Object, default: () => ({}) },
  offset: { type: [Number, String], default: 10 },
  hideNavigation: { type: Array, default: () => [] },
  timezone: { type: String, default: null },
  vertical: { type: Boolean, default: !1 },
  disableMonthYearSelect: { type: Boolean, default: !1 },
  menuClassName: { type: String, default: null },
  dayClass: { type: Function, default: null },
  yearRange: { type: Array, default: () => [1900, 2100] },
  multiCalendarsSolo: { type: Boolean, default: !1 },
  calendarCellClassName: { type: String, default: null },
  enableTimePicker: { type: Boolean, default: !0 },
  autoApply: { type: Boolean, default: !1 },
  disabledDates: { type: [Array, Function], default: () => [] },
  monthNameFormat: { type: String, default: "short" },
  startDate: { type: [Date, String], default: null },
  startTime: { type: [Object, Array], default: null },
  hideOffsetDates: { type: Boolean, default: !1 },
  autoRange: { type: [Number, String], default: null },
  noToday: { type: Boolean, default: !1 },
  disabledWeekDays: { type: Array, default: () => [] },
  allowedDates: { type: Array, default: () => [] },
  showNowButton: { type: Boolean, default: !1 },
  nowButtonLabel: { type: String, default: "Now" },
  markers: { type: Array, default: () => [] },
  modeHeight: { type: [Number, String], default: 255 },
  escClose: { type: Boolean, default: !0 },
  spaceConfirm: { type: Boolean, default: !0 },
  monthChangeOnArrows: { type: Boolean, default: !0 },
  presetRanges: { type: Array, default: () => [] },
  flow: { type: Array, default: () => [] },
  preventMinMaxNavigation: { type: Boolean, default: !1 },
  minRange: { type: [Number, String], default: null },
  maxRange: { type: [Number, String], default: null },
  multiDatesLimit: { type: [Number, String], default: null },
  reverseYears: { type: Boolean, default: !1 },
  keepActionRow: { type: Boolean, default: !1 },
  weekPicker: { type: Boolean, default: !1 },
  filters: { type: Object, default: () => ({}) },
  arrowNavigation: { type: Boolean, default: !1 },
  multiStatic: { type: Boolean, default: !0 },
  disableTimeRangeValidation: { type: Boolean, default: !1 },
  highlight: {
    type: [Array, Function],
    default: null
  },
  highlightWeekDays: {
    type: Array,
    default: null
  },
  highlightDisabledDays: { type: Boolean, default: !1 },
  teleportCenter: { type: Boolean, default: !1 },
  locale: { type: String, default: "en-Us" },
  weekNumName: { type: String, default: "W" },
  weekStart: { type: [Number, String], default: 1 },
  weekNumbers: {
    type: [String, Function],
    default: null
  },
  calendarClassName: { type: String, default: null },
  noSwipe: { type: Boolean, default: !1 },
  monthChangeOnScroll: { type: [Boolean, String], default: !0 },
  dayNames: {
    type: [Function, Array],
    default: null
  },
  monthPicker: { type: Boolean, default: !1 },
  customProps: { type: Object, default: null },
  yearPicker: { type: Boolean, default: !1 },
  modelAuto: { type: Boolean, default: !1 },
  selectText: { type: String, default: "Select" },
  cancelText: { type: String, default: "Cancel" },
  previewFormat: {
    type: [String, Function],
    default: () => ""
  },
  multiDates: { type: Boolean, default: !1 },
  partialRange: { type: Boolean, default: !0 },
  ignoreTimeValidation: { type: Boolean, default: !1 },
  minDate: { type: [Date, String], default: null },
  maxDate: { type: [Date, String], default: null },
  minTime: { type: Object, default: null },
  maxTime: { type: Object, default: null },
  name: { type: String, default: null },
  placeholder: { type: String, default: "" },
  hideInputIcon: { type: Boolean, default: !1 },
  clearable: { type: Boolean, default: !0 },
  state: { type: Boolean, default: null },
  required: { type: Boolean, default: !1 },
  autocomplete: { type: String, default: "off" },
  inputClassName: { type: String, default: null },
  inlineWithInput: { type: Boolean, default: !1 },
  textInputOptions: { type: Object, default: () => null },
  fixedStart: { type: Boolean, default: !1 },
  fixedEnd: { type: Boolean, default: !1 },
  timePicker: { type: Boolean, default: !1 },
  enableSeconds: { type: Boolean, default: !1 },
  is24: { type: Boolean, default: !0 },
  noHoursOverlay: { type: Boolean, default: !1 },
  noMinutesOverlay: { type: Boolean, default: !1 },
  noSecondsOverlay: { type: Boolean, default: !1 },
  hoursGridIncrement: { type: [String, Number], default: 1 },
  minutesGridIncrement: { type: [String, Number], default: 5 },
  secondsGridIncrement: { type: [String, Number], default: 5 },
  hoursIncrement: { type: [Number, String], default: 1 },
  minutesIncrement: { type: [Number, String], default: 1 },
  secondsIncrement: { type: [Number, String], default: 1 },
  range: { type: Boolean, default: !1 },
  uid: { type: String, default: null },
  disabled: { type: Boolean, default: !1 },
  readonly: { type: Boolean, default: !1 },
  inline: { type: Boolean, default: !1 },
  textInput: { type: Boolean, default: !1 },
  onClickOutside: { type: Function, default: null },
  noDisabledRange: { type: Boolean, default: !1 },
  sixWeeks: { type: Boolean, default: !1 }
}, Wr = ["aria-label", "aria-disabled", "aria-readonly"], zr = {
  key: 1,
  class: "dp__input_wrap"
}, xr = ["id", "name", "inputmode", "placeholder", "disabled", "readonly", "required", "value", "autocomplete", "onKeydown"], Kr = {
  key: 2,
  class: "dp__input_icon"
}, jr = {
  key: 4,
  class: "dp__clear_icon"
}, Gr = /* @__PURE__ */ He({
  __name: "DatepickerInput",
  props: {
    isMenuOpen: { type: Boolean, default: !1 },
    inputValue: { type: String, default: "" },
    ...tt
  },
  emits: [
    "clear",
    "open",
    "update:input-value",
    "set-input-date",
    "close",
    "select-date",
    "set-empty-date",
    "toggle",
    "focus-prev",
    "focus",
    "blur"
  ],
  setup(e, { expose: n, emit: a }) {
    const t = e, { getDefaultPattern: o, isValidDate: d, defaults: p } = Ve(t), $ = U(), O = U(null), R = U(!1), F = V(
      () => ({
        dp__pointer: !t.disabled && !t.readonly && !t.textInput,
        dp__disabled: t.disabled,
        dp__input_readonly: !t.textInput,
        dp__input: !0,
        dp__input_icon_pad: !t.hideInputIcon,
        dp__input_valid: t.state,
        dp__input_invalid: t.state === !1,
        dp__input_focus: R.value || t.isMenuOpen,
        dp__input_reg: !t.textInput,
        [t.inputClassName]: !!t.inputClassName
      })
    ), A = () => {
      a("set-input-date", null), t.autoApply && (a("set-empty-date"), $.value = null);
    }, c = (v) => {
      var S;
      return qa(v, ((S = p.value.textInputOptions) == null ? void 0 : S.format) || o());
    }, M = (v) => {
      const { rangeSeparator: S } = p.value.textInputOptions, [I, T] = v.split(`${S}`);
      if (I) {
        const L = c(I.trim()), Z = T ? c(T.trim()) : null, J = L && Z ? [L, Z] : [L];
        $.value = L ? J : null;
      }
    }, W = (v) => {
      if (t.range)
        M(v);
      else if (t.multiDates) {
        const S = v.split(";");
        $.value = S.map((I) => c(I.trim())).filter((I) => I);
      } else
        $.value = c(v);
    }, Y = (v) => {
      var I;
      const { value: S } = v.target;
      S !== "" ? ((I = p.value.textInputOptions) != null && I.openMenu && !t.isMenuOpen && a("open"), W(S), a("set-input-date", $.value)) : A(), a("update:input-value", S);
    }, ee = () => {
      var v, S;
      (v = p.value.textInputOptions) != null && v.enterSubmit && d($.value) && t.inputValue !== "" ? (a("set-input-date", $.value, !0), $.value = null) : (S = p.value.textInputOptions) != null && S.enterSubmit && t.inputValue === "" && ($.value = null, a("clear"));
    }, B = () => {
      var v, S;
      (v = p.value.textInputOptions) != null && v.tabSubmit && d($.value) && t.inputValue !== "" ? (a("set-input-date", $.value, !0), $.value = null) : (S = p.value.textInputOptions) != null && S.tabSubmit && t.inputValue === "" && ($.value = null, a("clear"));
    }, E = () => {
      R.value = !0, a("focus");
    }, N = (v) => {
      var S;
      v.preventDefault(), v.stopImmediatePropagation(), v.stopPropagation(), t.textInput && ((S = p.value.textInputOptions) != null && S.openMenu) && !t.inlineWithInput ? t.isMenuOpen ? p.value.textInputOptions.enterSubmit && a("select-date") : a("open") : t.textInput || a("toggle");
    }, j = () => {
      R.value = !1, t.isMenuOpen || a("blur"), t.autoApply && t.textInput && $.value && (a("set-input-date", $.value), a("select-date"), $.value = null);
    }, ae = () => {
      a("clear");
    }, le = (v) => {
      t.textInput || v.preventDefault();
    };
    return n({
      focusInput: () => {
        O.value && O.value.focus({ preventScroll: !0 });
      }
    }), (v, S) => {
      var I;
      return g(), P("div", {
        onClick: N,
        "aria-label": (I = i(p).ariaLabels) == null ? void 0 : I.input,
        role: "textbox",
        "aria-multiline": "false",
        "aria-disabled": v.disabled,
        "aria-readonly": v.readonly
      }, [
        v.$slots.trigger && !v.$slots["dp-input"] && !v.inline ? H(v.$slots, "trigger", { key: 0 }) : D("", !0),
        !v.$slots.trigger && (!v.inline || v.inlineWithInput) ? (g(), P("div", zr, [
          v.$slots["dp-input"] && !v.$slots.trigger && !v.inline ? H(v.$slots, "dp-input", {
            key: 0,
            value: e.inputValue,
            onInput: Y,
            onEnter: ee,
            onTab: B,
            onClear: ae
          }) : D("", !0),
          v.$slots["dp-input"] ? D("", !0) : (g(), P("input", {
            key: 1,
            ref_key: "inputRef",
            ref: O,
            id: v.uid ? `dp-input-${v.uid}` : void 0,
            name: v.name,
            class: ve(i(F)),
            inputmode: v.textInput ? "text" : "none",
            placeholder: v.placeholder,
            disabled: v.disabled,
            readonly: v.readonly,
            required: v.required,
            value: e.inputValue,
            autocomplete: v.autocomplete,
            onInput: Y,
            onKeydown: [
              ie(N, ["enter"]),
              ie(B, ["tab"])
            ],
            onBlur: j,
            onFocus: E,
            onKeypress: le
          }, null, 42, xr)),
          v.$slots["input-icon"] && !v.hideInputIcon ? (g(), P("span", Kr, [
            H(v.$slots, "input-icon")
          ])) : D("", !0),
          !v.$slots["input-icon"] && !v.hideInputIcon && !v.$slots["dp-input"] ? (g(), fe(i(Lt), {
            key: 3,
            class: "dp__input_icon dp__input_icons"
          })) : D("", !0),
          v.$slots["clear-icon"] && e.inputValue && v.clearable && !v.disabled && !v.readonly ? (g(), P("span", jr, [
            H(v.$slots, "clear-icon", { clear: ae })
          ])) : D("", !0),
          v.clearable && !v.$slots["clear-icon"] && e.inputValue && !v.disabled && !v.readonly ? (g(), fe(i(Ma), {
            key: 5,
            class: "dp__clear_icon dp__input_icons",
            "data-test": "clear-icon",
            onClick: Xe(ae, ["stop", "prevent"])
          }, null, 8, ["onClick"])) : D("", !0)
        ])) : D("", !0)
      ], 8, Wr);
    };
  }
}), Zr = { class: "dp__selection_preview" }, Xr = { class: "dp__action_buttons" }, qr = ["onKeydown"], Jr = /* @__PURE__ */ He({
  __name: "ActionRow",
  props: {
    calendarWidth: { type: Number, default: 0 },
    menuMount: { type: Boolean, default: !1 },
    internalModelValue: { type: [Date, Array], default: null },
    ...tt
  },
  emits: ["close-picker", "select-date", "invalid-select"],
  setup(e, { emit: n }) {
    const a = e, { formatDate: t, isValidTime: o, defaults: d } = Ve(a), { buildMatrix: p } = et(), $ = U(null), O = U(null);
    Ue(() => {
      a.arrowNavigation && p([Me($), Me(O)], "actionRow");
    });
    const R = V(() => a.range && !a.partialRange && a.internalModelValue ? a.internalModelValue.length === 2 : !0), F = V(() => !c.value || !M.value || !R.value), A = V(() => ({
      dp__action: !0,
      dp__select: !0,
      dp__action_disabled: F.value
    })), c = V(() => !a.enableTimePicker || a.ignoreTimeValidation ? !0 : o(a.internalModelValue)), M = V(() => a.monthPicker ? B(a.internalModelValue) : !0), W = () => {
      const N = d.value.previewFormat;
      return a.timePicker || a.monthPicker, N(_e(a.internalModelValue));
    }, Y = () => {
      const N = a.internalModelValue;
      return d.value.multiCalendars > 0 ? `${t(N[0])} - ${t(N[1])}` : [t(N[0]), t(N[1])];
    }, ee = V(() => !a.internalModelValue || !a.menuMount ? "" : typeof d.value.previewFormat == "string" ? Array.isArray(a.internalModelValue) ? a.internalModelValue.length === 2 && a.internalModelValue[1] ? Y() : a.multiDates ? a.internalModelValue.map((N) => `${t(N)}`) : a.modelAuto ? `${t(a.internalModelValue[0])}` : `${t(a.internalModelValue[0])} -` : t(a.internalModelValue) : W()), B = (N) => {
      if (!a.monthPicker)
        return !0;
      let j = !0;
      return a.minDate && a.maxDate ? Oe(b(N), b(a.minDate)) && Pe(b(N), b(a.maxDate)) : (a.minDate && (j = Oe(b(N), b(a.minDate))), a.maxDate && (j = Pe(b(N), b(a.maxDate))), j);
    }, E = () => {
      c.value && M.value && R.value ? n("select-date") : n("invalid-select");
    };
    return (N, j) => (g(), P("div", {
      class: "dp__action_row",
      style: lt(e.calendarWidth ? { width: `${e.calendarWidth}px` } : {})
    }, [
      N.$slots["action-row"] ? H(N.$slots, "action-row", Ye(Se({ key: 0 }, {
        internalModelValue: e.internalModelValue,
        disabled: i(F),
        selectDate: () => N.$emit("select-date"),
        closePicker: () => N.$emit("close-picker")
      }))) : (g(), P(ue, { key: 1 }, [
        ne("div", Zr, [
          N.$slots["action-preview"] ? H(N.$slots, "action-preview", {
            key: 0,
            value: e.internalModelValue
          }) : D("", !0),
          N.$slots["action-preview"] ? D("", !0) : (g(), P(ue, { key: 1 }, [
            Array.isArray(i(ee)) ? D("", !0) : (g(), P(ue, { key: 0 }, [
              xe(Ce(i(ee)), 1)
            ], 64)),
            Array.isArray(i(ee)) ? (g(!0), P(ue, { key: 1 }, De(i(ee), (ae, le) => (g(), P("div", { key: le }, Ce(ae), 1))), 128)) : D("", !0)
          ], 64))
        ]),
        ne("div", Xr, [
          N.$slots["action-select"] ? H(N.$slots, "action-select", {
            key: 0,
            value: e.internalModelValue
          }) : D("", !0),
          N.$slots["action-select"] ? D("", !0) : (g(), P(ue, { key: 1 }, [
            N.inline ? D("", !0) : (g(), P("span", {
              key: 0,
              class: "dp__action dp__cancel",
              ref_key: "cancelButtonRef",
              ref: $,
              tabindex: "0",
              onClick: j[0] || (j[0] = (ae) => N.$emit("close-picker")),
              onKeydown: [
                j[1] || (j[1] = ie((ae) => N.$emit("close-picker"), ["enter"])),
                j[2] || (j[2] = ie((ae) => N.$emit("close-picker"), ["space"]))
              ]
            }, Ce(N.cancelText), 545)),
            ne("span", {
              class: ve(i(A)),
              tabindex: "0",
              onKeydown: [
                ie(E, ["enter"]),
                ie(E, ["space"])
              ],
              onClick: E,
              "data-test": "select-button",
              ref_key: "selectButtonRef",
              ref: O
            }, Ce(N.selectText), 43, qr)
          ], 64))
        ])
      ], 64))
    ], 4));
  }
}), Qr = ["aria-label"], el = {
  class: "dp__calendar_header",
  role: "row"
}, tl = {
  key: 0,
  class: "dp__calendar_header_item",
  role: "gridcell"
}, nl = /* @__PURE__ */ ne("div", { class: "dp__calendar_header_separator" }, null, -1), al = ["aria-label"], rl = {
  key: 0,
  role: "gridcell",
  class: "dp__calendar_item dp__week_num"
}, ll = { class: "dp__cell_inner" }, ol = ["aria-selected", "aria-disabled", "aria-label", "data-test", "onClick", "onKeydown", "onMouseenter", "onMouseleave"], sl = /* @__PURE__ */ ne("div", { class: "dp__arrow_bottom_tp" }, null, -1), il = /* @__PURE__ */ He({
  __name: "Calendar",
  props: {
    mappedDates: { type: Array, default: () => [] },
    getWeekNum: {
      type: Function,
      default: () => ""
    },
    specificMode: { type: Boolean, default: !1 },
    instance: { type: Number, default: 0 },
    month: { type: Number, default: 0 },
    year: { type: Number, default: 0 },
    ...tt
  },
  emits: [
    "select-date",
    "set-hover-date",
    "handle-scroll",
    "mount",
    "handle-swipe",
    "handle-space",
    "tooltip-open",
    "tooltip-close"
  ],
  setup(e, { expose: n, emit: a }) {
    const t = e, { buildMultiLevelMatrix: o } = et(), { setDateMonthOrYear: d, defaults: p } = Ve(t), $ = U(null), O = U({ bottom: "", left: "", transform: "" }), R = U([]), F = U(null), A = U(!0), c = U(""), M = U({ startX: 0, endX: 0, startY: 0, endY: 0 }), W = V(() => t.dayNames ? Array.isArray(t.dayNames) ? t.dayNames : t.dayNames(t.locale, +t.weekStart) : Tr(t.locale, +t.weekStart));
    Ue(() => {
      a("mount", { cmp: "calendar", refs: R }), t.noSwipe || F.value && (F.value.addEventListener("touchstart", S, { passive: !1 }), F.value.addEventListener("touchend", I, { passive: !1 }), F.value.addEventListener("touchmove", T, { passive: !1 })), t.monthChangeOnScroll && F.value && F.value.addEventListener("wheel", J, { passive: !1 });
    });
    const Y = (_) => _ ? t.vertical ? "vNext" : "next" : t.vertical ? "vPrevious" : "previous", ee = (_, C) => {
      if (t.transitions) {
        const u = Ke(d(b(), t.month, t.year));
        c.value = Oe(Ke(d(b(), _, C)), u) ? p.value.transitions[Y(!0)] : p.value.transitions[Y(!1)], A.value = !1, mt(() => {
          A.value = !0;
        });
      }
    }, B = V(
      () => ({
        dp__calendar_wrap: !0,
        [t.calendarClassName]: !!t.calendarClassName
      })
    ), E = V(() => (_) => {
      const C = Pr(_);
      return {
        dp__marker_dot: C.type === "dot",
        dp__marker_line: C.type === "line"
      };
    }), N = V(() => (_) => pe(_, $.value)), j = V(() => ({
      dp__calendar: !0,
      dp__calendar_next: p.value.multiCalendars > 0 && t.instance !== 0
    })), ae = V(() => (_) => t.hideOffsetDates ? _.current : !0), le = V(() => t.specificMode ? { height: `${t.modeHeight}px` } : void 0), ce = (_, C, u) => {
      var r, m;
      if (a("set-hover-date", _), (m = (r = _.marker) == null ? void 0 : r.tooltip) != null && m.length) {
        const y = Me(R.value[C][u]);
        if (y) {
          const { width: k, height: x } = y.getBoundingClientRect();
          O.value = {
            bottom: `${x}px`,
            left: `${k / 2}px`,
            transform: "translateX(-50%)"
          }, $.value = _.value, a("tooltip-open", _.marker);
        }
      }
    }, v = (_) => {
      $.value && ($.value = null, a("tooltip-close", _.marker));
    }, S = (_) => {
      M.value.startX = _.changedTouches[0].screenX, M.value.startY = _.changedTouches[0].screenY;
    }, I = (_) => {
      M.value.endX = _.changedTouches[0].screenX, M.value.endY = _.changedTouches[0].screenY, L();
    }, T = (_) => {
      t.vertical && !t.inline && _.preventDefault();
    }, L = () => {
      const _ = t.vertical ? "Y" : "X";
      Math.abs(M.value[`start${_}`] - M.value[`end${_}`]) > 10 && a("handle-swipe", M.value[`start${_}`] > M.value[`end${_}`] ? "right" : "left");
    }, Z = (_, C, u) => {
      _ && (Array.isArray(R.value[C]) ? R.value[C][u] = _ : R.value[C] = [_]), t.arrowNavigation && o(R.value, "calendar");
    }, J = (_) => {
      t.monthChangeOnScroll && (_.preventDefault(), a("handle-scroll", _));
    };
    return n({ triggerTransition: ee }), (_, C) => {
      var u;
      return g(), P("div", {
        class: ve(i(j))
      }, [
        ne("div", {
          style: lt(i(le))
        }, [
          e.specificMode ? D("", !0) : (g(), P("div", {
            key: 0,
            ref_key: "calendarWrapRef",
            ref: F,
            class: ve(i(B)),
            role: "grid",
            "aria-label": (u = i(p).ariaLabels) == null ? void 0 : u.calendarWrap
          }, [
            ne("div", el, [
              _.weekNumbers ? (g(), P("div", tl, Ce(_.weekNumName), 1)) : D("", !0),
              (g(!0), P(ue, null, De(i(W), (r, m) => (g(), P("div", {
                class: "dp__calendar_header_item",
                role: "gridcell",
                key: m,
                "data-test": "calendar-header"
              }, [
                _.$slots["calendar-header"] ? H(_.$slots, "calendar-header", {
                  key: 0,
                  day: r,
                  index: m
                }) : D("", !0),
                _.$slots["calendar-header"] ? D("", !0) : (g(), P(ue, { key: 1 }, [
                  xe(Ce(r), 1)
                ], 64))
              ]))), 128))
            ]),
            nl,
            Qe(ht, {
              name: c.value,
              css: !!_.transitions
            }, {
              default: oe(() => {
                var r;
                return [
                  A.value ? (g(), P("div", {
                    key: 0,
                    class: "dp__calendar",
                    role: "grid",
                    "aria-label": (r = i(p).ariaLabels) == null ? void 0 : r.calendarDays
                  }, [
                    (g(!0), P(ue, null, De(e.mappedDates, (m, y) => (g(), P("div", {
                      class: "dp__calendar_row",
                      role: "row",
                      key: y
                    }, [
                      _.weekNumbers ? (g(), P("div", rl, [
                        ne("div", ll, Ce(e.getWeekNum(m.days)), 1)
                      ])) : D("", !0),
                      (g(!0), P(ue, null, De(m.days, (k, x) => {
                        var G, de, f;
                        return g(), P("div", {
                          role: "gridcell",
                          class: "dp__calendar_item",
                          ref_for: !0,
                          ref: (l) => Z(l, y, x),
                          key: x + y,
                          "aria-selected": k.classData.dp__active_date || k.classData.dp__range_start || k.classData.dp__range_start,
                          "aria-disabled": k.classData.dp__cell_disabled,
                          "aria-label": (de = (G = i(p).ariaLabels) == null ? void 0 : G.day) == null ? void 0 : de.call(G, k),
                          tabindex: "0",
                          "data-test": k.value,
                          onClick: Xe((l) => _.$emit("select-date", k), ["stop", "prevent"]),
                          onKeydown: [
                            ie((l) => _.$emit("select-date", k), ["enter"]),
                            ie((l) => _.$emit("handle-space", k), ["space"])
                          ],
                          onMouseenter: (l) => ce(k, y, x),
                          onMouseleave: (l) => v(k)
                        }, [
                          ne("div", {
                            class: ve(["dp__cell_inner", k.classData])
                          }, [
                            _.$slots.day && i(ae)(k) ? H(_.$slots, "day", {
                              key: 0,
                              day: +k.text,
                              date: k.value
                            }) : D("", !0),
                            _.$slots.day ? D("", !0) : (g(), P(ue, { key: 1 }, [
                              xe(Ce(k.text), 1)
                            ], 64)),
                            k.marker && i(ae)(k) ? (g(), P("div", {
                              key: 2,
                              class: ve(i(E)(k.marker)),
                              style: lt(k.marker.color ? { backgroundColor: k.marker.color } : {})
                            }, null, 6)) : D("", !0),
                            i(N)(k.value) ? (g(), P("div", {
                              key: 3,
                              class: "dp__marker_tooltip",
                              style: lt(O.value)
                            }, [
                              (f = k.marker) != null && f.tooltip ? (g(), P("div", {
                                key: 0,
                                class: "dp__tooltip_content",
                                onClick: C[0] || (C[0] = Xe(() => {
                                }, ["stop"]))
                              }, [
                                (g(!0), P(ue, null, De(k.marker.tooltip, (l, Q) => (g(), P("div", {
                                  key: Q,
                                  class: "dp__tooltip_text"
                                }, [
                                  _.$slots["marker-tooltip"] ? H(_.$slots, "marker-tooltip", {
                                    key: 0,
                                    tooltip: l,
                                    day: k.value
                                  }) : D("", !0),
                                  _.$slots["marker-tooltip"] ? D("", !0) : (g(), P(ue, { key: 1 }, [
                                    ne("div", {
                                      class: "dp__tooltip_mark",
                                      style: lt(l.color ? { backgroundColor: l.color } : {})
                                    }, null, 4),
                                    ne("div", null, Ce(l.text), 1)
                                  ], 64))
                                ]))), 128)),
                                sl
                              ])) : D("", !0)
                            ], 4)) : D("", !0)
                          ], 2)
                        ], 40, ol);
                      }), 128))
                    ]))), 128))
                  ], 8, al)) : D("", !0)
                ];
              }),
              _: 3
            }, 8, ["name", "css"])
          ], 10, Qr))
        ], 4)
      ], 2);
    };
  }
}), ul = ["aria-label", "aria-disabled"], tn = /* @__PURE__ */ He({
  __name: "ActionIcon",
  props: {
    ariaLabel: { type: String, default: "" },
    disabled: { type: Boolean, default: !1 }
  },
  emits: ["activate", "set-ref"],
  setup(e, { emit: n }) {
    const a = U(null);
    return Ue(() => n("set-ref", a)), (t, o) => (g(), P("div", {
      class: "dp__month_year_col_nav",
      onClick: o[0] || (o[0] = (d) => t.$emit("activate")),
      onKeydown: [
        o[1] || (o[1] = ie((d) => t.$emit("activate"), ["enter"])),
        o[2] || (o[2] = ie((d) => t.$emit("activate"), ["space"]))
      ],
      tabindex: "0",
      role: "button",
      "aria-label": e.ariaLabel,
      "aria-disabled": e.disabled,
      ref_key: "elRef",
      ref: a
    }, [
      ne("div", {
        class: ve(["dp__inner_nav", { dp__inner_nav_disabled: e.disabled }])
      }, [
        H(t.$slots, "default")
      ], 2)
    ], 40, ul));
  }
}), cl = ["onKeydown"], dl = { class: "dp__selection_grid_header" }, fl = ["aria-selected", "aria-disabled", "data-test", "onClick", "onKeydown", "onMouseover"], vl = ["aria-label", "onKeydown"], $t = /* @__PURE__ */ He({
  __name: "SelectionGrid",
  props: {
    items: { type: Array, default: () => [] },
    modelValue: { type: [String, Number], default: null },
    multiModelValue: { type: Array, default: () => [] },
    disabledValues: { type: Array, default: () => [] },
    minValue: { type: [Number, String], default: null },
    maxValue: { type: [Number, String], default: null },
    year: { type: Number, default: 0 },
    skipActive: { type: Boolean, default: !1 },
    headerRefs: { type: Array, default: () => [] },
    skipButtonRef: { type: Boolean, default: !1 },
    monthPicker: { type: Boolean, default: !1 },
    yearPicker: { type: Boolean, default: !1 },
    escClose: { type: Boolean, default: !0 },
    type: { type: String, default: null },
    arrowNavigation: { type: Boolean, default: !1 },
    autoApply: { type: Boolean, default: !1 },
    textInput: { type: Boolean, default: !1 },
    ariaLabels: { type: Object, default: () => ({}) },
    hideNavigation: { type: Array, default: () => [] }
  },
  emits: ["update:model-value", "selected", "toggle", "reset-flow"],
  setup(e, { expose: n, emit: a }) {
    const t = e, { setSelectionGrid: o, buildMultiLevelMatrix: d, setMonthPicker: p } = et(), { hideNavigationButtons: $ } = Ve(t), O = U(!1), R = U(null), F = U(null), A = U([]), c = U(), M = U(null), W = U(0), Y = U(null);
    Xn(() => {
      R.value = null;
    }), Ue(() => {
      mt().then(() => S()), B(), ee(!0);
    }), on(() => ee(!1));
    const ee = (C) => {
      var u;
      t.arrowNavigation && ((u = t.headerRefs) != null && u.length ? p(C) : o(C));
    }, B = () => {
      const C = Me(F);
      C && (t.textInput || C.focus({ preventScroll: !0 }), O.value = C.clientHeight < C.scrollHeight);
    }, E = V(
      () => ({
        dp__overlay: !0
      })
    ), N = V(() => ({
      dp__overlay_col: !0
    })), j = (C) => t.skipActive ? !1 : C.value === t.modelValue, ae = V(() => t.items.map((C) => C.filter((u) => u).map((u) => {
      var y, k, x;
      const r = t.disabledValues.some((G) => G === u.value) || v(u.value), m = (y = t.multiModelValue) != null && y.length ? (k = t.multiModelValue) == null ? void 0 : k.some(
        (G) => pe(
          G,
          it(
            t.monthPicker ? Nt(new Date(), u.value) : new Date(),
            t.monthPicker ? t.year : u.value
          )
        )
      ) : j(u);
      return {
        ...u,
        className: {
          dp__overlay_cell_active: m,
          dp__overlay_cell: !m,
          dp__overlay_cell_disabled: r,
          dp__overlay_cell_active_disabled: r && m,
          dp__overlay_cell_pad: !0,
          dp__cell_in_between: (x = t.multiModelValue) != null && x.length ? T(u.value) : !1
        }
      };
    }))), le = V(
      () => ({
        dp__button: !0,
        dp__overlay_action: !0,
        dp__over_action_scroll: O.value,
        dp__button_bottom: t.autoApply
      })
    ), ce = V(() => {
      var C, u;
      return {
        dp__overlay_container: !0,
        dp__container_flex: ((C = t.items) == null ? void 0 : C.length) <= 6,
        dp__container_block: ((u = t.items) == null ? void 0 : u.length) > 6
      };
    }), v = (C) => {
      const u = t.maxValue || t.maxValue === 0, r = t.minValue || t.minValue === 0;
      return !u && !r ? !1 : u && r ? +C > +t.maxValue || +C < +t.minValue : u ? +C > +t.maxValue : r ? +C < +t.minValue : !1;
    }, S = () => {
      const C = Me(R), u = Me(F), r = Me(M), m = Me(Y), y = r ? r.getBoundingClientRect().height : 0;
      u && (W.value = u.getBoundingClientRect().height - y), C && m && (m.scrollTop = C.offsetTop - m.offsetTop - (W.value / 2 - C.getBoundingClientRect().height) - y);
    }, I = (C) => {
      !t.disabledValues.some((u) => u === C) && !v(C) && (a("update:model-value", C), a("selected"));
    }, T = (C) => {
      const u = t.monthPicker ? t.year : C;
      return Wn(
        t.multiModelValue,
        it(
          t.monthPicker ? Nt(new Date(), c.value || 0) : new Date(),
          t.monthPicker ? u : c.value || u
        ),
        it(t.monthPicker ? Nt(new Date(), C) : new Date(), u)
      );
    }, L = () => {
      a("toggle"), a("reset-flow");
    }, Z = () => {
      t.escClose && L();
    }, J = (C, u, r, m) => {
      C && (u.value === +t.modelValue && !t.disabledValues.includes(u.value) && (R.value = C), t.arrowNavigation && (Array.isArray(A.value[r]) ? A.value[r][m] = C : A.value[r] = [C], _()));
    }, _ = () => {
      var u, r;
      const C = (u = t.headerRefs) != null && u.length ? [t.headerRefs].concat(A.value) : A.value.concat([t.skipButtonRef ? [] : [M.value]]);
      d(_e(C), (r = t.headerRefs) != null && r.length ? "monthPicker" : "selectionGrid");
    };
    return n({ focusGrid: B }), (C, u) => {
      var r;
      return g(), P("div", {
        ref_key: "gridWrapRef",
        ref: F,
        class: ve(i(E)),
        role: "dialog",
        tabindex: "0",
        onKeydown: ie(Z, ["esc"])
      }, [
        ne("div", {
          class: ve(i(ce)),
          ref_key: "containerRef",
          ref: Y,
          role: "grid",
          style: lt({ height: `${W.value}px` })
        }, [
          ne("div", dl, [
            H(C.$slots, "header")
          ]),
          C.$slots.overlay ? H(C.$slots, "overlay", { key: 0 }) : (g(!0), P(ue, { key: 1 }, De(i(ae), (m, y) => (g(), P("div", {
            class: "dp__overlay_row",
            key: y,
            role: "row"
          }, [
            (g(!0), P(ue, null, De(m, (k, x) => (g(), P("div", {
              role: "gridcell",
              class: ve(i(N)),
              key: k.value,
              "aria-selected": k.value === e.modelValue && !e.disabledValues.includes(k.value),
              "aria-disabled": k.className.dp__overlay_cell_disabled,
              ref_for: !0,
              ref: (G) => J(G, k, y, x),
              tabindex: "0",
              "data-test": k.text,
              onClick: (G) => I(k.value),
              onKeydown: [
                ie((G) => I(k.value), ["enter"]),
                ie((G) => I(k.value), ["space"])
              ],
              onMouseover: (G) => c.value = k.value
            }, [
              ne("div", {
                class: ve(k.className)
              }, [
                C.$slots.item ? H(C.$slots, "item", {
                  key: 0,
                  item: k
                }) : D("", !0),
                C.$slots.item ? D("", !0) : (g(), P(ue, { key: 1 }, [
                  xe(Ce(k.text), 1)
                ], 64))
              ], 2)
            ], 42, fl))), 128))
          ]))), 128))
        ], 6),
        C.$slots["button-icon"] ? St((g(), P("div", {
          key: 0,
          role: "button",
          "aria-label": (r = e.ariaLabels) == null ? void 0 : r.toggleOverlay,
          class: ve(i(le)),
          tabindex: "0",
          ref_key: "toggleButton",
          ref: M,
          onClick: L,
          onKeydown: ie(L, ["enter"])
        }, [
          H(C.$slots, "button-icon")
        ], 42, vl)), [
          [Ct, !i($)(e.type)]
        ]) : D("", !0)
      ], 42, cl);
    };
  }
}), ml = ["aria-label"], On = /* @__PURE__ */ He({
  __name: "RegularPicker",
  props: {
    ariaLabel: { type: String, default: "" },
    showSelectionGrid: { type: Boolean, default: !1 },
    modelValue: { type: Number, default: null },
    items: { type: Array, default: () => [] },
    disabledValues: { type: Array, default: () => [] },
    minValue: { type: Number, default: null },
    maxValue: { type: Number, default: null },
    slotName: { type: String, default: "" },
    overlaySlot: { type: String, default: "" },
    headerRefs: { type: Array, default: () => [] },
    escClose: { type: Boolean, default: !0 },
    type: { type: String, default: null },
    transitions: { type: [Object, Boolean], default: !1 },
    arrowNavigation: { type: Boolean, default: !1 },
    autoApply: { type: Boolean, default: !1 },
    textInput: { type: Boolean, default: !1 },
    ariaLabels: { type: Object, default: () => ({}) },
    hideNavigation: { type: Array, default: () => [] }
  },
  emits: ["update:model-value", "toggle", "set-ref"],
  setup(e, { emit: n }) {
    const a = e, { transitionName: t, showTransition: o } = Ft(a.transitions), d = U(null);
    return Ue(() => n("set-ref", d)), (p, $) => (g(), P(ue, null, [
      ne("div", {
        class: "dp__month_year_select",
        onClick: $[0] || ($[0] = (O) => p.$emit("toggle")),
        onKeydown: [
          $[1] || ($[1] = ie((O) => p.$emit("toggle"), ["enter"])),
          $[2] || ($[2] = ie((O) => p.$emit("toggle"), ["space"]))
        ],
        role: "button",
        "aria-label": e.ariaLabel,
        tabindex: "0",
        ref_key: "elRef",
        ref: d
      }, [
        H(p.$slots, "default")
      ], 40, ml),
      Qe(ht, {
        name: i(t)(e.showSelectionGrid),
        css: i(o)
      }, {
        default: oe(() => [
          e.showSelectionGrid ? (g(), fe($t, Se({ key: 0 }, {
            modelValue: e.modelValue,
            items: e.items,
            disabledValues: e.disabledValues,
            minValue: e.minValue,
            maxValue: e.maxValue,
            escClose: e.escClose,
            type: e.type,
            arrowNavigation: e.arrowNavigation,
            textInput: e.textInput,
            autoApply: e.autoApply,
            ariaLabels: e.ariaLabels,
            hideNavigation: e.hideNavigation
          }, {
            "header-refs": [],
            "onUpdate:modelValue": $[3] || ($[3] = (O) => p.$emit("update:model-value", O)),
            onToggle: $[4] || ($[4] = (O) => p.$emit("toggle"))
          }), Be({
            "button-icon": oe(() => [
              p.$slots["calendar-icon"] ? H(p.$slots, "calendar-icon", { key: 0 }) : D("", !0),
              p.$slots["calendar-icon"] ? D("", !0) : (g(), fe(i(Lt), { key: 1 }))
            ]),
            _: 2
          }, [
            p.$slots[e.slotName] ? {
              name: "item",
              fn: oe(({ item: O }) => [
                H(p.$slots, e.slotName, { item: O })
              ]),
              key: "0"
            } : void 0,
            p.$slots[e.overlaySlot] ? {
              name: "overlay",
              fn: oe(() => [
                H(p.$slots, e.overlaySlot)
              ]),
              key: "1"
            } : void 0,
            p.$slots[`${e.overlaySlot}-header`] ? {
              name: "header",
              fn: oe(() => [
                H(p.$slots, `${e.overlaySlot}-header`)
              ]),
              key: "2"
            } : void 0
          ]), 1040)) : D("", !0)
        ]),
        _: 3
      }, 8, ["name", "css"])
    ], 64));
  }
}), yl = { class: "dp__month_year_row" }, hl = { class: "dp__month_year_wrap" }, gl = { class: "dp__month_picker_header" }, pl = ["aria-label"], kl = ["aria-label"], wl = ["aria-label"], bl = /* @__PURE__ */ He({
  __name: "MonthYearPicker",
  props: {
    month: { type: Number, default: 0 },
    year: { type: Number, default: 0 },
    instance: { type: Number, default: 0 },
    years: { type: Array, default: () => [] },
    months: { type: Array, default: () => [] },
    internalModelValue: { type: [Date, Array], default: null },
    ...tt
  },
  emits: ["update-month-year", "month-year-select", "mount", "reset-flow", "overlay-closed"],
  setup(e, { expose: n, emit: a }) {
    const t = e, { defaults: o } = Ve(t), { transitionName: d, showTransition: p } = Ft(o.value.transitions), { buildMatrix: $ } = et(), { handleMonthYearChange: O, isDisabled: R, updateMonthYear: F } = Lr(t, a), A = U(!1), c = U(!1), M = U([null, null, null, null]), W = U(null), Y = U(null), ee = U(null);
    Ue(() => {
      a("mount");
    });
    const B = (f) => ({
      get: () => t[f],
      set: (l) => {
        const Q = f === "month" ? "year" : "month";
        a("update-month-year", { [f]: l, [Q]: t[Q] }), a("month-year-select", f === "year"), f === "month" ? y(!0) : k(!0);
      }
    }), E = V(B("month")), N = V(B("year")), j = (f) => {
      const l = ge(b(f));
      return t.year === l;
    }, ae = V(() => t.monthPicker ? Array.isArray(t.disabledDates) ? t.disabledDates.map((f) => b(f)).filter((f) => j(f)).map((f) => he(f)) : [] : []), le = V(() => (f) => {
      const l = f === "month";
      return {
        showSelectionGrid: (l ? A : c).value,
        items: (l ? C : u).value,
        disabledValues: o.value.filters[l ? "months" : "years"].concat(ae.value),
        minValue: (l ? I : v).value,
        maxValue: (l ? T : S).value,
        headerRefs: l && t.monthPicker ? [W.value, Y.value, ee.value] : [],
        escClose: t.escClose,
        transitions: o.value.transitions,
        ariaLabels: o.value.ariaLabels,
        textInput: t.textInput,
        autoApply: t.autoApply,
        arrowNavigation: t.arrowNavigation,
        hideNavigation: t.hideNavigation
      };
    }), ce = V(() => (f) => ({
      month: t.month,
      year: t.year,
      items: f === "month" ? t.months : t.years,
      instance: t.instance,
      updateMonthYear: F,
      toggle: f === "month" ? y : k
    })), v = V(() => t.minDate ? ge(b(t.minDate)) : null), S = V(() => t.maxDate ? ge(b(t.maxDate)) : null), I = V(() => {
      if (t.minDate && v.value) {
        if (v.value > t.year)
          return 12;
        if (v.value === t.year)
          return he(b(t.minDate));
      }
      return null;
    }), T = V(() => t.maxDate && S.value ? S.value < t.year ? -1 : S.value === t.year ? he(b(t.maxDate)) : null : null), L = V(() => t.range && t.internalModelValue && (t.monthPicker || t.yearPicker) ? t.internalModelValue : []), Z = (f) => f.reverse(), J = (f, l = !1) => {
      const Q = [], we = (be) => l ? Z(be) : be;
      for (let be = 0; be < f.length; be += 3) {
        const We = [f[be], f[be + 1], f[be + 2]];
        Q.push(we(We));
      }
      return l ? Q.reverse() : Q;
    }, _ = V(() => {
      const f = t.months.find((l) => l.value === t.month);
      return f || { text: "", value: 0 };
    }), C = V(() => J(t.months)), u = V(() => J(t.years, t.reverseYears)), r = V(() => o.value.multiCalendars ? t.multiCalendarsSolo ? !0 : t.instance === 0 : !0), m = V(() => o.value.multiCalendars ? t.multiCalendarsSolo ? !0 : t.instance === o.value.multiCalendars - 1 : !0), y = (f = !1) => {
      x(f), A.value = !A.value, A.value || a("overlay-closed");
    }, k = (f = !1) => {
      x(f), c.value = !c.value, c.value || a("overlay-closed");
    }, x = (f) => {
      f || a("reset-flow");
    }, G = (f = !1) => {
      R.value(f) || a("update-month-year", {
        year: f ? t.year + 1 : t.year - 1,
        month: t.month,
        fromNav: !0
      });
    }, de = (f, l) => {
      t.arrowNavigation && (M.value[l] = Me(f), $(M.value, "monthYear"));
    };
    return n({
      toggleMonthPicker: y,
      toggleYearPicker: k
    }), (f, l) => {
      var Q, we, be, We, je;
      return g(), P("div", yl, [
        f.$slots["month-year"] ? H(f.$slots, "month-year", Ye(Se({ key: 0 }, { month: e.month, year: e.year, months: e.months, years: e.years, updateMonthYear: i(F), handleMonthYearChange: i(O), instance: e.instance }))) : (g(), P(ue, { key: 1 }, [
          !f.monthPicker && !f.yearPicker ? (g(), P(ue, { key: 0 }, [
            i(r) && !f.vertical ? (g(), fe(tn, {
              key: 0,
              "aria-label": (Q = i(o).ariaLabels) == null ? void 0 : Q.prevMonth,
              disabled: i(R)(!1),
              onActivate: l[0] || (l[0] = (re) => i(O)(!1)),
              onSetRef: l[1] || (l[1] = (re) => de(re, 0))
            }, {
              default: oe(() => [
                f.$slots["arrow-left"] ? H(f.$slots, "arrow-left", { key: 0 }) : D("", !0),
                f.$slots["arrow-left"] ? D("", !0) : (g(), fe(i(kn), { key: 1 }))
              ]),
              _: 3
            }, 8, ["aria-label", "disabled"])) : D("", !0),
            ne("div", hl, [
              Qe(On, Se({
                type: "month",
                "slot-name": "month-overlay-val",
                "overlay-slot": "overlay-month",
                "aria-label": (we = i(o).ariaLabels) == null ? void 0 : we.openMonthsOverlay,
                modelValue: i(E),
                "onUpdate:modelValue": l[2] || (l[2] = (re) => rt(E) ? E.value = re : null)
              }, i(le)("month"), {
                onToggle: y,
                onSetRef: l[3] || (l[3] = (re) => de(re, 1))
              }), Be({
                default: oe(() => [
                  f.$slots.month ? H(f.$slots, "month", Ye(Se({ key: 0 }, i(_)))) : D("", !0),
                  f.$slots.month ? D("", !0) : (g(), P(ue, { key: 1 }, [
                    xe(Ce(i(_).text), 1)
                  ], 64))
                ]),
                _: 2
              }, [
                f.$slots["calendar-icon"] ? {
                  name: "calendar-icon",
                  fn: oe(() => [
                    H(f.$slots, "calendar-icon")
                  ]),
                  key: "0"
                } : void 0,
                f.$slots["month-overlay-value"] ? {
                  name: "month-overlay-val",
                  fn: oe(({ item: re }) => [
                    H(f.$slots, "month-overlay-value", {
                      text: re.text,
                      value: re.value
                    })
                  ]),
                  key: "1"
                } : void 0,
                f.$slots["month-overlay"] ? {
                  name: "overlay-month",
                  fn: oe(() => [
                    H(f.$slots, "month-overlay", Ye(qe(i(ce)("month"))))
                  ]),
                  key: "2"
                } : void 0,
                f.$slots["month-overlay-header"] ? {
                  name: "overlay-month-header",
                  fn: oe(() => [
                    H(f.$slots, "month-overlay-header", { toggle: y })
                  ]),
                  key: "3"
                } : void 0
              ]), 1040, ["aria-label", "modelValue"]),
              Qe(On, Se({
                type: "year",
                "slot-name": "year-overlay-val",
                "overlay-slot": "overlay-year",
                "aria-label": (be = i(o).ariaLabels) == null ? void 0 : be.openYearsOverlay,
                modelValue: i(N),
                "onUpdate:modelValue": l[4] || (l[4] = (re) => rt(N) ? N.value = re : null)
              }, i(le)("year"), {
                onToggle: k,
                onSetRef: l[5] || (l[5] = (re) => de(re, 2))
              }), Be({
                default: oe(() => [
                  f.$slots.year ? H(f.$slots, "year", {
                    key: 0,
                    year: e.year
                  }) : D("", !0),
                  f.$slots.year ? D("", !0) : (g(), P(ue, { key: 1 }, [
                    xe(Ce(e.year), 1)
                  ], 64))
                ]),
                _: 2
              }, [
                f.$slots["calendar-icon"] ? {
                  name: "calendar-icon",
                  fn: oe(() => [
                    H(f.$slots, "calendar-icon")
                  ]),
                  key: "0"
                } : void 0,
                f.$slots["year-overlay-value"] ? {
                  name: "year-overlay-val",
                  fn: oe(({ item: re }) => [
                    H(f.$slots, "year-overlay-value", {
                      text: re.text,
                      value: re.value
                    })
                  ]),
                  key: "1"
                } : void 0,
                f.$slots["year-overlay"] ? {
                  name: "overlay-year",
                  fn: oe(() => [
                    H(f.$slots, "year-overlay", Ye(qe(i(ce)("year"))))
                  ]),
                  key: "2"
                } : void 0,
                f.$slots["year-overlay-header"] ? {
                  name: "overlay-year-header",
                  fn: oe(() => [
                    H(f.$slots, "year-overlay-header", { toggle: k })
                  ]),
                  key: "3"
                } : void 0
              ]), 1040, ["aria-label", "modelValue"])
            ]),
            i(r) && f.vertical ? (g(), fe(tn, {
              key: 1,
              "aria-label": (We = i(o).ariaLabels) == null ? void 0 : We.prevMonth,
              disabled: i(R)(!1),
              onActivate: l[6] || (l[6] = (re) => i(O)(!1))
            }, {
              default: oe(() => [
                f.$slots["arrow-up"] ? H(f.$slots, "arrow-up", { key: 0 }) : D("", !0),
                f.$slots["arrow-up"] ? D("", !0) : (g(), fe(i(Un), { key: 1 }))
              ]),
              _: 3
            }, 8, ["aria-label", "disabled"])) : D("", !0),
            i(m) ? (g(), fe(tn, {
              key: 2,
              ref: "rightIcon",
              disabled: i(R)(!0),
              "aria-label": (je = i(o).ariaLabels) == null ? void 0 : je.nextMonth,
              onActivate: l[7] || (l[7] = (re) => i(O)(!0)),
              onSetRef: l[8] || (l[8] = (re) => de(re, 3))
            }, {
              default: oe(() => [
                f.$slots[f.vertical ? "arrow-down" : "arrow-right"] ? H(f.$slots, f.vertical ? "arrow-down" : "arrow-right", { key: 0 }) : D("", !0),
                f.$slots[f.vertical ? "arrow-down" : "arrow-right"] ? D("", !0) : (g(), fe(qn(f.vertical ? i(Hn) : i(wn)), { key: 1 }))
              ]),
              _: 3
            }, 8, ["disabled", "aria-label"])) : D("", !0)
          ], 64)) : D("", !0),
          f.monthPicker ? (g(), fe($t, Se({ key: 1 }, i(le)("month"), {
            "skip-active": f.range,
            year: e.year,
            "multi-model-value": i(L),
            "month-picker": "",
            modelValue: i(E),
            "onUpdate:modelValue": l[17] || (l[17] = (re) => rt(E) ? E.value = re : null),
            onToggle: y,
            onSelected: l[18] || (l[18] = (re) => f.$emit("overlay-closed"))
          }), Be({
            header: oe(() => {
              var re, Je, ze;
              return [
                ne("div", gl, [
                  ne("div", {
                    class: "dp__month_year_col_nav",
                    tabindex: "0",
                    ref_key: "mpPrevIconRef",
                    ref: W,
                    onClick: l[9] || (l[9] = (X) => G(!1)),
                    onKeydown: l[10] || (l[10] = ie((X) => G(!1), ["enter"]))
                  }, [
                    ne("div", {
                      class: ve(["dp__inner_nav", { dp__inner_nav_disabled: i(R)(!1) }]),
                      role: "button",
                      "aria-label": (re = i(o).ariaLabels) == null ? void 0 : re.prevMonth
                    }, [
                      f.$slots["arrow-left"] ? H(f.$slots, "arrow-left", { key: 0 }) : D("", !0),
                      f.$slots["arrow-left"] ? D("", !0) : (g(), fe(i(kn), { key: 1 }))
                    ], 10, pl)
                  ], 544),
                  ne("div", {
                    class: "dp__pointer",
                    role: "button",
                    ref_key: "mpYearButtonRef",
                    ref: Y,
                    "aria-label": (Je = i(o).ariaLabels) == null ? void 0 : Je.openYearsOverlay,
                    tabindex: "0",
                    onClick: l[11] || (l[11] = () => k(!1)),
                    onKeydown: l[12] || (l[12] = ie(() => k(!1), ["enter"]))
                  }, [
                    f.$slots.year ? H(f.$slots, "year", {
                      key: 0,
                      year: e.year
                    }) : D("", !0),
                    f.$slots.year ? D("", !0) : (g(), P(ue, { key: 1 }, [
                      xe(Ce(e.year), 1)
                    ], 64))
                  ], 40, kl),
                  ne("div", {
                    class: "dp__month_year_col_nav",
                    tabindex: "0",
                    ref_key: "mpNextIconRef",
                    ref: ee,
                    onClick: l[13] || (l[13] = (X) => G(!0)),
                    onKeydown: l[14] || (l[14] = ie((X) => G(!0), ["enter"]))
                  }, [
                    ne("div", {
                      class: ve(["dp__inner_nav", { dp__inner_nav_disabled: i(R)(!0) }]),
                      role: "button",
                      "aria-label": (ze = i(o).ariaLabels) == null ? void 0 : ze.nextMonth
                    }, [
                      f.$slots["arrow-right"] ? H(f.$slots, "arrow-right", { key: 0 }) : D("", !0),
                      f.$slots["arrow-right"] ? D("", !0) : (g(), fe(i(wn), { key: 1 }))
                    ], 10, wl)
                  ], 544)
                ]),
                Qe(ht, {
                  name: i(d)(c.value),
                  css: i(p)
                }, {
                  default: oe(() => [
                    c.value ? (g(), fe($t, Se({ key: 0 }, i(le)("year"), {
                      modelValue: i(N),
                      "onUpdate:modelValue": l[15] || (l[15] = (X) => rt(N) ? N.value = X : null),
                      onToggle: k,
                      onSelected: l[16] || (l[16] = (X) => f.$emit("overlay-closed"))
                    }), Be({
                      "button-icon": oe(() => [
                        f.$slots["calendar-icon"] ? H(f.$slots, "calendar-icon", { key: 0 }) : D("", !0),
                        f.$slots["calendar-icon"] ? D("", !0) : (g(), fe(i(Lt), { key: 1 }))
                      ]),
                      _: 2
                    }, [
                      f.$slots["year-overlay-value"] ? {
                        name: "item",
                        fn: oe(({ item: X }) => [
                          H(f.$slots, "year-overlay-value", {
                            text: X.text,
                            value: X.value
                          })
                        ]),
                        key: "0"
                      } : void 0
                    ]), 1040, ["modelValue"])) : D("", !0)
                  ]),
                  _: 3
                }, 8, ["name", "css"])
              ];
            }),
            _: 2
          }, [
            f.$slots["month-overlay-value"] ? {
              name: "item",
              fn: oe(({ item: re }) => [
                H(f.$slots, "month-overlay-value", {
                  text: re.text,
                  value: re.value
                })
              ]),
              key: "0"
            } : void 0
          ]), 1040, ["skip-active", "year", "multi-model-value", "modelValue"])) : D("", !0),
          f.yearPicker ? (g(), fe($t, Se({ key: 2 }, i(le)("year"), {
            modelValue: i(N),
            "onUpdate:modelValue": l[19] || (l[19] = (re) => rt(N) ? N.value = re : null),
            "multi-model-value": i(L),
            "skip-active": f.range,
            "skip-button-ref": "",
            "year-picker": "",
            onToggle: k,
            onSelected: l[20] || (l[20] = (re) => f.$emit("overlay-closed"))
          }), Be({ _: 2 }, [
            f.$slots["year-overlay-value"] ? {
              name: "item",
              fn: oe(({ item: re }) => [
                H(f.$slots, "year-overlay-value", {
                  text: re.text,
                  value: re.value
                })
              ]),
              key: "0"
            } : void 0
          ]), 1040, ["modelValue", "multi-model-value", "skip-active"])) : D("", !0)
        ], 64))
      ]);
    };
  }
}), $l = {
  key: 0,
  class: "dp__time_input"
}, Dl = ["aria-label", "onKeydown", "onClick"], Ml = ["aria-label", "data-test", "onKeydown", "onClick"], _l = ["aria-label", "onKeydown", "onClick"], Tl = { key: 0 }, Al = ["aria-label", "onKeydown"], Sl = /* @__PURE__ */ He({
  __name: "TimeInput",
  props: {
    hours: { type: Number, default: 0 },
    minutes: { type: Number, default: 0 },
    seconds: { type: Number, default: 0 },
    closeTimePickerBtn: { type: Object, default: null },
    order: { type: Number, default: 0 },
    ...tt
  },
  emits: [
    "set-hours",
    "set-minutes",
    "update:hours",
    "update:minutes",
    "update:seconds",
    "reset-flow",
    "mounted",
    "overlay-closed"
  ],
  setup(e, { expose: n, emit: a }) {
    const t = e, { setTimePickerElements: o, setTimePickerBackRef: d } = et(), { defaults: p } = Ve(t), { transitionName: $, showTransition: O } = Ft(p.value.transitions), R = Dt({
      hours: !1,
      minutes: !1,
      seconds: !1
    }), F = U("AM"), A = U(null), c = U([]);
    Ue(() => {
      a("mounted");
    });
    const M = V(() => (u) => !!(t.maxTime && t.maxTime[u] && t.maxTime[u] < t[u] + +t[`${u}Increment`])), W = V(() => (u) => !!(t.minTime && t.minTime[u] && t.minTime[u] > t[u] - +t[`${u}Increment`])), Y = (u, r) => Ln(Re(b(), u), r), ee = (u, r) => ua(Re(b(), u), r), B = V(
      () => ({
        dp__time_col: !0,
        dp__time_col_reg: !t.enableSeconds && t.is24,
        dp__time_col_reg_with_button: !t.enableSeconds && !t.is24,
        dp__time_col_sec: t.enableSeconds && t.is24,
        dp__time_col_sec_with_button: t.enableSeconds && !t.is24
      })
    ), E = V(() => {
      const u = [{ type: "hours" }, { type: "", separator: !0 }, { type: "minutes" }];
      return t.enableSeconds ? u.concat([{ type: "", separator: !0 }, { type: "seconds" }]) : u;
    }), N = V(() => E.value.filter((u) => !u.separator)), j = V(() => (u) => {
      if (u === "hours") {
        const r = L(t.hours);
        return { text: r < 10 ? `0${r}` : `${r}`, value: r };
      }
      return { text: t[u] < 10 ? `0${t[u]}` : `${t[u]}`, value: t[u] };
    }), ae = (u) => {
      const r = t.is24 ? 24 : 12, m = u === "hours" ? r : 60, y = +t[`${u}GridIncrement`], k = u === "hours" && !t.is24 ? y : 0, x = [];
      for (let G = k; G < m; G += y)
        x.push({ value: G, text: G < 10 ? `0${G}` : `${G}` });
      return u === "hours" && !t.is24 && x.push({ value: 0, text: "12" }), _r(x);
    }, le = (u, r) => {
      const m = t.minTime && t.minTime[r], y = t.maxTime && t.maxTime[r];
      return m && y ? u < m || u > y : m ? u < m : y ? u > y : !1;
    }, ce = V(() => (u) => ae(u).flat().map((m) => m.value).filter((m) => le(m, u))), v = (u) => t[`no${u[0].toUpperCase() + u.slice(1)}Overlay`], S = (u) => {
      v(u) || (R[u] = !R[u], R[u] || a("overlay-closed"));
    }, I = (u) => u === "hours" ? Ge : u === "minutes" ? Ze : yt, T = (u, r = !0) => {
      const m = r ? Y : ee;
      (r ? M.value(u) : W.value(u)) || a(
        `update:${u}`,
        I(u)(m({ [u]: +t[u] }, { [u]: +t[`${u}Increment`] }))
      );
    }, L = (u) => t.is24 ? u : (u >= 12 ? F.value = "PM" : F.value = "AM", Cr(u)), Z = () => {
      F.value === "PM" ? (F.value = "AM", a("update:hours", t.hours - 12)) : (F.value = "PM", a("update:hours", t.hours + 12));
    }, J = (u) => {
      R[u] = !0;
    }, _ = (u, r, m) => {
      if (u && t.arrowNavigation) {
        Array.isArray(c.value[r]) ? c.value[r][m] = u : c.value[r] = [u];
        const y = c.value.reduce(
          (k, x) => x.map((G, de) => [...k[de] || [], x[de]]),
          []
        );
        d(t.closeTimePickerBtn), A.value && (y[1] = y[1].concat(A.value)), o(y, t.order);
      }
    }, C = (u, r) => u === "hours" && !t.is24 ? a(`update:${u}`, F.value === "PM" ? r + 12 : r) : a(`update:${u}`, r);
    return n({ openChildCmp: J }), (u, r) => {
      var m;
      return u.disabled ? D("", !0) : (g(), P("div", $l, [
        (g(!0), P(ue, null, De(i(E), (y, k) => {
          var x, G, de;
          return g(), P("div", {
            key: k,
            class: ve(i(B))
          }, [
            y.separator ? (g(), P(ue, { key: 0 }, [
              xe(" : ")
            ], 64)) : (g(), P(ue, { key: 1 }, [
              ne("div", {
                class: ve({
                  dp__inc_dec_button: !0,
                  dp__inc_dec_button_disabled: i(M)(y.type)
                }),
                role: "button",
                "data-test": "time-inc-btn",
                "aria-label": (x = i(p).ariaLabels) == null ? void 0 : x.incrementValue(y.type),
                tabindex: "0",
                onKeydown: [
                  ie((f) => T(y.type), ["enter"]),
                  ie((f) => T(y.type), ["space"])
                ],
                onClick: (f) => T(y.type),
                ref_for: !0,
                ref: (f) => _(f, k, 0)
              }, [
                u.$slots["arrow-up"] ? H(u.$slots, "arrow-up", { key: 0 }) : D("", !0),
                u.$slots["arrow-up"] ? D("", !0) : (g(), fe(i(Un), { key: 1 }))
              ], 42, Dl),
              ne("div", {
                role: "button",
                "aria-label": (G = i(p).ariaLabels) == null ? void 0 : G.openTpOverlay(y.type),
                class: ve(v(y.type) ? "" : "dp__time_display"),
                tabindex: "0",
                "data-test": `${y.type}-toggle-overlay-btn`,
                onKeydown: [
                  ie((f) => S(y.type), ["enter"]),
                  ie((f) => S(y.type), ["space"])
                ],
                onClick: (f) => S(y.type),
                ref_for: !0,
                ref: (f) => _(f, k, 1)
              }, [
                u.$slots[y.type] ? H(u.$slots, y.type, {
                  key: 0,
                  text: i(j)(y.type).text,
                  value: i(j)(y.type).value
                }) : D("", !0),
                u.$slots[y.type] ? D("", !0) : (g(), P(ue, { key: 1 }, [
                  xe(Ce(i(j)(y.type).text), 1)
                ], 64))
              ], 42, Ml),
              ne("div", {
                class: ve({
                  dp__inc_dec_button: !0,
                  dp__inc_dec_button_disabled: i(W)(y.type)
                }),
                role: "button",
                "data-test": "time-dec-btn",
                "aria-label": (de = i(p).ariaLabels) == null ? void 0 : de.decrementValue(y.type),
                tabindex: "0",
                onKeydown: [
                  ie((f) => T(y.type, !1), ["enter"]),
                  ie((f) => T(y.type, !1), ["space"])
                ],
                onClick: (f) => T(y.type, !1),
                ref_for: !0,
                ref: (f) => _(f, k, 2)
              }, [
                u.$slots["arrow-down"] ? H(u.$slots, "arrow-down", { key: 0 }) : D("", !0),
                u.$slots["arrow-down"] ? D("", !0) : (g(), fe(i(Hn), { key: 1 }))
              ], 42, _l)
            ], 64))
          ], 2);
        }), 128)),
        u.is24 ? D("", !0) : (g(), P("div", Tl, [
          u.$slots["am-pm-button"] ? H(u.$slots, "am-pm-button", {
            key: 0,
            toggle: Z,
            value: F.value
          }) : D("", !0),
          u.$slots["am-pm-button"] ? D("", !0) : (g(), P("button", {
            key: 1,
            ref_key: "amPmButton",
            ref: A,
            type: "button",
            class: "dp__pm_am_button",
            role: "button",
            "aria-label": (m = i(p).ariaLabels) == null ? void 0 : m.amPmButton,
            tabindex: "0",
            onClick: Z,
            onKeydown: [
              ie(Xe(Z, ["prevent"]), ["enter"]),
              ie(Xe(Z, ["prevent"]), ["space"])
            ]
          }, Ce(F.value), 41, Al))
        ])),
        (g(!0), P(ue, null, De(i(N), (y, k) => (g(), fe(ht, {
          key: k,
          name: i($)(R[y.type]),
          css: i(O)
        }, {
          default: oe(() => [
            R[y.type] ? (g(), fe($t, {
              key: 0,
              items: ae(y.type),
              "disabled-values": i(p).filters.times[y.type].concat(i(ce)(y.type)),
              "esc-close": u.escClose,
              "aria-labels": i(p).ariaLabels,
              "hide-navigation": u.hideNavigation,
              "onUpdate:modelValue": (x) => C(y.type, x),
              onSelected: (x) => S(y.type),
              onToggle: (x) => S(y.type),
              onResetFlow: r[0] || (r[0] = (x) => u.$emit("reset-flow")),
              type: y.type
            }, Be({
              "button-icon": oe(() => [
                u.$slots["clock-icon"] ? H(u.$slots, "clock-icon", { key: 0 }) : D("", !0),
                u.$slots["clock-icon"] ? D("", !0) : (g(), fe(i(Fn), { key: 1 }))
              ]),
              _: 2
            }, [
              u.$slots[`${y.type}-overlay-value`] ? {
                name: "item",
                fn: oe(({ item: x }) => [
                  H(u.$slots, `${y.type}-overlay-value`, {
                    text: x.text,
                    value: x.value
                  })
                ]),
                key: "0"
              } : void 0
            ]), 1032, ["items", "disabled-values", "esc-close", "aria-labels", "hide-navigation", "onUpdate:modelValue", "onSelected", "onToggle", "type"])) : D("", !0)
          ]),
          _: 2
        }, 1032, ["name", "css"]))), 128))
      ]));
    };
  }
}), Cl = ["aria-label"], Pl = { class: "dp__overlay_container dp__container_flex dp__time_picker_overlay_container" }, Nl = {
  key: 1,
  class: "dp__overlay_row"
}, Rl = ["aria-label"], Il = /* @__PURE__ */ He({
  __name: "TimePicker",
  props: {
    hours: { type: [Number, Array], default: 0 },
    minutes: { type: [Number, Array], default: 0 },
    seconds: { type: [Number, Array], default: 0 },
    internalModelValue: { type: [Date, Array], default: null },
    ...tt
  },
  emits: [
    "update:hours",
    "update:minutes",
    "update:seconds",
    "mount",
    "reset-flow",
    "overlay-closed"
  ],
  setup(e, { expose: n, emit: a }) {
    const t = e, { buildMatrix: o, setTimePicker: d } = et(), p = sn(), { hideNavigationButtons: $, defaults: O } = Ve(t), { transitionName: R, showTransition: F } = Ft(O.value.transitions), A = U(null), c = U(null), M = U([]), W = U(null);
    Ue(() => {
      a("mount"), !t.timePicker && t.arrowNavigation ? o([Me(A.value)], "time") : d(!0, t.timePicker);
    });
    const Y = V(() => t.range && t.modelAuto ? jn(t.internalModelValue) : !0), ee = U(!1), B = (T) => ({
      hours: Array.isArray(t.hours) ? t.hours[T] : t.hours,
      minutes: Array.isArray(t.minutes) ? t.minutes[T] : t.minutes,
      seconds: Array.isArray(t.seconds) ? t.seconds[T] : t.seconds
    }), E = V(() => {
      const T = [];
      if (t.range)
        for (let L = 0; L < 2; L++)
          T.push(B(L));
      else
        T.push(B(0));
      return T;
    }), N = (T, L = !1, Z = "") => {
      L || a("reset-flow"), ee.value = T, t.arrowNavigation && (d(T), T || a("overlay-closed")), mt(() => {
        Z !== "" && M.value[0] && M.value[0].openChildCmp(Z);
      });
    }, j = V(() => ({
      dp__button: !0,
      dp__button_bottom: t.autoApply
    })), ae = st(p, "timePicker"), le = (T, L, Z) => t.range ? L === 0 ? [T, E.value[1][Z]] : [E.value[0][Z], T] : T, ce = (T) => {
      a("update:hours", T);
    }, v = (T) => {
      a("update:minutes", T);
    }, S = (T) => {
      a("update:seconds", T);
    }, I = () => {
      W.value && t.arrowNavigation && W.value.focus({ preventScroll: !0 });
    };
    return n({ toggleTimePicker: N }), (T, L) => {
      var Z;
      return g(), P("div", null, [
        T.timePicker ? D("", !0) : St((g(), P("div", {
          key: 0,
          class: ve(i(j)),
          role: "button",
          "aria-label": (Z = i(O).ariaLabels) == null ? void 0 : Z.openTimePicker,
          tabindex: "0",
          "data-test": "open-time-picker-btn",
          ref_key: "openTimePickerBtn",
          ref: A,
          onKeydown: [
            L[0] || (L[0] = ie((J) => N(!0), ["enter"])),
            L[1] || (L[1] = ie((J) => N(!0), ["space"]))
          ],
          onClick: L[2] || (L[2] = (J) => N(!0))
        }, [
          T.$slots["clock-icon"] ? H(T.$slots, "clock-icon", { key: 0 }) : D("", !0),
          T.$slots["clock-icon"] ? D("", !0) : (g(), fe(i(Fn), { key: 1 }))
        ], 42, Cl)), [
          [Ct, !i($)("time")]
        ]),
        Qe(ht, {
          name: i(R)(ee.value),
          css: i(F)
        }, {
          default: oe(() => {
            var J;
            return [
              ee.value || T.timePicker ? (g(), P("div", {
                key: 0,
                class: "dp__overlay",
                ref_key: "overlayRef",
                ref: W,
                tabindex: "0"
              }, [
                ne("div", Pl, [
                  T.$slots["time-picker-overlay"] ? H(T.$slots, "time-picker-overlay", {
                    key: 0,
                    hours: e.hours,
                    minutes: e.minutes,
                    seconds: e.seconds,
                    setHours: ce,
                    setMinutes: v,
                    setSeconds: S
                  }) : D("", !0),
                  T.$slots["time-picker-overlay"] ? D("", !0) : (g(), P("div", Nl, [
                    (g(!0), P(ue, null, De(i(E), (_, C) => St((g(), fe(Sl, Se({ key: C }, {
                      ...T.$props,
                      order: C,
                      hours: _.hours,
                      minutes: _.minutes,
                      seconds: _.seconds,
                      closeTimePickerBtn: c.value,
                      disabled: C === 0 ? T.fixedStart : T.fixedEnd
                    }, {
                      ref_for: !0,
                      ref_key: "timeInputRefs",
                      ref: M,
                      "onUpdate:hours": (u) => ce(le(u, C, "hours")),
                      "onUpdate:minutes": (u) => v(le(u, C, "minutes")),
                      "onUpdate:seconds": (u) => S(le(u, C, "seconds")),
                      onMounted: I,
                      onOverlayClosed: I
                    }), Be({ _: 2 }, [
                      De(i(ae), (u, r) => ({
                        name: u,
                        fn: oe((m) => [
                          H(T.$slots, u, Ye(qe(m)))
                        ])
                      }))
                    ]), 1040, ["onUpdate:hours", "onUpdate:minutes", "onUpdate:seconds"])), [
                      [Ct, C === 0 ? !0 : i(Y)]
                    ])), 128))
                  ])),
                  T.timePicker ? D("", !0) : St((g(), P("div", {
                    key: 2,
                    ref_key: "closeTimePickerBtn",
                    ref: c,
                    class: ve(i(j)),
                    role: "button",
                    "aria-label": (J = i(O).ariaLabels) == null ? void 0 : J.closeTimePicker,
                    tabindex: "0",
                    onKeydown: [
                      L[3] || (L[3] = ie((_) => N(!1), ["enter"])),
                      L[4] || (L[4] = ie((_) => N(!1), ["space"]))
                    ],
                    onClick: L[5] || (L[5] = (_) => N(!1))
                  }, [
                    T.$slots["calendar-icon"] ? H(T.$slots, "calendar-icon", { key: 0 }) : D("", !0),
                    T.$slots["calendar-icon"] ? D("", !0) : (g(), fe(i(Lt), { key: 1 }))
                  ], 42, Rl)), [
                    [Ct, !i($)("time")]
                  ])
                ])
              ], 512)) : D("", !0)
            ];
          }),
          _: 3
        }, 8, ["name", "css"])
      ]);
    };
  }
}), Ol = (e, n) => {
  const { isDisabled: a, matchDate: t, getWeekFromDate: o } = Ve(n), d = U(null), p = U(b()), $ = (r) => {
    !r.current && n.hideOffsetDates || (d.value = r.value);
  }, O = () => {
    d.value = null;
  }, R = (r) => Array.isArray(e.value) && n.range && e.value[0] && d.value ? r ? Oe(d.value, e.value[0]) : Pe(d.value, e.value[0]) : !0, F = (r, m) => {
    const y = () => e.value ? m ? e.value[0] || null : e.value[1] : null, k = e.value && Array.isArray(e.value) ? y() : null;
    return pe(b(r.value), k);
  }, A = (r) => {
    const m = Array.isArray(e.value) ? e.value[0] : null;
    return r ? !Pe(d.value || null, m) : !0;
  }, c = (r, m = !0) => (n.range || n.weekPicker) && Array.isArray(e.value) ? n.hideOffsetDates && !r.current ? !1 : pe(b(r.value), e.value[m ? 0 : 1]) : n.range ? F(r, m) && A(m) || pe(r.value, Array.isArray(e.value) ? e.value[0] : null) && R(m) : !1, M = (r, m, y) => Array.isArray(e.value) && e.value[0] && e.value.length === 1 ? r ? !1 : y ? Oe(e.value[0], m.value) : Pe(e.value[0], m.value) : !1, W = (r) => !e.value || n.hideOffsetDates && !r.current ? !1 : n.range ? n.modelAuto && Array.isArray(e.value) ? pe(r.value, e.value[0] ? e.value[0] : p.value) : !1 : n.multiDates && Array.isArray(e.value) ? e.value.some((m) => pe(m, r.value)) : pe(r.value, e.value ? e.value : p.value), Y = (r) => {
    if (n.autoRange || n.weekPicker) {
      if (d.value) {
        if (n.hideOffsetDates && !r.current)
          return !1;
        const m = vt(d.value, +n.autoRange), y = o(b(d.value));
        return n.weekPicker ? pe(y[1], b(r.value)) : pe(m, b(r.value));
      }
      return !1;
    }
    return !1;
  }, ee = (r) => {
    if (n.autoRange || n.weekPicker) {
      if (d.value) {
        const m = vt(d.value, +n.autoRange);
        if (n.hideOffsetDates && !r.current)
          return !1;
        const y = o(b(d.value));
        return n.weekPicker ? Oe(r.value, y[0]) && Pe(r.value, y[1]) : Oe(r.value, d.value) && Pe(r.value, m);
      }
      return !1;
    }
    return !1;
  }, B = (r) => {
    if (n.autoRange || n.weekPicker) {
      if (d.value) {
        if (n.hideOffsetDates && !r.current)
          return !1;
        const m = o(b(d.value));
        return n.weekPicker ? pe(m[0], r.value) : pe(d.value, r.value);
      }
      return !1;
    }
    return !1;
  }, E = (r) => Wn(e.value, d.value, r.value), N = () => n.modelAuto && Array.isArray(n.internalModelValue) ? !!n.internalModelValue[0] : !1, j = () => n.modelAuto ? jn(n.internalModelValue) : !0, ae = (r) => {
    if (Array.isArray(e.value) && e.value.length || n.weekPicker)
      return !1;
    const m = n.range ? !c(r) && !c(r, !1) : !0;
    return !a(r.value) && !W(r) && !(!r.current && n.hideOffsetDates) && m;
  }, le = (r) => n.range ? n.modelAuto ? N() && W(r) : !1 : W(r), ce = (r) => n.highlight ? t(r.value, n.highlight) : !1, v = (r) => a(r.value) && n.highlightDisabledDays === !1, S = (r) => n.highlightWeekDays && n.highlightWeekDays.includes(r.value.getDay()), I = (r) => (n.range || n.weekPicker) && (!(n.multiCalendars > 0) || r.current) && j() && !(!r.current && n.hideOffsetDates) && !W(r) ? E(r) : !1, T = (r) => ({
    dp__cell_offset: !r.current,
    dp__pointer: !n.disabled && !(!r.current && n.hideOffsetDates) && !a(r.value),
    dp__cell_disabled: a(r.value),
    dp__cell_highlight: !v(r) && (ce(r) || S(r)) && !le(r),
    dp__cell_highlight_active: !v(r) && (ce(r) || S(r)) && le(r),
    dp__today: !n.noToday && pe(r.value, p.value) && r.current
  }), L = (r) => ({
    dp__active_date: le(r),
    dp__date_hover: ae(r)
  }), Z = (r) => ({
    ...J(r),
    ..._(r),
    dp__range_between_week: I(r) && n.weekPicker
  }), J = (r) => ({
    dp__range_start: n.multiCalendars > 0 ? r.current && c(r) && j() : c(r) && j(),
    dp__range_end: n.multiCalendars > 0 ? r.current && c(r, !1) && j() : c(r, !1) && j(),
    dp__range_between: I(r) && !n.weekPicker,
    dp__date_hover_start: M(ae(r), r, !0),
    dp__date_hover_end: M(ae(r), r, !1)
  }), _ = (r) => ({
    ...J(r),
    dp__cell_auto_range: ee(r),
    dp__cell_auto_range_start: B(r),
    dp__cell_auto_range_end: Y(r)
  }), C = (r) => n.range ? n.autoRange ? _(r) : n.modelAuto ? { ...L(r), ...J(r) } : J(r) : n.weekPicker ? Z(r) : L(r);
  return {
    setHoverDate: $,
    clearHoverDate: O,
    getDayClassData: (r) => ({
      ...T(r),
      ...C(r),
      [n.dayClass ? n.dayClass(r.value) : ""]: !0,
      [n.calendarCellClassName]: !!n.calendarCellClassName
    })
  };
}, Bl = ["id", "onKeydown"], Yl = {
  key: 0,
  class: "dp__sidebar_left"
}, Vl = {
  key: 1,
  class: "dp__preset_ranges"
}, El = ["onClick"], Ll = {
  key: 2,
  class: "dp__sidebar_right"
}, Fl = {
  key: 3,
  class: "dp__now_wrap"
}, Ul = /* @__PURE__ */ He({
  __name: "DatepickerMenu",
  props: {
    openOnTop: { type: Boolean, default: !1 },
    internalModelValue: { type: [Date, Array], default: null },
    ...tt
  },
  emits: [
    "close-picker",
    "select-date",
    "auto-apply",
    "time-update",
    "flow-step",
    "update-month-year",
    "invalid-select",
    "update:internal-model-value",
    "recalculate-position",
    "invalid-fixed-range",
    "tooltip-open",
    "tooltip-close"
  ],
  setup(e, { expose: n, emit: a }) {
    const t = e, { setMenuFocused: o, setShiftKey: d, control: p } = zn(), { getCalendarDays: $, defaults: O } = Ve(t), R = sn(), F = U(null), A = Dt({
      timePicker: !!(!t.enableTimePicker || t.timePicker || t.monthPicker),
      monthYearInput: !!t.timePicker,
      calendar: !1
    }), c = U([]), M = U([]), W = U(null), Y = U(null), ee = U(0), B = U(!1), E = U(0);
    Ue(() => {
      var z;
      B.value = !0, !((z = t.presetRanges) != null && z.length) && !R["left-sidebar"] && !R["right-sidebar"] && me();
      const h = Me(Y);
      if (h && !t.textInput && !t.inline && (o(!0), v()), h) {
        const $e = (Te) => {
          Object.keys(R).length || Te.preventDefault(), Te.stopImmediatePropagation(), Te.stopPropagation();
        };
        h.addEventListener("pointerdown", $e), h.addEventListener("mousedown", $e);
      }
      window.addEventListener("resize", me);
    }), on(() => {
      window.removeEventListener("resize", me);
    });
    const { arrowRight: N, arrowLeft: j, arrowDown: ae, arrowUp: le } = et(), ce = (h) => {
      h || h === 0 ? M.value[h].triggerTransition(
        Z.value(h),
        J.value(h)
      ) : M.value.forEach(
        (z, $e) => z.triggerTransition(Z.value($e), J.value($e))
      );
    }, v = () => {
      const h = Me(Y);
      h && h.focus({ preventScroll: !0 });
    }, S = () => {
      var h;
      (h = t.flow) != null && h.length && E.value !== -1 && (E.value += 1, a("flow-step", E.value), w());
    }, I = () => {
      E.value = -1;
    }, {
      calendars: T,
      modelValue: L,
      month: Z,
      year: J,
      time: _,
      updateTime: C,
      updateMonthYear: u,
      selectDate: r,
      getWeekNum: m,
      monthYearSelect: y,
      handleScroll: k,
      handleArrow: x,
      handleSwipe: G,
      getMarker: de,
      selectCurrentDate: f,
      presetDateRange: l
    } = Vr(t, a, S, ce, E), { setHoverDate: Q, clearHoverDate: we, getDayClassData: be } = Ol(L, t);
    ut(
      T,
      () => {
        t.openOnTop && setTimeout(() => {
          a("recalculate-position");
        }, 0);
      },
      { deep: !0 }
    );
    const We = st(R, "calendar"), je = st(R, "action"), re = st(R, "timePicker"), Je = st(R, "monthYear"), ze = V(() => t.openOnTop ? "dp__arrow_bottom" : "dp__arrow_top"), X = V(() => Ar(t.yearRange)), ke = V(() => Sr(t.locale, t.monthNameFormat)), me = () => {
      const h = Me(F);
      h && (ee.value = h.getBoundingClientRect().width);
    }, nt = V(() => (h) => $(Z.value(h), J.value(h))), Le = V(
      () => O.value.multiCalendars > 0 && t.range ? [...Array(O.value.multiCalendars).keys()] : [0]
    ), gt = V(
      () => (h) => h === 1
    ), Ut = V(() => t.monthPicker || t.timePicker || t.yearPicker), Ht = V(
      () => ({
        dp__flex_display: O.value.multiCalendars > 0
      })
    ), Mt = V(() => ({
      dp__instance_calendar: O.value.multiCalendars > 0
    })), pt = V(() => ({
      dp__menu_disabled: t.disabled,
      dp__menu_readonly: t.readonly
    })), Wt = V(
      () => (h) => xt(nt, h)
    ), zt = V(
      () => ({
        dp__menu: !0,
        dp__menu_index: !t.inline,
        dp__relative: t.inline,
        [t.menuClassName]: !!t.menuClassName
      })
    ), xt = (h, z) => h.value(z).map(($e) => ({
      ...$e,
      days: $e.days.map((Te) => (Te.marker = de(Te), Te.classData = be(Te), Te))
    })), _t = (h) => {
      h.stopPropagation(), h.stopImmediatePropagation();
    }, yn = () => {
      t.escClose && a("close-picker");
    }, hn = (h, z = !1) => {
      r(h, z), t.spaceConfirm && a("select-date");
    }, Tt = (h) => {
      var z;
      (z = t.flow) != null && z.length && (A[h] = !0, Object.keys(A).filter(($e) => !A[$e]).length || w());
    }, s = (h, z, $e, Te, ...Fe) => {
      if (t.flow[E.value] === h) {
        const q = Te ? z.value[0] : z.value;
        q && q[$e](...Fe);
      }
    }, w = () => {
      s("month", c, "toggleMonthPicker", !0, !0), s("year", c, "toggleYearPicker", !0, !0), s("calendar", W, "toggleTimePicker", !1, !1, !0), s("time", W, "toggleTimePicker", !1, !0, !0);
      const h = t.flow[E.value];
      (h === "hours" || h === "minutes" || h === "seconds") && s(h, W, "toggleTimePicker", !1, !0, !0, h);
    }, K = (h) => {
      if (t.arrowNavigation) {
        if (h === "up")
          return le();
        if (h === "down")
          return ae();
        if (h === "left")
          return j();
        if (h === "right")
          return N();
      } else
        h === "left" || h === "up" ? x("left", 0, h === "up") : x("right", 0, h === "down");
    }, te = (h) => {
      d(h.shiftKey), !t.disableMonthYearSelect && h.code === "Tab" && h.target.classList.contains("dp__menu") && p.value.shiftKeyInMenu && (h.preventDefault(), h.stopImmediatePropagation(), a("close-picker"));
    };
    return n({
      updateMonthYear: u
    }), (h, z) => {
      var $e;
      return g(), fe(ht, {
        appear: "",
        name: ($e = i(O).transitions) == null ? void 0 : $e.menuAppear,
        mode: "out-in",
        css: !!h.transitions
      }, {
        default: oe(() => {
          var Te, Fe;
          return [
            ne("div", {
              id: h.uid ? `dp-menu-${h.uid}` : void 0,
              tabindex: "0",
              ref_key: "dpMenuRef",
              ref: Y,
              role: "dialog",
              class: ve(i(zt)),
              onMouseleave: z[14] || (z[14] = //@ts-ignore
              (...q) => i(we) && i(we)(...q)),
              onClick: _t,
              onKeydown: [
                ie(yn, ["esc"]),
                z[15] || (z[15] = ie(Xe((q) => K("left"), ["prevent"]), ["left"])),
                z[16] || (z[16] = ie(Xe((q) => K("up"), ["prevent"]), ["up"])),
                z[17] || (z[17] = ie(Xe((q) => K("down"), ["prevent"]), ["down"])),
                z[18] || (z[18] = ie(Xe((q) => K("right"), ["prevent"]), ["right"])),
                te
              ]
            }, [
              (h.disabled || h.readonly) && h.inline ? (g(), P("div", {
                key: 0,
                class: ve(i(pt))
              }, null, 2)) : D("", !0),
              !h.inline && !h.teleportCenter ? (g(), P("div", {
                key: 1,
                class: ve(i(ze))
              }, null, 2)) : D("", !0),
              ne("div", {
                class: ve({
                  dp__menu_content_wrapper: ((Te = h.presetRanges) == null ? void 0 : Te.length) || !!h.$slots["left-sidebar"] || !!h.$slots["right-sidebar"]
                })
              }, [
                h.$slots["left-sidebar"] ? (g(), P("div", Yl, [
                  H(h.$slots, "left-sidebar")
                ])) : D("", !0),
                (Fe = h.presetRanges) != null && Fe.length ? (g(), P("div", Vl, [
                  (g(!0), P(ue, null, De(h.presetRanges, (q, dt) => (g(), P("div", {
                    key: dt,
                    style: lt(q.style || {}),
                    class: "dp__preset_range",
                    onClick: (se) => i(l)(q.range, !!q.slot)
                  }, [
                    q.slot ? H(h.$slots, q.slot, {
                      key: 0,
                      presetDateRange: i(l),
                      label: q.label,
                      range: q.range
                    }) : (g(), P(ue, { key: 1 }, [
                      xe(Ce(q.label), 1)
                    ], 64))
                  ], 12, El))), 128))
                ])) : D("", !0),
                ne("div", {
                  class: "dp__instance_calendar",
                  ref_key: "calendarWrapperRef",
                  ref: F,
                  role: "document"
                }, [
                  ne("div", {
                    class: ve(i(Ht))
                  }, [
                    (g(!0), P(ue, null, De(i(Le), (q, dt) => (g(), P("div", {
                      key: q,
                      class: ve(i(Mt))
                    }, [
                      !h.disableMonthYearSelect && !h.timePicker ? (g(), fe(bl, Se({
                        key: 0,
                        ref_for: !0,
                        ref: (se) => {
                          se && (c.value[dt] = se);
                        },
                        months: i(ke),
                        years: i(X),
                        month: i(Z)(q),
                        year: i(J)(q),
                        instance: q,
                        "internal-model-value": e.internalModelValue
                      }, h.$props, {
                        onMount: z[0] || (z[0] = (se) => Tt("monthYearInput")),
                        onResetFlow: I,
                        onUpdateMonthYear: (se) => i(u)(q, se),
                        onMonthYearSelect: i(y),
                        onOverlayClosed: v
                      }), Be({ _: 2 }, [
                        De(i(Je), (se, Zn) => ({
                          name: se,
                          fn: oe((Kt) => [
                            H(h.$slots, se, Ye(qe(Kt)))
                          ])
                        }))
                      ]), 1040, ["months", "years", "month", "year", "instance", "internal-model-value", "onUpdateMonthYear", "onMonthYearSelect"])) : D("", !0),
                      Qe(il, Se({
                        ref_for: !0,
                        ref: (se) => {
                          se && (M.value[dt] = se);
                        },
                        "specific-mode": i(Ut),
                        "get-week-num": i(m),
                        instance: q,
                        "mapped-dates": i(Wt)(q),
                        month: i(Z)(q),
                        year: i(J)(q)
                      }, h.$props, {
                        "flow-step": E.value,
                        "onUpdate:flowStep": z[1] || (z[1] = (se) => E.value = se),
                        onSelectDate: (se) => i(r)(se, !i(gt)(q)),
                        onHandleSpace: (se) => hn(se, !i(gt)(q)),
                        onSetHoverDate: z[2] || (z[2] = (se) => i(Q)(se)),
                        onHandleScroll: (se) => i(k)(se, q),
                        onHandleSwipe: (se) => i(G)(se, q),
                        onMount: z[3] || (z[3] = (se) => Tt("calendar")),
                        onResetFlow: I,
                        onTooltipOpen: z[4] || (z[4] = (se) => h.$emit("tooltip-open", se)),
                        onTooltipClose: z[5] || (z[5] = (se) => h.$emit("tooltip-close", se))
                      }), Be({ _: 2 }, [
                        De(i(We), (se, Zn) => ({
                          name: se,
                          fn: oe((Kt) => [
                            H(h.$slots, se, Ye(qe({ ...Kt })))
                          ])
                        }))
                      ]), 1040, ["specific-mode", "get-week-num", "instance", "mapped-dates", "month", "year", "flow-step", "onSelectDate", "onHandleSpace", "onHandleScroll", "onHandleSwipe"])
                    ], 2))), 128))
                  ], 2),
                  ne("div", null, [
                    h.$slots["time-picker"] ? H(h.$slots, "time-picker", Ye(Se({ key: 0 }, { time: i(_), updateTime: i(C) }))) : (g(), P(ue, { key: 1 }, [
                      h.enableTimePicker && !h.monthPicker && !h.weekPicker ? (g(), fe(Il, Se({
                        key: 0,
                        ref_key: "timePickerRef",
                        ref: W,
                        hours: i(_).hours,
                        minutes: i(_).minutes,
                        seconds: i(_).seconds,
                        "internal-model-value": e.internalModelValue
                      }, h.$props, {
                        onMount: z[6] || (z[6] = (q) => Tt("timePicker")),
                        "onUpdate:hours": z[7] || (z[7] = (q) => i(C)(q)),
                        "onUpdate:minutes": z[8] || (z[8] = (q) => i(C)(q, !1)),
                        "onUpdate:seconds": z[9] || (z[9] = (q) => i(C)(q, !1, !0)),
                        onResetFlow: I,
                        onOverlayClosed: v
                      }), Be({ _: 2 }, [
                        De(i(re), (q, dt) => ({
                          name: q,
                          fn: oe((se) => [
                            H(h.$slots, q, Ye(qe(se)))
                          ])
                        }))
                      ]), 1040, ["hours", "minutes", "seconds", "internal-model-value"])) : D("", !0)
                    ], 64))
                  ])
                ], 512),
                h.$slots["right-sidebar"] ? (g(), P("div", Ll, [
                  H(h.$slots, "right-sidebar")
                ])) : D("", !0),
                h.showNowButton ? (g(), P("div", Fl, [
                  h.$slots["now-button"] ? H(h.$slots, "now-button", {
                    key: 0,
                    selectCurrentDate: i(f)
                  }) : D("", !0),
                  h.$slots["now-button"] ? D("", !0) : (g(), P("button", {
                    key: 1,
                    type: "button",
                    role: "button",
                    class: "dp__now_button",
                    onClick: z[10] || (z[10] = //@ts-ignore
                    (...q) => i(f) && i(f)(...q))
                  }, Ce(h.nowButtonLabel), 1))
                ])) : D("", !0)
              ], 2),
              !h.autoApply || h.keepActionRow ? (g(), fe(Jr, Se({
                key: 2,
                "menu-mount": B.value,
                "calendar-width": ee.value,
                "internal-model-value": e.internalModelValue
              }, h.$props, {
                onClosePicker: z[11] || (z[11] = (q) => h.$emit("close-picker")),
                onSelectDate: z[12] || (z[12] = (q) => h.$emit("select-date")),
                onInvalidSelect: z[13] || (z[13] = (q) => h.$emit("invalid-select"))
              }), Be({ _: 2 }, [
                De(i(je), (q, dt) => ({
                  name: q,
                  fn: oe((se) => [
                    H(h.$slots, q, Ye(qe({ ...se })))
                  ])
                }))
              ]), 1040, ["menu-mount", "calendar-width", "internal-model-value"])) : D("", !0)
            ], 42, Bl)
          ];
        }),
        _: 3
      }, 8, ["name", "css"]);
    };
  }
}), Hl = typeof window < "u" ? window : void 0, nn = () => {
}, Wl = (e) => Jn() ? (Qn(e), !0) : !1, zl = (e, n, a, t) => {
  if (!e)
    return nn;
  let o = nn;
  const d = ut(
    () => i(e),
    ($) => {
      o(), $ && ($.addEventListener(n, a, t), o = () => {
        $.removeEventListener(n, a, t), o = nn;
      });
    },
    { immediate: !0, flush: "post" }
  ), p = () => {
    d(), o();
  };
  return Wl(p), p;
}, xl = (e, n, a, t = {}) => {
  const { window: o = Hl, event: d = "pointerdown" } = t;
  return o ? zl(o, d, ($) => {
    const O = Me(e), R = Me(n);
    !O || !R || O === $.target || $.composedPath().includes(O) || $.composedPath().includes(R) || a($);
  }, { passive: !0 }) : void 0;
}, Kl = /* @__PURE__ */ He({
  __name: "VueDatePicker",
  props: {
    ...tt
  },
  emits: [
    "update:model-value",
    "text-submit",
    "closed",
    "cleared",
    "open",
    "focus",
    "blur",
    "internal-model-change",
    "recalculate-position",
    "flow-step",
    "update-month-year",
    "invalid-select",
    "invalid-fixed-range",
    "tooltip-open",
    "tooltip-close"
  ],
  setup(e, { expose: n, emit: a }) {
    const t = e, o = sn(), d = U(!1), p = It(t, "modelValue"), $ = It(t, "timezone"), O = U(null), R = U(null), F = U(!1), A = U(null), { setMenuFocused: c, setShiftKey: M } = zn(), { clearArrowNav: W } = et(), { validateDate: Y, isValidTime: ee, defaults: B } = Ve(t);
    Ue(() => {
      T(t.modelValue), t.inline || (v(A.value).addEventListener("scroll", u), window.addEventListener("resize", r)), t.inline && (d.value = !0);
    }), on(() => {
      if (!t.inline) {
        const X = v(A.value);
        X && X.removeEventListener("scroll", u), window.removeEventListener("resize", r);
      }
    });
    const E = st(o, "all", t.presetRanges), N = st(o, "input");
    ut(
      [p, $],
      () => {
        T(p.value);
      },
      { deep: !0 }
    );
    const { openOnTop: j, menuPosition: ae, setMenuPosition: le, setInitialPosition: ce, getScrollableParent: v } = Fr(
      O,
      R,
      a,
      t
    ), {
      inputValue: S,
      internalModelValue: I,
      parseExternalModelValue: T,
      emitModelValue: L,
      formatInputValue: Z,
      checkBeforeEmit: J
    } = Er(a, t, F), _ = V(
      () => ({
        dp__main: !0,
        dp__theme_dark: t.dark,
        dp__theme_light: !t.dark,
        dp__flex_display: t.inline,
        dp__flex_display_with_input: t.inlineWithInput
      })
    ), C = V(() => t.dark ? "dp__theme_dark" : "dp__theme_light"), u = () => {
      d.value && (t.closeOnScroll ? l() : le());
    }, r = () => {
      d.value && le();
    }, m = () => {
      !t.disabled && !t.readonly && (ce(), d.value = !0, mt().then(() => {
        le(), d.value && a("open");
      }), d.value || f(), T(t.modelValue));
    }, y = () => {
      S.value = "", f(), a("update:model-value", null), a("cleared"), l();
    }, k = () => {
      const X = I.value;
      return !X || !Array.isArray(X) && Y(X) ? !0 : Array.isArray(X) ? X.length === 2 && Y(X[0]) && Y(X[1]) ? !0 : Y(X[0]) : !1;
    }, x = () => {
      J() && k() ? (L(), l()) : a("invalid-select", I.value);
    }, G = (X) => {
      L(), t.closeOnAutoApply && !X && l();
    }, de = (X = !1) => {
      t.autoApply && ee(I.value) && k() && (t.range && Array.isArray(I.value) ? (t.partialRange || I.value.length === 2) && G(X) : G(X));
    }, f = () => {
      t.textInput || (I.value = null);
    }, l = () => {
      t.inline || (d.value && (d.value = !1, c(!1), M(!1), W(), a("closed"), ce(), S.value && T(p.value)), f(), R.value && R.value.focusInput());
    }, Q = (X, ke) => {
      if (!X) {
        I.value = null;
        return;
      }
      I.value = X, ke && (x(), a("text-submit"));
    }, we = () => {
      t.autoApply && ee(I.value) && L();
    }, be = () => d.value ? l() : m(), We = (X) => {
      I.value = X;
    }, je = V(() => t.textInput && B.value.textInputOptions.format), re = () => {
      je.value && (F.value = !0, Z()), a("focus");
    }, Je = () => {
      je.value && (F.value = !1, Z()), a("blur");
    }, ze = (X) => {
      O.value && O.value.updateMonthYear(0, {
        month: Pn(X.month),
        year: Pn(X.year)
      });
    };
    return xl(
      O,
      R,
      t.onClickOutside ? () => t.onClickOutside(k) : l
    ), n({
      closeMenu: l,
      selectDate: x,
      clearValue: y,
      openMenu: m,
      onScroll: u,
      formatInputValue: Z,
      // exposed for testing purposes
      updateInternalModelValue: We,
      // modify internal modelValue
      setMonthYear: ze
    }), (X, ke) => (g(), P("div", {
      class: ve(i(_)),
      ref_key: "pickerWrapperRef",
      ref: A
    }, [
      Qe(Gr, Se({
        ref_key: "inputRef",
        ref: R,
        "is-menu-open": d.value,
        "input-value": i(S),
        "onUpdate:inputValue": ke[0] || (ke[0] = (me) => rt(S) ? S.value = me : null)
      }, X.$props, {
        onClear: y,
        onOpen: m,
        onSetInputDate: Q,
        onSetEmptyDate: i(L),
        onSelectDate: x,
        onToggle: be,
        onClose: l,
        onFocus: re,
        onBlur: Je
      }), Be({ _: 2 }, [
        De(i(N), (me, nt) => ({
          name: me,
          fn: oe((Le) => [
            H(X.$slots, me, Ye(qe(Le)))
          ])
        }))
      ]), 1040, ["is-menu-open", "input-value", "onSetEmptyDate"]),
      d.value ? (g(), P(ue, { key: 0 }, [
        d.value ? (g(), fe(Ul, Se({
          key: 0,
          ref_key: "dpMenuRef",
          ref: O,
          class: i(C),
          style: i(ae),
          "open-on-top": i(j)
        }, X.$props, {
          "internal-model-value": i(I),
          "onUpdate:internalModelValue": ke[1] || (ke[1] = (me) => rt(I) ? I.value = me : null),
          onClosePicker: l,
          onSelectDate: x,
          onAutoApply: de,
          onTimeUpdate: we,
          onFlowStep: ke[2] || (ke[2] = (me) => X.$emit("flow-step", me)),
          onUpdateMonthYear: ke[3] || (ke[3] = (me) => X.$emit("update-month-year", me)),
          onInvalidSelect: ke[4] || (ke[4] = (me) => X.$emit("invalid-select", i(I))),
          onInvalidFixedRange: ke[5] || (ke[5] = (me) => X.$emit("invalid-fixed-range", me)),
          onRecalculatePosition: i(le),
          onTooltipOpen: ke[6] || (ke[6] = (me) => X.$emit("tooltip-open", me)),
          onTooltipClose: ke[7] || (ke[7] = (me) => X.$emit("tooltip-close", me))
        }), Be({ _: 2 }, [
          De(i(E), (me, nt) => ({
            name: me,
            fn: oe((Le) => [
              H(X.$slots, me, Ye(qe({ ...Le })))
            ])
          }))
        ]), 1040, ["class", "style", "open-on-top", "internal-model-value", "onRecalculatePosition"])) : D("", !0)
      ], 64)) : D("", !0)
    ], 2));
  }
}), Gn = /* @__PURE__ */ (() => {
  const e = Kl;
  return e.install = (n) => {
    n.component("Vue3DatePicker", e);
  }, e;
})(), jl = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: Gn
}, Symbol.toStringTag, { value: "Module" }));
Object.entries(jl).forEach(([e, n]) => {
  e !== "default" && (Gn[e] = n);
});
export {
  Gn as default
};
